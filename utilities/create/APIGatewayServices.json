{
	"info": {
		"_postman_id": "7c2f65bb-40c3-4348-91e2-808da7902e71",
		"name": "API Gateway Services",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "APIs",
			"item": [
				{
					"name": "Administration Service",
					"item": [
						{
							"name": "URL Aliases",
							"item": [
								{
									"name": "Get URL Aliases",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/urlaliases",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"urlaliases"
											]
										},
										"description": "Retrieves all URL Aliases"
									},
									"response": [
										{
											"name": "This status code indicates an error occurred while retrieving the URL Alias from API Gateway.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates invalid request or bad input.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the requested resource is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the fetching of the requested URL alias(es) from API Gateway have been successful.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"urlAliases\": [\n  {\n   \"alias\": \"<string>\",\n   \"package\": \"WmAPIGateway\",\n   \"id\": \"<string>\",\n   \"urlPath\": \"<string>\",\n   \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n   \"association\": \"1\"\n  },\n  {\n   \"alias\": \"<string>\",\n   \"package\": \"WmAPIGateway\",\n   \"id\": \"<string>\",\n   \"urlPath\": \"<string>\",\n   \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n   \"association\": \"1\"\n  }\n ]\n}"
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get URL Aliases by Alias",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseURL}}/urlaliases?alias=test",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"urlaliases"
											],
											"query": [
												{
													"key": "alias",
													"value": "test"
												}
											]
										},
										"description": "Retrieves all URL Aliases"
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the requested resource is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates an error occurred while retrieving the URL Alias from API Gateway.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the fetching of the requested URL alias(es) from API Gateway have been successful.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"urlAliases\": [\n  {\n   \"alias\": \"<string>\",\n   \"package\": \"WmAPIGateway\",\n   \"id\": \"<string>\",\n   \"urlPath\": \"<string>\",\n   \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n   \"association\": \"1\"\n  },\n  {\n   \"alias\": \"<string>\",\n   \"package\": \"WmAPIGateway\",\n   \"id\": \"<string>\",\n   \"urlPath\": \"<string>\",\n   \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n   \"association\": \"1\"\n  }\n ]\n}"
										},
										{
											"name": "This status code indicates invalid request or bad input.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create URL Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alias\": \"URLAlias\",\n    \"urlPath\": \"gateway/getUsers\",\n    \"association\": \"1\",\n    \"package\": \"WmAPIGateway\",\n    \"portMapStringList\": [\n        \"5555#getUser\",\n        \"3334#getUsers\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseURL}}/urlaliases",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"urlaliases"
											]
										},
										"description": "Creates a new URL Alias in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the URL alias has been successfully created in API Gateway.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"alias\": \"<string>\",\n \"package\": \"WmAPIGateway\",\n \"id\": \"<string>\",\n \"urlPath\": \"<string>\",\n \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n \"association\": \"1\"\n}"
										},
										{
											"name": "This status code indicates an error occurred while persisting the URL Alias in the API Gateway.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates invalid request or bad input.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the requested resource is not found.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update URL Alias",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"alias\": \"URLAlias\",\n    \"urlPath\": \"gateway/getUser\",\n    \"association\": \"1\",\n    \"package\": \"WmAPIGateway\",\n    \"portMapStringList\": [\n        \"5555#getUser\",\n        \"3334#getUsers\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseURL}}/urlaliases",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"urlaliases"
											]
										},
										"description": "Updates an existing URL Alias in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that the URL alias has been successfully updated in API Gateway.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"alias\": \"<string>\",\n \"package\": \"WmAPIGateway\",\n \"id\": \"<string>\",\n \"urlPath\": \"<string>\",\n \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n \"association\": \"1\"\n}"
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates invalid request or bad input.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the requested resource is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates an error occurred while persisting the URL Alias in the API Gateway.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"alias\": \"<string>\",\n    \"package\": \"WmAPIGateway\",\n    \"urlPath\": \"<string>\",\n    \"portList\": \"[5555#gateway/ws/soapapi/v1/getOperation,5556#gateway/ws/soapapi/v2/testOp]\",\n    \"association\": \"1\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/urlaliases",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete URL Alias by Alias",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/urlaliases?alias=URLAlias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"urlaliases"
											],
											"query": [
												{
													"key": "alias",
													"value": "URLAlias",
													"description": "(Required) The name of the URL alias to be deleted."
												}
											]
										},
										"description": "The method deletes an URL alias in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that the URL alias has been successfully deleted in API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates invalid request or bad input.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the requested resource is not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates an error occurred while persisting the URL Alias in the API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/urlaliases?alias=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"urlaliases"
													],
													"query": [
														{
															"key": "alias",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Portal Gateways",
							"item": [
								{
									"name": "Get All API Portal Configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/portalGateways",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"portalGateways"
											]
										},
										"description": "This API allows you to retrieve API Portal configurations available in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that all the API Portal configurations are retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n\\t\\\"portalGatewayResponse\\\": [{\\r\\n\\t\\t\\t\\\"id\\\": \\\"c7059719-e434-4b45-9b09-b5176fa8b787\\\",\\r\\n\\t\\t\\t\\\"gatewayName\\\": \\\"myportal\\\",\\r\\n\\t\\t\\t\\\"gatewayUsername\\\": \\\"adminUser\\\",\\r\\n\\t\\t\\t\\\"gatewayPassword\\\": \\\"*****\\\",\\r\\n\\t\\t\\t\\\"gatewayURL\\\": \\\"http://apigateway_host:5555\\\",\\r\\n\\t\\t\\t\\\"refId\\\": \\\"2609fc40-87d2-11e7-1298-d481d790920c\\\",\\r\\n\\t\\t\\t\\\"externalPortal\\\": {\\r\\n\\t\\t\\t\\t\\\"type\\\": \\\"apiportal\\\",\\r\\n\\t\\t\\t\\t\\\"endpointTenant\\\": \\\"default\\\",\\r\\n\\t\\t\\t\\t\\\"endpointURL\\\": \\\"http://api_portal_host/\\\",\\r\\n\\t\\t\\t\\t\\\"endpointUsername\\\": \\\"adminUser\\\",\\r\\n\\t\\t\\t\\t\\\"endpointPassword\\\": \\\"*****\\\"\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\\\"version\\\": \\\"1.0\\\",\\r\\n\\t\\t\\t\\\"published\\\": true\\r\\n\\t\\t}\\r\\n\\r\\n\\t]\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create API Portal Configuration",
									"request": {
										"auth": {
											"type": "basic"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"gatewayName\": \"API Portal\",\n    \"gatewayUsername\": \"Administrator\",\n    \"gatewayPassword\": \"********************************\",\n    \"gatewayURL\": \"http://localhost:5555\",\n    \"externalPortal\": {\n        \"endpointTenant\": \"default\",\n        \"endpointURL\": \"https://apiportal.com/\",\n        \"endpointUsername\": \"support@softwareag.com\",\n        \"endpointPassword\": \"********************************\",\n        \"type\": \"apiportal\"\n    },\n    \"version\": \"10.5.0.0.1\",\n    \"published\": false\n}"
										},
										"url": {
											"raw": "{{baseURL}}/portalGateways",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"portalGateways"
											]
										},
										"description": "This method allows you to create the API Portal configuration in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that the user has missed some mandatory field that is required to create the API Portal configuration.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that an error occurred while processing the information in API Gateway or while communicating with API Portal.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the API Portal configuration is created successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n\\t\\\"portalGatewayResponse\\\": [{\\r\\n\\t\\t\\\"id\\\": \\\"c7059719-e434-4b45-9b09-b5176fa8b787\\\",\\r\\n\\t\\t\\\"gatewayName\\\": \\\"myportal\\\",\\r\\n\\t\\t\\\"gatewayUsername\\\": \\\"adminUser\\\",\\r\\n\\t\\t\\\"gatewayPassword\\\": \\\"*****\\\",\\r\\n\\t\\t\\\"gatewayURL\\\": \\\"http://apigateway_host:5555\\\",\\r\\n\\t\\t\\\"refId\\\": \\\"2609fc40-87d2-11e7-1298-d481d790920c\\\",\\r\\n\\t\\t\\\"externalPortal\\\": {\\r\\n\\t\\t\\t\\\"type\\\": \\\"apiportal\\\",\\r\\n\\t\\t\\t\\\"endpointTenant\\\": \\\"default\\\",\\r\\n\\t\\t\\t\\\"endpointURL\\\": \\\"http://apiportal_host/\\\",\\r\\n\\t\\t\\t\\\"endpointUsername\\\": \\\"adminUser\\\",\\r\\n\\t\\t\\t\\\"endpointPassword\\\": \\\"*****\\\"\\r\\n\\t\\t},\\r\\n\\t\\t\\\"version\\\": \\\"1.0\\\",\\r\\n\\t\\t\\\"published\\\": true\\r\\n\\t}]\\r\\n}\""
										}
									]
								},
								{
									"name": "Get API Portal Metadata",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/portalGateways/communities?portalGatewayId=d663e093-b39a-4330-93b9-fcb68d1a2c3d&apiId=2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"portalGateways",
												"communities"
											],
											"query": [
												{
													"key": "portalGatewayId",
													"value": "d663e093-b39a-4330-93b9-fcb68d1a2c3d",
													"description": "(Required) Id of the API Portal configuration for retrieval of the community information"
												},
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) Id of the API published from API Gateway to API Portal"
												}
											]
										},
										"description": "This API allows you to retrieve the details about communities in API Portal. An API can be published from API Gateway to any of the communities available in API Portal"
									},
									"response": [
										{
											"name": "This status code indicates that the the community information from the API Portal is retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/communities?portalGatewayId=<string>&apiId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														"communities"
													],
													"query": [
														{
															"key": "portalGatewayId",
															"value": "<string>"
														},
														{
															"key": "apiId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n\\t\\\"portalGatewayResponse\\\": {\\r\\n\\t\\t\\\"provider\\\": \\\"mcprga02\\\",\\r\\n\\t\\t\\\"communities\\\": {\\r\\n\\t\\t\\t\\\"portalCommunities\\\": [{\\r\\n\\t\\t\\t\\t\\\"id\\\": \\\"3bdf8005-5685-3ef5-b132-de4681963fb6\\\",\\r\\n\\t\\t\\t\\t\\\"name\\\": \\\"Public Community\\\",\\r\\n\\t\\t\\t\\t\\\"description\\\": \\\"Public Community\\\",\\r\\n\\t\\t\\t\\t\\\"status\\\": \\\"NEW\\\"\\r\\n\\t\\t\\t}]\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/communities?portalGatewayId=<string>&apiId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														"communities"
													],
													"query": [
														{
															"key": "portalGatewayId",
															"value": "<string>"
														},
														{
															"key": "apiId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Published Packages",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/portalGateways/packages?portalGatewayId=d663e093-b39a-4330-93b9-fcb68d1a2c3d&apiId=2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"portalGateways",
												"packages"
											],
											"query": [
												{
													"key": "portalGatewayId",
													"value": "d663e093-b39a-4330-93b9-fcb68d1a2c3d",
													"description": "(Required) Id of the API Portal configuration for retrieval of published packages information"
												},
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) Id of the API published from API Gateway to API Portal"
												}
											]
										},
										"description": "This API allows you to retrieve the details of the published packages that the API is part of"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/packages?portalGatewayId=<string>&apiId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														"packages"
													],
													"query": [
														{
															"key": "portalGatewayId",
															"value": "<string>"
														},
														{
															"key": "apiId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/packages?portalGatewayId=<string>&apiId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														"packages"
													],
													"query": [
														{
															"key": "portalGatewayId",
															"value": "<string>"
														},
														{
															"key": "apiId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n \"<object>\"\n]"
										}
									]
								},
								{
									"name": "Get API Portal Configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/portalGateways/:portalGatewayId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"portalGateways",
												":portalGatewayId"
											],
											"variable": [
												{
													"key": "portalGatewayId",
													"value": "9fc21565-8cb0-48b9-9616-695c120fda09",
													"description": "(Required) Id of the API Portal configuration for retrieval"
												}
											]
										},
										"description": "This API allows you to retrieve an API Portal configuration in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that the API Portal configuration is retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/:portalGatewayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														":portalGatewayId"
													],
													"variable": [
														{
															"key": "portalGatewayId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n\\t\\\"portalGatewayResponse\\\": {\\r\\n\\t\\t\\\"id\\\": \\\"c7059719-e434-4b45-9b09-b5176fa8b787\\\",\\r\\n\\t\\t\\\"gatewayName\\\": \\\"mygateway\\\",\\r\\n\\t\\t\\\"gatewayUsername\\\": \\\"adminUser\\\",\\r\\n\\t\\t\\\"gatewayPassword\\\": \\\"*****\\\",\\r\\n\\t\\t\\\"gatewayURL\\\": \\\"http://apigateway_host:5555\\\",\\r\\n\\t\\t\\\"refId\\\": \\\"2609fc40-87d2-11e7-1298-d481d790920c\\\",\\r\\n\\t\\t\\\"externalPortal\\\": {\\r\\n\\t\\t\\t\\\"type\\\": \\\"apiportal\\\",\\r\\n\\t\\t\\t\\\"endpointTenant\\\": \\\"default\\\",\\r\\n\\t\\t\\t\\\"endpointURL\\\": \\\"http://apiportal_host/\\\",\\r\\n\\t\\t\\t\\\"endpointUsername\\\": \\\"adminUser\\\",\\r\\n\\t\\t\\t\\\"endpointPassword\\\": \\\"*****\\\"\\r\\n\\t\\t},\\r\\n\\t\\t\\\"version\\\": \\\"1.0\\\",\\r\\n\\t\\t\\\"published\\\": true\\r\\n\\t}\\r\\n}\""
										},
										{
											"name": "This status code indicates that the API Portal configuration is not available.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/:portalGatewayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														":portalGatewayId"
													],
													"variable": [
														{
															"key": "portalGatewayId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/:portalGatewayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														":portalGatewayId"
													],
													"variable": [
														{
															"key": "portalGatewayId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update API Portal Configuration",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"9fc21565-8cb0-48b9-9616-695c120fda09\",\n    \"gatewayName\": \"API Portal\",\n    \"gatewayUsername\": \"Administrator\",\n    \"gatewayPassword\": \"********************************\",\n    \"gatewayURL\": \"http://localhost:5555\",\n    \"externalPortal\": {\n        \"endpointTenant\": \"default\",\n        \"endpointURL\": \"https://apiportal.com/\",\n        \"endpointUsername\": \"support@softwareag.com\",\n        \"endpointPassword\": \"********************************\",\n        \"type\": \"apiportal\"\n    },\n    \"version\": \"10.5.0.0.1\",\n    \"published\": false\n}"
										},
										"url": {
											"raw": "{{baseURL}}/portalGateways/:portalGatewayId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"portalGateways",
												":portalGatewayId"
											],
											"variable": [
												{
													"key": "portalGatewayId",
													"value": "9fc21565-8cb0-48b9-9616-695c120fda09",
													"description": "(Required) Id of the API Portal configuration for update"
												}
											]
										},
										"description": "This API allows you to update API Portal configuration information in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that the API Portal configuration is not available.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/:portalGatewayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														":portalGatewayId"
													],
													"variable": [
														{
															"key": "portalGatewayId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/:portalGatewayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														":portalGatewayId"
													],
													"variable": [
														{
															"key": "portalGatewayId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that an error occurred while processing the information in API Gateway or while communicating with API Portal.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/:portalGatewayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														":portalGatewayId"
													],
													"variable": [
														{
															"key": "portalGatewayId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the user has missed some mandatory field that is required to update the API Portal configuration.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/:portalGatewayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														":portalGatewayId"
													],
													"variable": [
														{
															"key": "portalGatewayId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the API Portal configuration is updated successfully.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/:portalGatewayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														":portalGatewayId"
													],
													"variable": [
														{
															"key": "portalGatewayId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n\\t\\\"portalGatewayResponse\\\": [{\\r\\n\\t\\t\\\"id\\\": \\\"c7059719-e434-4b45-9b09-b5176fa8b787\\\",\\r\\n\\t\\t\\\"gatewayName\\\": \\\"myportal\\\",\\r\\n\\t\\t\\\"gatewayUsername\\\": \\\"adminUser\\\",\\r\\n\\t\\t\\\"gatewayPassword\\\": \\\"*****\\\",\\r\\n\\t\\t\\\"gatewayURL\\\": \\\"http://apigateway_host:5555\\\",\\r\\n\\t\\t\\\"refId\\\": \\\"2609fc40-87d2-11e7-1298-d481d790920c\\\",\\r\\n\\t\\t\\\"externalPortal\\\": {\\r\\n\\t\\t\\t\\\"type\\\": \\\"apiportal\\\",\\r\\n\\t\\t\\t\\\"endpointTenant\\\": \\\"default\\\",\\r\\n\\t\\t\\t\\\"endpointURL\\\": \\\"http://apiportal_host/\\\",\\r\\n\\t\\t\\t\\\"endpointUsername\\\": \\\"adminUser\\\",\\r\\n\\t\\t\\t\\\"endpointPassword\\\": \\\"*****\\\"\\r\\n\\t\\t},\\r\\n\\t\\t\\\"version\\\": \\\"1.0\\\",\\r\\n\\t\\t\\\"published\\\": true\\r\\n\\t}]\\r\\n}\""
										}
									]
								},
								{
									"name": "Delete API Portal Configuration",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/portalGateways/:portalGatewayId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"portalGateways",
												":portalGatewayId"
											],
											"variable": [
												{
													"key": "portalGatewayId",
													"value": "9fc21565-8cb0-48b9-9616-695c120fda09",
													"description": "(Required) Id of the API Portal configuration for delete."
												}
											]
										},
										"description": "This API allows you to delete an API Portal configuration in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/:portalGatewayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														":portalGatewayId"
													],
													"variable": [
														{
															"key": "portalGatewayId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the API Portal configuration is deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/portalGateways/:portalGatewayId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"portalGateways",
														":portalGatewayId"
													],
													"variable": [
														{
															"key": "portalGatewayId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "API Transactions",
							"item": [
								{
									"name": "Download API Transaction",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apitransactions?duration=3d&startDate=2020-04-18 00:00:00&endDate=2020-04-21 00:00:00&eventType=ALL",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apitransactions"
											],
											"query": [
												{
													"key": "duration",
													"value": "3d",
													"description": "All the api transactions that are older than the value specified will be downloaded. Ex: duration='2d'. Possible values are d(days),M(months),y(years), lets say a. 2d means 2days   b. 1M  means 1 month   c. 1y means 1 year. Either one of (startDate&endDate) or duration is a mandatory parameter"
												},
												{
													"key": "startDate",
													"value": "2020-04-18 00:00:00",
													"description": "(Required) This is a date parameter. All the specified api transactions which satiesfies the startDate and endDate criteria will be downloaded. Example value: startDate=2017-12-18 00:00:00 and endDate=2017-12-19 00:00:00. Either one of (startDate and endDate) or duration is a mandatory parameter"
												},
												{
													"key": "endDate",
													"value": "2020-04-21 00:00:00",
													"description": "(Required) This is a date parameter. All the specified api transactions which satiesfies the startDate and endDate criteria will be downloaded. Example value: startDate=2017-12-18 00:00:00 and endDate=2017-12-19 00:00:00. Either one of (startDate and endDate) or duration is a mandatory parameter"
												},
												{
													"key": "eventType",
													"value": "ALL",
													"description": "(Required) This parameter is used to specify the event type that needs to be downloaded. specify any specific type to download that particular event type alone. Ex: eventType=transactionalEvents. The available event types are as follows 1.transactionalEvents 2.monitorEvents 3.errorEvents 4.performanceMetrics 5.threatProtectionEvents 6.lifecycleEvents 7.policyViolationEvents 8.auditLogs 9.applicationlogs"
												}
											]
										},
										"description": "The GET method is used to download the api transactions data and data to be downloaded is filtered based on the input parameters. The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation."
									},
									"response": [
										{
											"name": "This status code indicates that the request URL is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions?duration=<string>&startDate=<string>&endDate=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions"
													],
													"query": [
														{
															"key": "duration",
															"value": "<string>"
														},
														{
															"key": "startDate",
															"value": "<string>"
														},
														{
															"key": "endDate",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This response indicates that the server has encountered an error while downloading the api transactions. ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions?duration=<string>&startDate=<string>&endDate=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions"
													],
													"query": [
														{
															"key": "duration",
															"value": "<string>"
														},
														{
															"key": "startDate",
															"value": "<string>"
														},
														{
															"key": "endDate",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This response indicates that the api transactions zip file has been downloaded successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions?duration=<string>&startDate=<string>&endDate=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions"
													],
													"query": [
														{
															"key": "duration",
															"value": "<string>"
														},
														{
															"key": "startDate",
															"value": "<string>"
														},
														{
															"key": "endDate",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/zip"
												}
											],
											"cookie": [],
											"body": "attachment; filename=\"auditlogs.zip\""
										},
										{
											"name": "This response indicates that invalid credentials have been provided for the request.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions?duration=<string>&startDate=<string>&endDate=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions"
													],
													"query": [
														{
															"key": "duration",
															"value": "<string>"
														},
														{
															"key": "startDate",
															"value": "<string>"
														},
														{
															"key": "endDate",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Purge API Transactions",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apitransactions?action=purge&until=2020-04-21%2008:00:00&olderThan=&eventType=ALL",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apitransactions"
											],
											"query": [
												{
													"key": "action",
													"value": "purge",
													"description": "This is an optional query parameter. Sometimes its better to take backup before purging the data . If you specify the action value as \"archiveAndPurge\", API Gateway will perform an archive before purging the data."
												},
												{
													"key": "until",
													"value": "2020-04-21%2008:00:00",
													"description": "(Required) This is a date parameter. All the specified api transactions until the given date will be purged. Example value: until=2017-12-18 00:00:00. Either one of until or duration is a mandatory parameter"
												},
												{
													"key": "olderThan",
													"value": "",
													"description": "All the api transactions that are older than the value specified will be purged. Ex: olderThan='2d'. Possible values are d(days),M(months),y(years), lets say a. 2d means 2days   b. 1M  means 1 month   c. 1y means 1 year"
												},
												{
													"key": "eventType",
													"value": "ALL",
													"description": "(Required) This parameter is used to specify the event type that needs to be purged. Specify eventType=ALL to purge all the events and specify any specific type to purge that particular event type alone. Ex: eventType=transactionalEvents. The available event types are as follows 1.transactionalEvents 2.monitorEvents 3.errorEvents 4.performanceMetrics 5.threatProtectionEvents 6.lifecycleEvents 7.policyViolationEvents 8.auditLogs 9.applicationlogs"
												}
											]
										},
										"description": "The DELETE method is used to purge the api transactions data and data to be purged is filtered based on the input parameters. This method returns the job id as response and the job id is used to track the job status. See /apitransactions/jobs/{jobId} for more details. The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation."
									},
									"response": [
										{
											"name": "This status code indicates that the request URL is not valid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions?action=<string>&until=<string>&olderThan=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions"
													],
													"query": [
														{
															"key": "action",
															"value": "<string>"
														},
														{
															"key": "until",
															"value": "<string>"
														},
														{
															"key": "olderThan",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This response indicates that invalid credentials have been provided for the request.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions?action=<string>&until=<string>&olderThan=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions"
													],
													"query": [
														{
															"key": "action",
															"value": "<string>"
														},
														{
															"key": "until",
															"value": "<string>"
														},
														{
															"key": "olderThan",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This response indicates that the purge process has been started and returned the jobId to track it further.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions?action=<string>&until=<string>&olderThan=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions"
													],
													"query": [
														{
															"key": "action",
															"value": "<string>"
														},
														{
															"key": "until",
															"value": "<string>"
														},
														{
															"key": "olderThan",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"jobId\\\": \\\"1504177213671\\\"\\r\\n}\""
										},
										{
											"name": "This response indicates that the server has encountered an error while purging the api transactions. ",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions?action=<string>&until=<string>&olderThan=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions"
													],
													"query": [
														{
															"key": "action",
															"value": "<string>"
														},
														{
															"key": "until",
															"value": "<string>"
														},
														{
															"key": "olderThan",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Mappings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apitransactions/typedefinitions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apitransactions",
												"typedefinitions"
											]
										},
										"description": "Returns the list of runtime event types. The available event types are as follows 1.transactionalEvents 2.monitorEvents 3.errorEvents 4.performanceMetrics 5.threatProtectionEvents 6.lifecycleEvents 7.policyViolationEvents 8.auditLogs 9.applicationlogs. You can use these eventType to scope the archive/purge operation.  The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation."
									},
									"response": [
										{
											"name": "This response indicates that the list of type definitions has been returned to the requestor.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/typedefinitions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"typedefinitions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"Mappings\\\": [\\r\\n        \\\"performanceMetrics\\\",\\r\\n        \\\"monitorEvents\\\",\\r\\n        \\\"transactionalEvents\\\",\\r\\n        \\\"policyViolationEvents\\\",\\r\\n        \\\"errorEvents\\\",\\r\\n        \\\"threatProtectionEvents\\\",\\r\\n        \\\"lifecycleEvents\\\",\\r\\n        \\\"auditLogs\\\"\\r\\n,\\r\\n        \\\"applicationlogs\\\"\\r\\n     ]\\r\\n}\""
										},
										{
											"name": "This response indicates that invalid credentials have been provided for the request.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/typedefinitions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"typedefinitions"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This response indicates that the server has encountered an error while returning the list of type definitions. ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/typedefinitions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"typedefinitions"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "List All Archives",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apitransactions/archives",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apitransactions",
												"archives"
											]
										},
										"description": "This GET method is used to fetch the details of existing archive files and response of this method would be the list of archive file names. Select one from the list of archive file names returned by this method and use the POST /apitransactions/archives/{fileName} method to restore.The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation."
									},
									"response": [
										{
											"name": "This response indicates that invalid credentials have been provided for the request.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/archives",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"archives"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This response indicates that the list of archive file names returned successfully. The response body is the list of archive file names.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/archives",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"archives"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"archiveFiles\\\": [\\r\\n        \\\"default-2017-08-29-1504011306456\\\",\\r\\n        \\\"default-2017-08-29-1504012415981\\\"\\r\\n    ]\\r\\n}\""
										},
										{
											"name": "This response indicates that the server has encountered an error while returning the list of archive file names",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/archives",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"archives"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "API Transactions Archive Based On Duration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apitransactions/archives?until=2020-04-21%2008:00:00&olderThan=&eventType=ALL",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apitransactions",
												"archives"
											],
											"query": [
												{
													"key": "until",
													"value": "2020-04-21%2008:00:00",
													"description": "(Required) This is a date parameter. All the specified api transactions until the given date will be purged. Example value: until=2017-12-18 00:00:00. Either one of until or duration is a mandatory parameter"
												},
												{
													"key": "olderThan",
													"value": "",
													"description": "All the api transactions that are older than the value specified will be purged. Ex: olderThan='2d'. Possible values are d(days),M(months),y(years), lets say a. 2d means 2days b. 1M means 1 month c. 1y means 1 year"
												},
												{
													"key": "eventType",
													"value": "ALL",
													"description": "(Required) This parameter is used to specify the api transaction type. Specify eventType=ALL to archive all the events and specify any specific type to archive that particular event type alone. Ex: eventType=transactionalEvents. The available event types are as follows 1.transactionalEvents 2.monitorEvents 3.errorEvents 4.performanceMetrics 5.threatProtectionEvents 6.lifecycleEvents 7.policyViolationEvents 8.auditLogs 9.applicationlogs"
												}
											]
										},
										"description": "This method is used to archive the runtime events and metrics. You can additionally scope the archive data using input parameter filters. This method returns the job id as the response which will be used to know the status of the job. \n\nUse the GET /apitransactions/jobs/{jobId} to know the status, file name and use POST /apitransactions/archives/{fileName} method to restore. The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation."
									},
									"response": [
										{
											"name": "This status code indicates that the request URL is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/archives?until=<string>&olderThan=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"archives"
													],
													"query": [
														{
															"key": "until",
															"value": "<string>"
														},
														{
															"key": "olderThan",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This response indicates that the archiving process has been started and returned the jobId to track it further.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/archives?until=<string>&olderThan=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"archives"
													],
													"query": [
														{
															"key": "until",
															"value": "<string>"
														},
														{
															"key": "olderThan",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"jobId\\\": \\\"1504177213671\\\"\\r\\n}\""
										},
										{
											"name": "This response indicates that invalid credentials have been provided for the request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/archives?until=<string>&olderThan=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"archives"
													],
													"query": [
														{
															"key": "until",
															"value": "<string>"
														},
														{
															"key": "olderThan",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This response indicates that the server has encountered an error while archiving the api transactions. ",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/archives?until=<string>&olderThan=<string>&eventType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"archives"
													],
													"query": [
														{
															"key": "until",
															"value": "<string>"
														},
														{
															"key": "olderThan",
															"value": "<string>"
														},
														{
															"key": "eventType",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Restore Data",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apitransactions/archives/:fileName",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apitransactions",
												"archives",
												":fileName"
											],
											"variable": [
												{
													"key": "fileName",
													"value": "default-2020-04-21-1587455014170",
													"description": "(Required) This parameter indicates the file name to restore. Ex: fileName=default-2017-08-29-1504011306456."
												}
											]
										},
										"description": "This method is used to restore the runtime data by specifying the archive file name. See GET /apitransactions/archives/ to know how to get the existing archive file names for more details. This method returns the job id as a response to track the status further. The user should be part of API-Gateway-Administrators group or else should have 'Manage purge and restore runtime events' privilege to perform this operation."
									},
									"response": [
										{
											"name": "This response indicates that the restore process has been started and returned the jobId to track it further.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/archives/:fileName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"archives",
														":fileName"
													],
													"variable": [
														{
															"key": "fileName"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"jobId\\\": \\\"1504177213671\\\"\\r\\n}\""
										},
										{
											"name": "This response indicates that the server has encountered an error while restoring the archive file. ",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/archives/:fileName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"archives",
														":fileName"
													],
													"variable": [
														{
															"key": "fileName"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This response indicates that invalid credentials have been provided for the request.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apitransactions/archives/:fileName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apitransactions",
														"archives",
														":fileName"
													],
													"variable": [
														{
															"key": "fileName"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Configurations",
							"item": [
								{
									"name": "Load Balancer",
									"item": [
										{
											"name": "Get Load Balancers",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/configurations/loadBalancer",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"configurations",
														"loadBalancer"
													]
												},
												"description": "The method retrieves the details of the Load Balancer configuration in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that the user is not a valid API Gateway user for retrieving the Load Balancer configuration.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/loadBalancer",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"loadBalancer"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the Load Balancer configurations are retrieved successfully. ",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/loadBalancer",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"loadBalancer"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"webAppUrl\\\": \\\"\\\",\\r\\n    \\\"httpUrls\\\": [\\r\\n        \\\"http://localhost:8080\\\"\\r\\n    ],\\r\\n    \\\"httpsUrls\\\": [\\r\\n        \\\"https://localhost:443\\\"\\r\\n    ],\\r\\n    \\\"websocketUrls\\\": []\\r\\n}\""
												},
												{
													"name": "This status code indicates that the loadBalancer not mentioned in API access uri path.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/loadBalancer",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"loadBalancer"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\"Missing mandatory field configId in request.\\\"\\r\\n}\""
												}
											]
										},
										{
											"name": "Update Load Balancers",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"webAppUrl\": \"http://localhost:9072\",\n    \"websocketUrls\": [\n        \"ws://localhost:4532\"\n    ],\n    \"httpsUrls\": [\n        \"https://localhost:5555\"\n    ],\n    \"httpUrls\": [\n        \"http://localhost:5555\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseURL}}/configurations/loadBalancer",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"configurations",
														"loadBalancer"
													]
												},
												"description": "The method is used to update the details of the load Balancer configuration in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that the Load Balancer configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"httpUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"httpsUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"websocketUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webAppUrl\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/loadBalancer",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"loadBalancer"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"webAppUrl\\\": \\\"\\\",\\r\\n    \\\"httpUrls\\\": [\\r\\n        \\\"http://localhost:8080\\\"\\r\\n    ],\\r\\n    \\\"httpsUrls\\\": [\\r\\n        \\\"https://localhost:443\\\"\\r\\n    ],\\r\\n    \\\"websocketUrls\\\": []\\r\\n}\""
												},
												{
													"name": "This status code indicates that the request body is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"httpUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"httpsUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"websocketUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webAppUrl\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/loadBalancer",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"loadBalancer"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n\\\"errorDetails\\\": \\\" Invalid property key found in request payload.\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage General Administration\" functional privilege to access this API.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"httpUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"httpsUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"websocketUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webAppUrl\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/loadBalancer",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"loadBalancer"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "White Listing IPs",
									"item": [
										{
											"name": "Get White Listed IPs",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/configurations/whiteListingIPs",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"configurations",
														"whiteListingIPs"
													]
												},
												"description": "The method retrieves the details of the whitelisting IPs configuration in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that the user is not a valid API Gateway user for retrieving the whitelistingIPs configuration.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/whiteListingIPs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"whiteListingIPs"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the whitelistingIPs configurations are retrieved successfully.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/whiteListingIPs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"whiteListingIPs"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"privateIPs\\\": [\\r\\n        \\\"127.0.0.1\\\",\\r\\n        \\\"10.0.0.0-10.255.255.255\\\",\\r\\n        \\\"172.16.0.0-172.31.255.255 \\\",\\r\\n        \\\"192.168.0.0-192.168.255.255\\\"\\r\\n    ]\\r\\n}\""
												}
											]
										},
										{
											"name": "Update Whitelisted IPs",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"privateIPs\": [\r\n        \"0.0.0.0-0.255.255.255\",\r\n        \"10.0.0.0-10.255.255.255\",\r\n        \"100.64.0.0-100.127.255.255\",\r\n        \"127.0.0.0-127.255.255.255\",\r\n        \"172.16.0.0-172.31.255.255\",\r\n        \"192.168.0.0-192.168.255.255\"\r\n    ],\r\n    \"privateV6IPs\": [\r\n        \"fc00:0:0:0:0:0:0:0-fdff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\",\r\n        \"0:0:0:0:0:0:0:0-0:0:0:0:0:0:0:1\"\r\n    ]\r\n}"
												},
												"url": {
													"raw": "{{baseURL}}/configurations/whiteListingIPs",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"configurations",
														"whiteListingIPs"
													]
												},
												"description": "The method is used to update the details of the whitelisting IPs configuration in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that the request body is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"privateIPs\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/whiteListingIPs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"whiteListingIPs"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage General Administration\" functional privilege to access this API.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"privateIPs\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/whiteListingIPs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"whiteListingIPs"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the whitelisting IPs configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"privateIPs\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/whiteListingIPs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"whiteListingIPs"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"privateIPs\\\": [\\r\\n        \\\"127.0.0.1\\\",\\r\\n        \\\"10.0.0.0-10.255.255.255\\\",\\r\\n        \\\"172.16.0.0-172.31.255.255 \\\",\\r\\n        \\\"192.168.0.0-192.168.255.255\\\"\\r\\n    ]\\r\\n}\""
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Gateway Destination Config",
									"item": [
										{
											"name": "Get Gateway As Destination",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/configurations/gatewayDestinationConfig",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"configurations",
														"gatewayDestinationConfig"
													]
												},
												"description": "The method retrieves the details of the API Gateway destination. API Gateway can publish runtime events(example: policy violation, log invocation, error events etc), design time events (example: audit log events) and metrics data. By default, error events, lifecycle events, policy violation event, audit logs and performance data are published to API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that the user is not a valid API Gateway user for retrieving the API Gateway destination configuration.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/gatewayDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"gatewayDestinationConfig"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the API Gateway destination configurations are retrieved successfully. SendErrorEvent indicates whether API Gateway has to send error events to API Gateway destination. SendLifecycleEvent indicates whether API Gateway has to send lifecycle events to API Gateway destination. SendPolicyViolationEvent indicates whether API Gateway has to send policy violation events to API Gateway destination. SendPerformanceMetrics indicates whether API Gateway has to send performance metrics to API Gateway destination. MetricsPublishInterval indicates the interval at which the performance metrics will be published (value has to be between 1-60), default being 60. sendAuditlogAliasManagementEvent indicates whether API Gateway has to send Alias Management related audit logs to API Gateway destination. sendAuditlogPackageManagementEvent indicates whether API Gateway has to send Package Management related audit logs to API Gateway destination. sendAuditlogRuntimeDataManagementEvent indicates whether API Gateway has to send RuntimeData Management related audit logs to API Gateway destination. sendAuditlogPolicyManagementEvent indicates whether API Gateway has to send Policy Management related audit logs to API Gateway destination. sendAuditlogPlanManagementEvent indicates whether API Gateway has to send Plan Management related audit logs to API Gateway destination.  sendAuditlogApprovalManagementEvent indicates whether API Gateway has to send Approval Management related audit logs to API Gateway destination. sendAuditlogUserManagementEvent indicates whether API Gateway has to send User Management related audit logs to API Gateway destination. sendAuditlogApplicationManagementEvent indicates whether API Gateway has to send Application Management related audit logs to API Gateway destination. sendAuditlogAdministrationEvent indicates whether API Gateway has to send Administration related audit logs to API Gateway destination. sendAuditlogGroupManagementEvent indicates whether API Gateway has to send Group Management related audit logs to API Gateway destination. sendAuditlogAccessProfileManagementEvent indicates whether API Gateway has to send Team Management related audit logs to API Gateway destination. sendAuditlogAPIManagementEvent indicates whether API Gateway has to send API Management related audit logs to API Gateway destination. sendAuditlogPromotionManagementEvent indicates whether API Gateway has to send Promotion Management related audit logs to API Gateway destination.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/gatewayDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"gatewayDestinationConfig"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"sendAuditlogAliasManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendLifecycleEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPackageManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogRuntimeDataManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPolicyManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPlanManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogApprovalManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogUserManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendPerformanceMetrics\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogApplicationManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogAdministrationEvent\\\": \\\"true\\\",\\r\\n    \\\"sendPolicyViolationEvent\\\": \\\"true\\\",\\r\\n    \\\"sendErrorEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogGroupManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"metricsPublishInterval\\\": \\\"60\\\",\\r\\n    \\\"sendAuditlogAccessProfileManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogAPIManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPromotionManagementEvent\\\": \\\"true\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the provided configuration id is invalid.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/gatewayDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"gatewayDestinationConfig"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\" Invalid configId value in request. configId: gatewayDestinationConfigg.\\\"\\r\\n}\""
												}
											]
										},
										{
											"name": "Update Gateway As Destination",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sendAuditlogAliasManagementEvent\": \"true\",\r\n    \"sendAuditlogAccessControlListManagementEvent\": \"true\",\r\n    \"sendLifecycleEvent\": \"true\",\r\n    \"sendAuditlogPackageManagementEvent\": \"true\",\r\n    \"sendAuditlogRuntimeDataManagementEvent\": \"true\",\r\n    \"sendAuditlogPolicyManagementEvent\": \"true\",\r\n    \"sendAuditlogPlanManagementEvent\": \"true\",\r\n    \"sendAuditlogApprovalManagementEvent\": \"true\",\r\n    \"sendAuditlogUserManagementEvent\": \"true\",\r\n    \"sendPerformanceMetrics\": \"true\",\r\n    \"sendAuditlogApplicationManagementEvent\": \"true\",\r\n    \"sendAuditlogAdministrationEvent\": \"true\",\r\n    \"sendPolicyViolationEvent\": \"true\",\r\n    \"sendErrorEvent\": \"true\",\r\n    \"sendAuditlogGroupManagementEvent\": \"true\",\r\n    \"sendAuditlogRuleManagementEvent\": \"true\",\r\n    \"metricsPublishInterval\": \"60\",\r\n    \"sendAuditlogAccessProfileManagementEvent\": \"true\",\r\n    \"sendAuditlogAPIManagementEvent\": \"true\",\r\n    \"sendAuditlogPromotionManagementEvent\": \"true\"\r\n}"
												},
												"url": {
													"raw": "{{baseURL}}/configurations/gatewayDestinationConfig",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"configurations",
														"gatewayDestinationConfig"
													]
												},
												"description": "The method is used to update the details of the API Gateway destination in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/gatewayDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"gatewayDestinationConfig"
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n\\t\\\"errorDetails\\\": \\\" Unable to process the PUT request for API Gateway destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: gatewayDestinationConfig\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/gatewayDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"gatewayDestinationConfig"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the request body is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/gatewayDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"gatewayDestinationConfig"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n\\\"errorDetails\\\": \\\" Invalid property key found in request payload.\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the API Gateway destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/gatewayDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"gatewayDestinationConfig"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"sendAuditlogAliasManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendLifecycleEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPackageManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogRuntimeDataManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPolicyManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPlanManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogApprovalManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogUserManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendPerformanceMetrics\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogApplicationManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogAdministrationEvent\\\": \\\"true\\\",\\r\\n    \\\"sendPolicyViolationEvent\\\": \\\"true\\\",\\r\\n    \\\"sendErrorEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogGroupManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"metricsPublishInterval\\\": \\\"60\\\",\\r\\n    \\\"sendAuditlogAccessProfileManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogAPIManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPromotionManagementEvent\\\": \\\"true\\\"\\r\\n}\""
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Audit Log Destination Config",
									"item": [
										{
											"name": "Get Audit Log As Destination",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/configurations/auditlogDestinationConfig",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"configurations",
														"auditlogDestinationConfig"
													]
												},
												"description": "The method retrieves the details of the Transaction Logger destination in API Gateway. Transaction Logger captures the API runtime invocations performed in API Gateway. The transaction logger data is written to a file or a database based on the configurations. Transactions events are written to the transaction logger only when the Transaction Logger is selected as a destination in Log Invocation Policy."
											},
											"response": [
												{
													"name": "This status code indicates that the provided configuration id is invalid.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/auditlogDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"auditlogDestinationConfig"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\" Invalid configId value in request. configId: auditlogDestinationConfigg.\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the user is not a valid API Gateway user for retrieving the Transaction Logger destination configuration.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/auditlogDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"auditlogDestinationConfig"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the Transaction Logger destination configurations are retrieved successfully.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/auditlogDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"auditlogDestinationConfig"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"name\\\": \\\"API Gateway Transaction Logger\\\",\\r\\n    \\\"enabled\\\": \\\"false\\\",\\r\\n    \\\"mode\\\": \\\"synchronous\\\",\\r\\n    \\\"guaranteed\\\": \\\"false\\\",\\r\\n    \\\"destination\\\": \\\"file\\\",\\r\\n    \\\"maximumQueueSize\\\": \\\"100000\\\",\\r\\n    \\\"maximumRetries\\\": \\\"3\\\",\\r\\n    \\\"waitBetweenRetries\\\": \\\"5\\\"\\r\\n}\""
												}
											]
										},
										{
											"name": "Update Audit Log As Destination",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"mode\": \"synchronous\",\r\n    \"maximumRetries\": \"3\",\r\n    \"waitBetweenRetries\": \"5\",\r\n    \"maximumQueueSize\": \"100000\",\r\n    \"name\": \"API Gateway Transaction Logger\",\r\n    \"destination\": \"file\",\r\n    \"guaranteed\": \"false\",\r\n    \"enabled\": \"false\"\r\n}"
												},
												"url": {
													"raw": "{{baseURL}}/configurations/auditlogDestinationConfig",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"configurations",
														"auditlogDestinationConfig"
													]
												},
												"description": "The method is used to update the details of the Transaction Logger destination in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\",\n    \"enable\": \"<string>\",\n    \"mode\": \"<string>\",\n    \"guaranteed\": \"<string>\",\n    \"destination\": \"<string>\",\n    \"maximumQueueSize\": \"<string>\",\n    \"maximumRetries\": \"<string>\",\n    \"waitBetweenRetries\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/auditlogDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"auditlogDestinationConfig"
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n\\t\\\"errorDetails\\\": \\\" Unable to process the PUT request for Audit Log destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: auditlogDestinationConfig\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the request body is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\",\n    \"enable\": \"<string>\",\n    \"mode\": \"<string>\",\n    \"guaranteed\": \"<string>\",\n    \"destination\": \"<string>\",\n    \"maximumQueueSize\": \"<string>\",\n    \"maximumRetries\": \"<string>\",\n    \"waitBetweenRetries\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/auditlogDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"auditlogDestinationConfig"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n\\\"errorDetails\\\": \\\" Invalid property key found in request payload.\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the Transaction Logger destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\",\n    \"enable\": \"<string>\",\n    \"mode\": \"<string>\",\n    \"guaranteed\": \"<string>\",\n    \"destination\": \"<string>\",\n    \"maximumQueueSize\": \"<string>\",\n    \"maximumRetries\": \"<string>\",\n    \"waitBetweenRetries\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/auditlogDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"auditlogDestinationConfig"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"name\\\": \\\"API Gateway Transaction Logger\\\",\\r\\n    \\\"enabled\\\": \\\"false\\\",\\r\\n    \\\"mode\\\": \\\"synchronous\\\",\\r\\n    \\\"guaranteed\\\": \\\"false\\\",\\r\\n    \\\"destination\\\": \\\"file\\\",\\r\\n    \\\"maximumQueueSize\\\": \\\"100000\\\",\\r\\n    \\\"maximumRetries\\\": \\\"3\\\",\\r\\n    \\\"waitBetweenRetries\\\": \\\"5\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\",\n    \"enable\": \"<string>\",\n    \"mode\": \"<string>\",\n    \"guaranteed\": \"<string>\",\n    \"destination\": \"<string>\",\n    \"maximumQueueSize\": \"<string>\",\n    \"maximumRetries\": \"<string>\",\n    \"waitBetweenRetries\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/auditlogDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"auditlogDestinationConfig"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Elasticsearch Destination Config",
									"item": [
										{
											"name": "Get Elasticsearch As Destination",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/configurations/elasticsearchDestinationConfig",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"configurations",
														"elasticsearchDestinationConfig"
													]
												},
												"description": "The method retrieves the details of the Elasticsearch destination in API Gateway. API Gateway can publish runtime events(example: policy violation, log invocation, error events etc), design time events (example: audit log events) and metrics to the configured Elasticsearch destination."
											},
											"response": [
												{
													"name": "This status code indicates that the Elastic search destination configurations are retrieved successfully. SendErrorEvent indicates whether API Gateway has to send error events to API Gateway destination. SendLifecycleEvent indicates whether API Gateway has to send lifecycle events to API Gateway destination. SendPolicyViolationEvent indicates whether API Gateway has to send policy violation events to API Gateway destination. SendPerformanceMetrics indicates whether API Gateway has to send performance metrics to API Gateway destination. MetricsPublishInterval indicates the interval at which the performance metrics will be published (value has to be between 1-60), default being 60. sendAuditlogAliasManagementEvent indicates whether API Gateway has to send Alias Management related audit logs to API Gateway destination. sendAuditlogPackageManagementEvent indicates whether API Gateway has to send Package Management related audit logs to API Gateway destination. sendAuditlogRuntimeDataManagementEvent indicates whether API Gateway has to send RuntimeData Management related audit logs to API Gateway destination. sendAuditlogPolicyManagementEvent indicates whether API Gateway has to send Policy Management related audit logs to API Gateway destination. sendAuditlogPlanManagementEvent indicates whether API Gateway has to send Plan Management related audit logs to API Gateway destination.  sendAuditlogApprovalManagementEvent indicates whether API Gateway has to send Approval Management related audit logs to API Gateway destination. sendAuditlogUserManagementEvent indicates whether API Gateway has to send User Management related audit logs to API Gateway destination. sendAuditlogApplicationManagementEvent indicates whether API Gateway has to send Application Management related audit logs to API Gateway destination. sendAuditlogAdministrationEvent indicates whether API Gateway has to send Administration related audit logs to API Gateway destination. sendAuditlogGroupManagementEvent indicates whether API Gateway has to send Group Management related audit logs to API Gateway destination. sendAuditlogAccessProfileManagementEvent indicates whether API Gateway has to send Team Management related audit logs to API Gateway destination. sendAuditlogAPIManagementEvent indicates whether API Gateway has to send API Management related audit logs to API Gateway destination. sendAuditlogPromotionManagementEvent indicates whether API Gateway has to send Promotion Management related audit logs to API Gateway destination.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/elasticsearchDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"elasticsearchDestinationConfig"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"sendAuditlogAliasManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendLifecycleEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPackageManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogRuntimeDataManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPolicyManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPlanManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogApprovalManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogUserManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendPerformanceMetrics\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogApplicationManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogAdministrationEvent\\\": \\\"true\\\",\\r\\n    \\\"sendPolicyViolationEvent\\\": \\\"true\\\",\\r\\n    \\\"sendErrorEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogGroupManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"metricsPublishInterval\\\": \\\"60\\\",\\r\\n    \\\"sendAuditlogAccessProfileManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogAPIManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPromotionManagementEvent\\\": \\\"true\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the user is not a valid API Gateway user for retrieving the Elasticsearch destination configuration.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/elasticsearchDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"elasticsearchDestinationConfig"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the provided configuration id is invalid.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/configurations/elasticsearchDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"elasticsearchDestinationConfig"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\" Invalid configId value in request. configId: elasticsearchdestinationConfigg.\\\"\\r\\n}\""
												}
											]
										},
										{
											"name": "Update Elasticsearch As Destination",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"hostName\": \"localhost\",\r\n    \"sendAuditlogPackageManagementEvent\": \"false\",\r\n    \"sendAuditlogPlanManagementEvent\": \"false\",\r\n    \"sendPerformanceMetrics\": \"false\",\r\n    \"sendAuditlogApplicationManagementEvent\": \"false\",\r\n    \"protocol\": \"http\",\r\n    \"password\": \"manage\",\r\n    \"sendAuditlogRuleManagementEvent\": \"false\",\r\n    \"sendAuditlogAliasManagementEvent\": \"false\",\r\n    \"sendAuditlogAccessControlListManagementEvent\": \"false\",\r\n    \"sendLifecycleEvent\": \"false\",\r\n    \"sendAuditlogRuntimeDataManagementEvent\": \"false\",\r\n    \"sendAuditlogPolicyManagementEvent\": \"false\",\r\n    \"sendAuditlogApprovalManagementEvent\": \"false\",\r\n    \"sendAuditlogUserManagementEvent\": \"false\",\r\n    \"indexName\": \"default\",\r\n    \"sendAuditlogAdministrationEvent\": \"false\",\r\n    \"userName\": \"Administrator\",\r\n    \"sendPolicyViolationEvent\": \"false\",\r\n    \"sendErrorEvent\": \"false\",\r\n    \"port\": \"9240\",\r\n    \"sendAuditlogGroupManagementEvent\": \"false\",\r\n    \"metricsPublishInterval\": \"60\",\r\n    \"sendAuditlogAccessProfileManagementEvent\": \"false\",\r\n    \"sendAuditlogAPIManagementEvent\": \"false\",\r\n    \"sendAuditlogPromotionManagementEvent\": \"false\"\r\n}"
												},
												"url": {
													"raw": "{{baseURL}}/configurations/elasticsearchDestinationConfig",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"configurations",
														"elasticsearchDestinationConfig"
													]
												},
												"description": "The method is used to update the details of the Elasticsearch destination in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that the specified HTTP method is not allowed for the requested destination configuration in API Gateway.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"protocol\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"port\": \"<string>\",\n    \"indexName\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"sendErrorEvent\": \"<string>\",\n    \"sendLifecycleEvent\": \"<string>\",\n    \"sendPolicyViolationEvent\": \"<string>\",\n    \"sendPerformanceMetrics\": \"<string>\",\n    \"metricsPublishInterval\": \"<string>\",\n    \"sendAuditlogPackageManagementEvent\": \"<string>\",\n    \"sendAuditlogPolicyManagementEvent\": \"<string>\",\n    \"sendAuditlogRuntimeDataManagementEvent\": \"<string>\",\n    \"sendAuditlogPlanManagementEvent\": \"<string>\",\n    \"sendAuditlogApprovalManagementEvent\": \"<string>\",\n    \"sendAuditlogUserManagementEvent\": \"<string>\",\n    \"sendAuditlogApplicationManagementEvent\": \"<string>\",\n    \"sendAuditlogGroupManagementEvent\": \"<string>\",\n    \"sendAuditlogAccessProfileManagementEvent\": \"<string>\",\n    \"sendAuditlogPromotionManagementEvent\": \"<string>\",\n    \"sendAuditlogAPIManagementEvent\": \"<string>\",\n    \"sendAuditlogAliasManagementEvent\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/elasticsearchDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"elasticsearchDestinationConfig"
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n\\t\\\"errorDetails\\\": \\\" Unable to process the PUT request for Elasticsearch destination configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: elasticsearchDestinationConfigg\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Destination Administration\" functional privilege to access this API.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"protocol\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"port\": \"<string>\",\n    \"indexName\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"sendErrorEvent\": \"<string>\",\n    \"sendLifecycleEvent\": \"<string>\",\n    \"sendPolicyViolationEvent\": \"<string>\",\n    \"sendPerformanceMetrics\": \"<string>\",\n    \"metricsPublishInterval\": \"<string>\",\n    \"sendAuditlogPackageManagementEvent\": \"<string>\",\n    \"sendAuditlogPolicyManagementEvent\": \"<string>\",\n    \"sendAuditlogRuntimeDataManagementEvent\": \"<string>\",\n    \"sendAuditlogPlanManagementEvent\": \"<string>\",\n    \"sendAuditlogApprovalManagementEvent\": \"<string>\",\n    \"sendAuditlogUserManagementEvent\": \"<string>\",\n    \"sendAuditlogApplicationManagementEvent\": \"<string>\",\n    \"sendAuditlogGroupManagementEvent\": \"<string>\",\n    \"sendAuditlogAccessProfileManagementEvent\": \"<string>\",\n    \"sendAuditlogPromotionManagementEvent\": \"<string>\",\n    \"sendAuditlogAPIManagementEvent\": \"<string>\",\n    \"sendAuditlogAliasManagementEvent\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/elasticsearchDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"elasticsearchDestinationConfig"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the request body is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"protocol\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"port\": \"<string>\",\n    \"indexName\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"sendErrorEvent\": \"<string>\",\n    \"sendLifecycleEvent\": \"<string>\",\n    \"sendPolicyViolationEvent\": \"<string>\",\n    \"sendPerformanceMetrics\": \"<string>\",\n    \"metricsPublishInterval\": \"<string>\",\n    \"sendAuditlogPackageManagementEvent\": \"<string>\",\n    \"sendAuditlogPolicyManagementEvent\": \"<string>\",\n    \"sendAuditlogRuntimeDataManagementEvent\": \"<string>\",\n    \"sendAuditlogPlanManagementEvent\": \"<string>\",\n    \"sendAuditlogApprovalManagementEvent\": \"<string>\",\n    \"sendAuditlogUserManagementEvent\": \"<string>\",\n    \"sendAuditlogApplicationManagementEvent\": \"<string>\",\n    \"sendAuditlogGroupManagementEvent\": \"<string>\",\n    \"sendAuditlogAccessProfileManagementEvent\": \"<string>\",\n    \"sendAuditlogPromotionManagementEvent\": \"<string>\",\n    \"sendAuditlogAPIManagementEvent\": \"<string>\",\n    \"sendAuditlogAliasManagementEvent\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/elasticsearchDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"elasticsearchDestinationConfig"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n\\\"errorDetails\\\": \\\" Invalid property key found in request payload.\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the Elasticsearch destination configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"protocol\": \"<string>\",\n    \"hostname\": \"<string>\",\n    \"port\": \"<string>\",\n    \"indexName\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"sendErrorEvent\": \"<string>\",\n    \"sendLifecycleEvent\": \"<string>\",\n    \"sendPolicyViolationEvent\": \"<string>\",\n    \"sendPerformanceMetrics\": \"<string>\",\n    \"metricsPublishInterval\": \"<string>\",\n    \"sendAuditlogPackageManagementEvent\": \"<string>\",\n    \"sendAuditlogPolicyManagementEvent\": \"<string>\",\n    \"sendAuditlogRuntimeDataManagementEvent\": \"<string>\",\n    \"sendAuditlogPlanManagementEvent\": \"<string>\",\n    \"sendAuditlogApprovalManagementEvent\": \"<string>\",\n    \"sendAuditlogUserManagementEvent\": \"<string>\",\n    \"sendAuditlogApplicationManagementEvent\": \"<string>\",\n    \"sendAuditlogGroupManagementEvent\": \"<string>\",\n    \"sendAuditlogAccessProfileManagementEvent\": \"<string>\",\n    \"sendAuditlogPromotionManagementEvent\": \"<string>\",\n    \"sendAuditlogAPIManagementEvent\": \"<string>\",\n    \"sendAuditlogAliasManagementEvent\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/configurations/elasticsearchDestinationConfig",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"configurations",
																"elasticsearchDestinationConfig"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"sendAuditlogAliasManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendLifecycleEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPackageManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogRuntimeDataManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPolicyManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPlanManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogApprovalManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogUserManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendPerformanceMetrics\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogApplicationManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogAdministrationEvent\\\": \\\"true\\\",\\r\\n    \\\"sendPolicyViolationEvent\\\": \\\"true\\\",\\r\\n    \\\"sendErrorEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogGroupManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"metricsPublishInterval\\\": \\\"60\\\",\\r\\n    \\\"sendAuditlogAccessProfileManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogAPIManagementEvent\\\": \\\"true\\\",\\r\\n    \\\"sendAuditlogPromotionManagementEvent\\\": \\\"true\\\"\\r\\n}\""
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Alias Management",
					"item": [
						{
							"name": "Simple Alias",
							"item": [
								{
									"name": "Create Simple Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SimpleAlias\",\n    \"type\": \"simple\",\n    \"description\": \"description flows here\",\n    \"value\": \"softwareag\",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Endpoint Alias",
							"item": [
								{
									"name": "Create Endpoint Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"endPointURI\": \"http://localhost:5555\",\r\n\t\"connectionTimeout\": \"30\",\r\n\t\"optimizationTechnique\": \"None\",  \r\n\t\"readTimeout\": \"30\",\r\n\t\"passSecurityHeaders\": false,\r\n\t\"keystoreAlias\": \"DEFAULT_IS_KEYSTORE\",\r\n\t\"keyAlias\": \"ssos\",\r\n\t\"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",  \r\n\t\"name\": \"Endpoint Alias\",\r\n\t\"description\": \"description flows here\",\r\n\t\"type\": \"endpoint\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										},
										"description": "Endpoint Alias:\r\n\r\nOptimization Techniques applicable values are \r\n1. None\r\n2. MTOM\r\n3. SwA"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "HTTP Transport Security Alias",
							"item": [
								{
									"name": "Create Basic HTTP Transport Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n        \"name\": \"BasicHTTPTransportSecurityAlias\",\r\n        \"type\": \"httpTransportSecurityAlias\",\r\n        \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\r\n        \"authType\": \"HTTP_BASIC\",\r\n        \"authMode\": \"NEW\",                       \r\n        \"httpAuthCredentials\": {\r\n            \"userName\": \"Administrator\",\r\n            \"password\": \"manage\",\r\n            \"domain\": \"localhost\"\r\n        }\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										},
										"description": "Basic HTTP Transport Alias:\r\n\r\nAuth mode available values \r\n1. INCOMING_HTTP_BASIC_AUTH\r\n2. NEW"
									},
									"response": []
								},
								{
									"name": "Create JWT HTTP Transport Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"JWTHTTPTransportAlias\",\n    \"type\": \"httpTransportSecurityAlias\",\n    \"description\": \"description flows here\",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\n    \"authType\": \"JWT\",\n    \"authMode\": \"INCOMING_JWT\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Kerberos HTTP Transport Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"KerberosHTTPTransportAlias\",\n    \"type\": \"httpTransportSecurityAlias\",\n    \"description\": \"description flows here\",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\n    \"authType\": \"KERBEROS\",\n    \"authMode\": \"NEW\",\n    \"kerberosCredentials\": {\n        \"clientPrincipal\": \"Administrator\",\n        \"clientPassword\": \"manage\",\n        \"servicePrincipal\": \"https://softwareag.com\",\n        \"servicePrincipalNameForm\": \"username\",\n        \"requestDelegateToken\": false\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										},
										"description": "Kerberos HTTP Transport Alias:\r\n\r\nAuth mode available values are \r\n1. NEW\r\n2. DELEGATE_INCOMING\r\n3. INCOMING_HTTP_BASIC_AUTH\r\n4. INCOMING_KERBEROS\r\n\r\nService principal name form available values are \r\n1. hostbased\r\n2. username"
									},
									"response": []
								},
								{
									"name": "Create NTLM HTTP Transport Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"NTLMHTTPTransportAlias\",\n    \"type\": \"httpTransportSecurityAlias\",\n    \"description\": \"description flows here\",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\n    \"authType\": \"NTLM\",\n    \"authMode\": \"NEW\",\n    \"httpAuthCredentials\": {\n        \"userName\": \"Administrator\",\n        \"password\": \"manage\",\n        \"domain\": \"localhost\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										},
										"description": "NTLM HTTP Transport Security Alias:\r\n\r\nAuth mode available values are \r\n1. NEW\r\n2. INCOMING_HTTP_BASIC_AUTH\r\n3. TRANSPARENT"
									},
									"response": []
								},
								{
									"name": "Create OAuth2 HTTP Transport Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"OAuth2HTTPTransportAlias\",\n    \"type\": \"httpTransportSecurityAlias\",\n    \"description\": \"description flows here\",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\n    \"authType\": \"OAUTH2\",\n    \"authMode\": \"NEW\",\n    \"oauth2Token\": \"f8928b26ce804d9f8d221ee7faff3898\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										},
										"description": "OAuth2 HTTP Transport Security Alias:\r\n\r\nAuth mode available values are \r\n1. NEW\r\n2. INCOMING_OAUTH_TOKEN"
									},
									"response": []
								}
							],
							"description": "\r\n\r\n\r\n\r\n\r\n\r\n",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Soap Message Security Alias",
							"item": [
								{
									"name": "Create Kerberos Soap Message Security Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"KerberosSoapMessageAlias\",\n    \"type\": \"soapMessageSecurityAlias\",\n    \"description\": \"description flows here\",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\n    \"authType\": \"KERBEROS\",\n    \"authMode\": \"NEW\",\n    \"kerberosCredentials\": {\n        \"clientPrincipal\": \"Administrator\",\n        \"clientPassword\": \"manage\",\n        \"servicePrincipal\": \"https://softwareag.com\",\n        \"servicePrincipalNameForm\": \"username\",\n        \"requestDelegateToken\": false\n    },\n    \"signAndEncryptConfig\": {\n        \"keyStoreAlias\": \"DEFAULT_IS_KEYSTORE\",\n        \"keyAlias\": \"ssos\",\n        \"certificateAlias\": \"ssos\",\n        \"truststoreAlias\": \"DEFAULT_IS_TRUSTSTORE\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										},
										"description": "Kerberos Soap Message Alias:\n\nAuth mode applicable values are \n1. NEW\n2. DELEGATE_INCOMING\n3. INCOMING_HTTP_BASIC_AUTH\n4. INCOMING_KERBEROS\n \nService principal name form applicable values are \n1. hostbased\n2. username"
									},
									"response": []
								},
								{
									"name": "Create Soap Message Security Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SoapMessageSecurityAlias\",\n    \"type\": \"soapMessageSecurityAlias\",\n    \"description\": \"description flows here\",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\n    \"authType\": \"NONE\",\n    \"signAndEncryptConfig\": {\n        \"keyStoreAlias\": \"DEFAULT_IS_KEYSTORE\",\n        \"keyAlias\": \"ssos\",\n        \"truststoreAlias\": \"DEFAULT_IS_TRUSTSTORE\",\n        \"certificateAlias\": \"ssos\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create SAML Soap Message Security Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SAMLSoapMessageSecurityAlias\",\n    \"type\": \"soapMessageSecurityAlias\",\n    \"description\": \"description flows here\",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\n    \"authType\": \"SAML\",\n    \"samlIssuerConfig\": \"${SAMLIssuerConfig}\",\n    \"signAndEncryptConfig\": {\n        \"keyStoreAlias\": \"DEFAULT_IS_KEYSTORE\",\n        \"keyAlias\": \"ssos\",\n        \"truststoreAlias\": \"DEFAULT_IS_TRUSTSTORE\",\n        \"certificateAlias\": \"ssos\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create WSS Username Soap Message Security Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"WSSUsernameSoapMessageSecurityAlias\",\n    \"type\": \"soapMessageSecurityAlias\",\n    \"description\": \"description flows here\",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\n    \"authType\": \"WSS_USERNAME\",\n    \"authMode\": \"NEW\",\n    \"wssCredentials\": {\n        \"userName\": \"Administrator\",\n        \"password\": \"manage\"\n    },\n    \"signAndEncryptConfig\": {\n        \"keyStoreAlias\": \"DEFAULT_IS_KEYSTORE\",\n        \"keyAlias\": \"ssos\",\n        \"truststoreAlias\": \"DEFAULT_IS_TRUSTSTORE\",\n        \"certificateAlias\": \"ssos\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "webMethods IS Service Alias",
							"item": [
								{
									"name": "Create webMethods IS Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serviceName\": \"webMethods.ISService:serviceName\",\n    \"runAsUser\": \"Administrator\",\n    \"complyToISSpec\": true,\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\n    \"name\": \"webMethodISServiceAlias\",\n    \"description\": \"test\",\n    \"type\": \"webmethodsAlias\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "XSLT Transformation Alias",
							"item": [
								{
									"name": "Create XSLT Transformation Alias",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fileName\": \"XSLTransformation.xsl\",\n    \"content\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n\\r\\n<xsl:stylesheet version=\\\"1.0\\\"\\r\\nxmlns:xsl=\\\"http://www.w3.org/1999/XSL/Transform\\\">\\r\\n\\r\\n<xsl:template match=\\\"/\\\">\\r\\n  <html>\\r\\n  <body>\\r\\n  <h2>XSLT Transformation</h2>\\r\\n  <table border=\\\"1\\\">\\r\\n    <tr bgcolor=\\\"#9acd32\\\">\\r\\n      <th>Title</th>\\r\\n      <th>Artist</th>\\r\\n    </tr>\\r\\n    <xsl:for-each select=\\\"title/artists\\\">\\r\\n    <tr>\\r\\n      <td><xsl:value-of select=\\\"title\\\"/></td>\\r\\n      <td><xsl:value-of select=\\\"artist\\\"/></td>\\r\\n    </tr>\\r\\n    </xsl:for-each>\\r\\n  </table>\\r\\n  </body>\\r\\n  </html>\\r\\n</xsl:template>\\r\\n\\r\\n</xsl:stylesheet> \",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\",\n    \"name\": \"XSLTTransformationAlias\",\n    \"description\": \"description flows here\",\n    \"type\": \"transformationAlias\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/alias",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"alias"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get All Aliases",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/alias",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"alias"
									]
								},
								"description": "Get all the aliases available in API Gateway."
							},
							"response": []
						},
						{
							"name": "Get Alias by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/alias/:aliasId",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"alias",
										":aliasId"
									],
									"variable": [
										{
											"key": "aliasId",
											"value": "14715025-f439-46a2-b242-427af8edb3ad"
										}
									]
								},
								"description": "Get the details of a Alias."
							},
							"response": []
						},
						{
							"name": "Delete Alias by AliasID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/alias/:aliasId",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"alias",
										":aliasId"
									],
									"variable": [
										{
											"key": "aliasId",
											"value": "15044487-14c6-4ea1-9ff6-e51610e11491"
										}
									]
								},
								"description": "Delete alias with the given AliasID."
							},
							"response": []
						},
						{
							"name": "Update Alias",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"SimpleAlias\",\n    \"type\": \"simple\",\n    \"description\": \"description flows here\",\n    \"value\": \"softwareag\",\n    \"stage\": \"f8928b26-ce80-4d9f-8d22-1ee7faff3898\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/alias/:aliasId",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"alias",
										":aliasId"
									],
									"variable": [
										{
											"key": "aliasId",
											"value": "b29686e9-287a-4538-b8cf-2ff91fa31a20"
										}
									]
								},
								"description": "Delete alias with the given AliasID."
							},
							"response": []
						}
					]
				},
				{
					"name": "Application Management",
					"item": [
						{
							"name": "Application",
							"item": [
								{
									"name": "Apis",
									"item": [
										{
											"name": "Get Registered APIs",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/applications/:applicationId/apis",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"applications",
														":applicationId",
														"apis"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "039778fc-dd3b-442b-a799-181a9dda1265",
															"description": "(Required) This parameter specifies the ID of an application whose registered APIs are to be retrieved in API Gateway."
														}
													]
												},
												"description": "The method retrieves a list of registered APIs for the specified application in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that a list of registered APIs for the application is retrieved successfully.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\n  \\\"apiIDs\\\": [\\n    \\\"2aa651f4-2696-425b-96c4-440ad78b0305\\\"\\n  ]\\n}\""
												},
												{
													"name": "This status code indicates that an application with the given ID could not be found in API Gateway.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Register APIs to Application",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"apiIDs\": [\n        \"8ca0897d-0ae8-4252-949b-d412ad4962c4\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseURL}}/applications/:applicationId/apis",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"applications",
														":applicationId",
														"apis"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "039778fc-dd3b-442b-a799-181a9dda1265",
															"description": "(Required) This parameter specifies the ID of an application for registering APIs in API Gateway."
														}
													]
												},
												"description": "This HTTP request registers the APIs with the specified application in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that an application with the given ID could not be found in API Gateway",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the given APIs have been successfully registered with the specified application in API Gateway.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{}\""
												}
											]
										},
										{
											"name": "Update Registered APIs",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"apiIDs\": [\n        \"8ca0897d-0ae8-4252-949b-d412ad4962c4\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseURL}}/applications/:applicationId/apis",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"applications",
														":applicationId",
														"apis"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "039778fc-dd3b-442b-a799-181a9dda1265",
															"description": "(Required) This parameter specifies the ID of an application for updating the details of the registered APIs in API Gateway."
														}
													]
												},
												"description": "This HTTP request updates the registered APIs of the specified application."
											},
											"response": [
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the registered API has been successfully updated in API Gateway.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that an application with the given ID could not be found in API Gateway.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n    \"<string>\",\n    \"<string>\"\n]"
														},
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Unregister APIs from Application",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/applications/:applicationId/apis?apiIDs=8ca0897d-0ae8-4252-949b-d412ad4962c4",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"applications",
														":applicationId",
														"apis"
													],
													"query": [
														{
															"key": "apiIDs",
															"value": "8ca0897d-0ae8-4252-949b-d412ad4962c4",
															"description": "(Required) This parameter specifies the IDs of APIs that are to be unregistered from the specified application in API Gateway. Provide multiple apisIds as comma separated values."
														}
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "039778fc-dd3b-442b-a799-181a9dda1265",
															"description": "(Required) This parameter specifies the ID of an application for unregistering the associated APIs in API Gateway."
														}
													]
												},
												"description": "The method unregisters the APIs from the specified application in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that an application with the given ID could not be found in API Gateway.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis?apiIDs=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"query": [
																{
																	"key": "apiIDs",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis?apiIDs=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"query": [
																{
																	"key": "apiIDs",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that APIs are successfully unregistered from the specified application in API Gateway.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/apis?apiIDs=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"apis"
															],
															"query": [
																{
																	"key": "apiIDs",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Access Tokens",
									"item": [
										{
											"name": "Get Access Token Endpoints",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/applications/:applicationId/accessTokens",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"applications",
														":applicationId",
														"accessTokens"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "039778fc-dd3b-442b-a799-181a9dda1265",
															"description": "(Required) This parameter specifies the ID of an application whose access token endpoints are to be retrieved from API Gateway."
														}
													]
												},
												"description": "The method retrieves a map of access token endpoints for all the authorization servers configured"
											},
											"response": [
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that a list of access token endpoints for the application are retrieved successfully.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\n    \\\"local\\\": {\\n        \\\"uris\\\": {\\n            \\\"authorizeUrl\\\": \\\"http://vm:5555/invoke/pub.apigateway.oauth2/authorize\\\",\\n            \\\"accessTokenUrl\\\": \\\"http://vm:5555/invoke/pub.apigateway.oauth2/getAccessToken\\\",\\n            \\\"refreshTokenUrl\\\": \\\"http://vm:5555/invoke/pub.oauth/refreshAccessToken\\\"\\n        }\\n    }\\n}\""
												},
												{
													"name": "This status code indicates that an application with the given ID could not be found in API Gateway.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Regenerate Access Tokens",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"apiAccessKeyCredentials\"\n}"
												},
												"url": {
													"raw": "{{baseURL}}/applications/:applicationId/accessTokens",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"applications",
														":applicationId",
														"accessTokens"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "039778fc-dd3b-442b-a799-181a9dda1265",
															"description": "(Required) This parameter specifies the ID of an application for generating the access Tokens in API Gateway."
														}
													]
												},
												"description": "The method regenarates the access tokens of an application"
											},
											"response": [
												{
													"name": "This status code indicates that the access tokens are successfully regenerated for the application in API Gateway.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "\"<string>\""
														},
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "\"<string>\""
														},
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that an application with the given ID could not be found in API Gateway",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "\"<string>\""
														},
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update Access Tokens",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/applications/:applicationId/accessTokens",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"applications",
														":applicationId",
														"accessTokens"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "039778fc-dd3b-442b-a799-181a9dda1265",
															"description": "(Required) This parameter specifies the ID of an application for updating the access tokens."
														}
													]
												}
											},
											"response": [
												{
													"name": "This status code indicates access tokens are successfully updated in API Gateway.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that an application with the given ID could not be found in API Gateway.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Clear Access Tokens",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"accessTokens\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/applications/:applicationId/accessTokens",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"applications",
														":applicationId",
														"accessTokens"
													],
													"variable": [
														{
															"key": "applicationId",
															"value": "039778fc-dd3b-442b-a799-181a9dda1265",
															"description": "(Required) This parameter specifies the ID of an application for which the access tokesn needs to cleared"
														}
													]
												},
												"description": "The method clears the access tokens from the specified application in API Gateway."
											},
											"response": [
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that APIs are successfully unregistered from the specified application in API Gateway.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that an application with the given ID could not be found in API Gateway.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/applications/:applicationId/accessTokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"applications",
																":applicationId",
																"accessTokens"
															],
															"variable": [
																{
																	"key": "applicationId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get all Applications",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/applications",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"applications"
											]
										},
										"description": "The method retrieves a list of available applications in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that a list of the available applications is retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\n    \\\"applications\\\": [\\n        {\\n            \\\"name\\\": \\\"TestSampleApp\\\",\\n            \\\"description\\\": null,\\n            \\\"contactEmails\\\": [],\\n            \\\"identifiers\\\": [\\n                {\\n                    \\\"id\\\": \\\"3ce6f4df-e773-4fdb-bed3-3d63b5cb520c\\\",\\n                    \\\"name\\\": \\\"Username\\\",\\n                    \\\"key\\\": \\\"httpBasicAuth\\\",\\n                    \\\"value\\\": [\\n                        \\\"Administrator\\\"\\n                    ]\\n                }\\n            ],\\n            \\\"siteURLs\\\": [],\\n            \\\"jsOrigins\\\": [],\\n            \\\"authStrategyIds\\\": [\\n                \\\"81df9682-6a28-4ebc-92fd-2c486d3f75c2\\\"\\n            ],\\n            \\\"version\\\": \\\"1.0\\\",\\n            \\\"id\\\": \\\"803b7f16-45c6-4b1c-be26-4da053d40640\\\",\\n            \\\"created\\\": \\\"2018-12-04 05:27:56 GMT\\\",\\n            \\\"lastupdated\\\": null,\\n            \\\"owner\\\": \\\"Administrator\\\",\\n            \\\"consumingAPIs\\\": [],\\n            \\\"accessTokens\\\": {\\n                \\\"apiAccessKey_credentials\\\": {\\n                    \\\"apiAccessKey\\\": \\\"f293cbb5cb0f1367ecc55b4c5b1717dad4073f77d2bde869cf8ee0162cc08f38\\\",\\n                    \\\"expirationInterval\\\": null,\\n                    \\\"expirationDate\\\": null,\\n                    \\\"expired\\\": false\\n                },\\n                \\\"oauth_credentials\\\": {\\n                    \\\"clientID\\\": null,\\n                    \\\"clientSecret\\\": null,\\n                    \\\"clientName\\\": null,\\n                    \\\"scopes\\\": null,\\n                    \\\"token_lifetime\\\": null,\\n                    \\\"token_refresh_limit\\\": null,\\n                    \\\"redirect_uris\\\": [],\\n                    \\\"Type\\\": \\\"confidential\\\"\\n                }\\n            }\\n        ,\\r\\n\\t\\t\\t\\\"teams\\\": [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\\"id\\\": \\\"Administrators\\\",\\r\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"Administrators\\\",\\r\\n\\t\\t\\t\\t\\t\\\"canDelete\\\": \\\"false\\\"\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\\"id\\\": \\\"Default\\\",\\r\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"Default\\\",\\r\\n\\t\\t\\t\\t\\t\\\"canDelete\\\": \\\"true\\\"\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t]    }\\n    ]\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Application",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"SoftwareAG Application\",\n\t\"description\": \"description flows here\",\n\t\"version\": \"1.0\",\n\t\"contactEmails\": [],\n\t\"siteURLs\": [],\n\t\"identifiers\": [\n\t\t{\n\t\t\t\"value\": [\n\t\t\t\t\"partner_identifier\"\n\t\t\t],\n\t\t\t\"name\": \"Partner ID\",\n\t\t\t\"key\": \"partnerId\"\n\t\t},\n\t\t{\n\t\t\t\"value\": [\n\t\t\t\t\"10.60.30.1-10.60.30.30\"\n\t\t\t],\n\t\t\t\"name\": \"IP Addresses\",\n\t\t\t\"key\": \"ipAddressRange\"\n\t\t},\n\t\t{\n\t\t\t\"value\": [\n\t\t\t\t\"{\\\"claim_name\\\":\\\"claim_value\\\"}\"\n\t\t\t],\n\t\t\t\"name\": \"test\",\n\t\t\t\"key\": \"jwtClaims\"\n\t\t},\n\t\t{\n\t\t\t\"value\": [\n\t\t\t\t\"localhost\"\n\t\t\t],\n\t\t\t\"name\": \"Hostname\",\n\t\t\t\"key\": \"hostNameAddress\"\n\t\t}\n\t],\n\t\"consumingAPIs\": [],\n\t\"isSuspended\": false,\n\t\"newApisForAssociation\": [\n\t\t\"4c7391a9-70e5-454c-bf7c-9c999b79568f\"\n\t],\n\t\"jsOrigins\": [],\n\t\"authStrategyIds\": [\n\t\t\"6ce3122c-5d9b-4543-bb18-d104abb91971\"\n\t],\n\t\"restrictViewAsset\": false,\n\t\"teams\": [\n\t\t{\n\t\t\t\"id\": \"Administrators\"\n\t\t}\n\t]\n}"
										},
										"url": {
											"raw": "{{baseURL}}/applications",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"applications"
											]
										},
										"description": "The method creates an application in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"applicationID\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"identifiers\": [\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"contactEmails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"iconbyteArray\": \"<string>\",\n    \"accessTokens\": {\n        \"apiAccessKey\": {\n            \"apiAccessKey\": \"<string>\",\n            \"expirationInterval\": \"<string>\",\n            \"expirationDate\": \"<string>\"\n        },\n        \"oauth2Token\": {\n            \"type\": \"<string>\",\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"clientName\": \"<string>\",\n            \"scopes\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"expirationInterval\": \"<string>\",\n            \"refreshCount\": \"<string>\",\n            \"redirectUris\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    },\n    \"creationDate\": \"<string>\",\n    \"lastModified\": \"<string>\",\n    \"lastUpdated\": \"<long>\",\n    \"siteURLs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"jsOrigins\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": \"<string>\",\n    \"isSuspended\": \"<boolean>\",\n    \"authStrategyIds\": [\n        \"<string>\"\n    ],\n    \"subscription\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that an application with the given ID already exists in API Gateway",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"applicationID\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"identifiers\": [\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"contactEmails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"iconbyteArray\": \"<string>\",\n    \"accessTokens\": {\n        \"apiAccessKey\": {\n            \"apiAccessKey\": \"<string>\",\n            \"expirationInterval\": \"<string>\",\n            \"expirationDate\": \"<string>\"\n        },\n        \"oauth2Token\": {\n            \"type\": \"<string>\",\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"clientName\": \"<string>\",\n            \"scopes\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"expirationInterval\": \"<string>\",\n            \"refreshCount\": \"<string>\",\n            \"redirectUris\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    },\n    \"creationDate\": \"<string>\",\n    \"lastModified\": \"<string>\",\n    \"lastUpdated\": \"<long>\",\n    \"siteURLs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"jsOrigins\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": \"<string>\",\n    \"isSuspended\": \"<boolean>\",\n    \"authStrategyIds\": [\n        \"<string>\"\n    ],\n    \"subscription\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the application has been successfully created in API Gateway.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"applicationID\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"identifiers\": [\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"contactEmails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"iconbyteArray\": \"<string>\",\n    \"accessTokens\": {\n        \"apiAccessKey\": {\n            \"apiAccessKey\": \"<string>\",\n            \"expirationInterval\": \"<string>\",\n            \"expirationDate\": \"<string>\"\n        },\n        \"oauth2Token\": {\n            \"type\": \"<string>\",\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"clientName\": \"<string>\",\n            \"scopes\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"expirationInterval\": \"<string>\",\n            \"refreshCount\": \"<string>\",\n            \"redirectUris\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    },\n    \"creationDate\": \"<string>\",\n    \"lastModified\": \"<string>\",\n    \"lastUpdated\": \"<long>\",\n    \"siteURLs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"jsOrigins\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": \"<string>\",\n    \"isSuspended\": \"<boolean>\",\n    \"authStrategyIds\": [\n        \"<string>\"\n    ],\n    \"subscription\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\n    \\\"name\\\": \\\"TestApp\\\",\\n    \\\"description\\\": null,\\n    \\\"contactEmails\\\": [],\\n    \\\"identifiers\\\": [\\n        {\\n            \\\"id\\\": \\\"820332c8-7467-4340-bef8-dae595c69f7b\\\",\\n            \\\"name\\\": \\\"Username\\\",\\n            \\\"key\\\": \\\"httpBasicAuth\\\",\\n            \\\"value\\\": [\\n                \\\"admin\\\"\\n            ]\\n        }\\n    ],\\n    \\\"siteURLs\\\": [],\\n    \\\"jsOrigins\\\": [],\\n    \\\"authStrategyIds\\\": [],\\n    \\\"version\\\": \\\"1.0\\\",\\n    \\\"id\\\": \\\"79251257-1ea5-4df7-a8bf-a345ea835592\\\",\\n    \\\"created\\\": \\\"2018-12-04 05:33:20 GMT\\\",\\n    \\\"lastupdated\\\": null,\\n    \\\"owner\\\": \\\"Administrator\\\",\\n    \\\"consumingAPIs\\\": [],\\n    \\\"accessTokens\\\": {\\n        \\\"apiAccessKey_credentials\\\": {\\n            \\\"apiAccessKey\\\": \\\"dad584e3b45f90db5baab4d52a24c2ff9201e5a5e48eaea0740bb4acf19fa937\\\",\\n            \\\"expirationInterval\\\": null,\\n            \\\"expirationDate\\\": null,\\n            \\\"expired\\\": false\\n        },\\n        \\\"oauth_credentials\\\": {\\n            \\\"clientID\\\": null,\\n            \\\"clientSecret\\\": null,\\n            \\\"clientName\\\": null,\\n            \\\"scopes\\\": null,\\n            \\\"token_lifetime\\\": null,\\n            \\\"token_refresh_limit\\\": null,\\n            \\\"redirect_uris\\\": [],\\n            \\\"Type\\\": \\\"confidential\\\"\\n        }\\n    }\\n}\""
										}
									]
								},
								{
									"name": "Delete Application by ApplicationID",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/applications/:applicationId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId",
													"value": "382d6a40-b2d1-4df3-a66f-33f22fd6f137"
												}
											]
										},
										"description": "The method deletes the specified application in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the specified application has been successfully deleted from API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that an application with the given ID could not be found in API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications?ids=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Search Applications",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/applications/_search?ids=<string>&idsToExclude=<string>&from=<number>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"applications",
												"_search"
											],
											"query": [
												{
													"key": "ids",
													"value": "<string>",
													"description": "This parameter specifies the IDs of applications whose details are to be retrieved in API Gateway."
												},
												{
													"key": "idsToExclude",
													"value": "<string>",
													"description": "This parameter specifies the IDs of applications whose details are to be removed while retrieving other applications in API Gateway."
												},
												{
													"key": "from",
													"value": "<number>",
													"description": "This parameter specifies the last updated date in milliseconds. The applications whose last updated date greater than or equal to this are to be retrieved in API Gateway."
												}
											]
										},
										"description": "The method retrieves a list of available applications in API Gateway based on the search query parameters."
									},
									"response": [
										{
											"name": "This status code indicates that an application with the given search parameters could not be found in API Gateway.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications/_search?ids=<string>&idsToExclude=<string>&from=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"_search"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>"
														},
														{
															"key": "idsToExclude",
															"value": "<string>"
														},
														{
															"key": "from",
															"value": "<number>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the details of the specified applications are retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications/_search?ids=<string>&idsToExclude=<string>&from=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"_search"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>"
														},
														{
															"key": "idsToExclude",
															"value": "<string>"
														},
														{
															"key": "from",
															"value": "<number>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"applicationID\": \"<string>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"owner\": \"<string>\",\n \"identifiers\": [\n  {\n   \"id\": \"<string>\",\n   \"key\": \"<string>\",\n   \"name\": \"<string>\",\n   \"value\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  {\n   \"id\": \"<string>\",\n   \"key\": \"<string>\",\n   \"name\": \"<string>\",\n   \"value\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n ],\n \"contactEmails\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"iconbyteArray\": \"<string>\",\n \"accessTokens\": {\n  \"apiAccessKey\": {\n   \"apiAccessKey\": \"<string>\",\n   \"expirationInterval\": \"<string>\",\n   \"expirationDate\": \"<string>\"\n  },\n  \"oauth2Token\": {\n   \"type\": \"<string>\",\n   \"clientId\": \"<string>\",\n   \"clientSecret\": \"<string>\",\n   \"clientName\": \"<string>\",\n   \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"expirationInterval\": \"<string>\",\n   \"refreshCount\": \"<string>\",\n   \"redirectUris\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n },\n \"creationDate\": \"<string>\",\n \"lastModified\": \"<string>\",\n \"lastUpdated\": \"<long>\",\n \"siteURLs\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"jsOrigins\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"version\": \"<string>\",\n \"isSuspended\": \"<boolean>\",\n \"authStrategyIds\": [\n  \"<string>\"\n ],\n \"subscription\": \"<boolean>\"\n}"
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications/_search?ids=<string>&idsToExclude=<string>&from=<number>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														"_search"
													],
													"query": [
														{
															"key": "ids",
															"value": "<string>"
														},
														{
															"key": "idsToExclude",
															"value": "<string>"
														},
														{
															"key": "from",
															"value": "<number>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Application by ApplicationID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/applications/:applicationId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId",
													"value": "382d6a40-b2d1-4df3-a66f-33f22fd6f137",
													"description": "(Required) This parameter specifies the ID of an application whose details are to be retrieved in API Gateway."
												}
											]
										},
										"description": "The method retrieves the details of a specified application in API Gateway"
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications/:applicationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														":applicationId"
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the details of the specified application are retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications/:applicationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														":applicationId"
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\n    \\\"applications\\\": [\\n        {\\n            \\\"name\\\": \\\"TestApp\\\",\\n            \\\"description\\\": null,\\n            \\\"contactEmails\\\": [],\\n            \\\"identifiers\\\": [\\n                {\\n                    \\\"id\\\": \\\"820332c8-7467-4340-bef8-dae595c69f7b\\\",\\n                    \\\"name\\\": \\\"Username\\\",\\n                    \\\"key\\\": \\\"httpBasicAuth\\\",\\n                    \\\"value\\\": [\\n                        \\\"admin\\\"\\n                    ]\\n                }\\n            ],\\n            \\\"siteURLs\\\": [],\\n            \\\"jsOrigins\\\": [],\\n            \\\"authStrategyIds\\\": [],\\n            \\\"version\\\": \\\"1.0\\\",\\n            \\\"id\\\": \\\"79251257-1ea5-4df7-a8bf-a345ea835592\\\",\\n            \\\"created\\\": \\\"2018-12-04 05:33:20 GMT\\\",\\n            \\\"lastupdated\\\": null,\\n            \\\"owner\\\": \\\"Administrator\\\",\\n            \\\"consumingAPIs\\\": [],\\n            \\\"accessTokens\\\": {\\n                \\\"apiAccessKey_credentials\\\": {\\n                    \\\"apiAccessKey\\\": \\\"eb3fcb16-89bd-4d0b-b45b-c1257686e4d6\\\",\\n                    \\\"expirationInterval\\\": null,\\n                    \\\"expirationDate\\\": null,\\n                    \\\"expired\\\": false\\n                },\\n                \\\"oauth_credentials\\\": {\\n                    \\\"clientID\\\": null,\\n                    \\\"clientSecret\\\": null,\\n                    \\\"clientName\\\": null,\\n                    \\\"scopes\\\": null,\\n                    \\\"token_lifetime\\\": null,\\n                    \\\"token_refresh_limit\\\": null,\\n                    \\\"redirect_uris\\\": [],\\n                    \\\"Type\\\": \\\"confidential\\\"\\n                }\\n            }\\n        }\\n    ]\\n}\""
										},
										{
											"name": "This status code indicates that an application with the given ID could not be found in API Gateway.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/applications/:applicationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														":applicationId"
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Application",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\":\"039778fc-dd3b-442b-a799-181a9dda1265\",\n\t\"name\": \"SoftwareAG Application\",\n\t\"description\": \"description flows here\",\n\t\"version\": \"1.0\",\n\t\"contactEmails\": [],\n\t\"siteURLs\": [],\n\t\"identifiers\": [\n\t\t{\n\t\t\t\"value\": [\n\t\t\t\t\"partner_identifier\"\n\t\t\t],\n\t\t\t\"name\": \"Partner ID\",\n\t\t\t\"key\": \"partnerId\"\n\t\t},\n\t\t{\n\t\t\t\"value\": [\n\t\t\t\t\"10.60.30.1-10.60.30.30\"\n\t\t\t],\n\t\t\t\"name\": \"IP Addresses\",\n\t\t\t\"key\": \"ipAddressRange\"\n\t\t},\n\t\t{\n\t\t\t\"value\": [\n\t\t\t\t\"{\\\"claim_name\\\":\\\"claim_value\\\"}\"\n\t\t\t],\n\t\t\t\"name\": \"test\",\n\t\t\t\"key\": \"jwtClaims\"\n\t\t},\n\t\t{\n\t\t\t\"value\": [\n\t\t\t\t\"localhost\"\n\t\t\t],\n\t\t\t\"name\": \"Hostname\",\n\t\t\t\"key\": \"hostNameAddress\"\n\t\t}\n\t],\n\t\"consumingAPIs\": [],\n\t\"isSuspended\": false,\n\t\"newApisForAssociation\": [\n\t\t\"4c7391a9-70e5-454c-bf7c-9c999b79568f\"\n\t],\n\t\"jsOrigins\": [],\n\t\"authStrategyIds\": [\n\t\t\"6ce3122c-5d9b-4543-bb18-d104abb91971\"\n\t],\n\t\"restrictViewAsset\": false,\n\t\"teams\": [\n\t\t{\n\t\t\t\"id\": \"Administrators\"\n\t\t}\n\t]\n}"
										},
										"url": {
											"raw": "{{baseURL}}/applications/:applicationId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"applications",
												":applicationId"
											],
											"variable": [
												{
													"key": "applicationId",
													"value": "039778fc-dd3b-442b-a799-181a9dda1265",
													"description": "(Required) This parameter specifies the ID of an application that is to be updated in API Gateway."
												}
											]
										},
										"description": "This HTTP request updates a specified application in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"applicationID\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"identifiers\": [\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"contactEmails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"iconbyteArray\": \"<string>\",\n    \"accessTokens\": {\n        \"apiAccessKey\": {\n            \"apiAccessKey\": \"<string>\",\n            \"expirationInterval\": \"<string>\",\n            \"expirationDate\": \"<string>\"\n        },\n        \"oauth2Token\": {\n            \"type\": \"<string>\",\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"clientName\": \"<string>\",\n            \"scopes\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"expirationInterval\": \"<string>\",\n            \"refreshCount\": \"<string>\",\n            \"redirectUris\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    },\n    \"creationDate\": \"<string>\",\n    \"lastModified\": \"<string>\",\n    \"lastUpdated\": \"<long>\",\n    \"siteURLs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"jsOrigins\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": \"<string>\",\n    \"isSuspended\": \"<boolean>\",\n    \"authStrategyIds\": [\n        \"<string>\"\n    ],\n    \"subscription\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/applications/:applicationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														":applicationId"
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the specified application has been successfully updated in API Gateway.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"applicationID\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"identifiers\": [\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"contactEmails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"iconbyteArray\": \"<string>\",\n    \"accessTokens\": {\n        \"apiAccessKey\": {\n            \"apiAccessKey\": \"<string>\",\n            \"expirationInterval\": \"<string>\",\n            \"expirationDate\": \"<string>\"\n        },\n        \"oauth2Token\": {\n            \"type\": \"<string>\",\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"clientName\": \"<string>\",\n            \"scopes\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"expirationInterval\": \"<string>\",\n            \"refreshCount\": \"<string>\",\n            \"redirectUris\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    },\n    \"creationDate\": \"<string>\",\n    \"lastModified\": \"<string>\",\n    \"lastUpdated\": \"<long>\",\n    \"siteURLs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"jsOrigins\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": \"<string>\",\n    \"isSuspended\": \"<boolean>\",\n    \"authStrategyIds\": [\n        \"<string>\"\n    ],\n    \"subscription\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/applications/:applicationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														":applicationId"
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"applicationID\": \"<string>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"owner\": \"<string>\",\n \"identifiers\": [\n  {\n   \"id\": \"<string>\",\n   \"key\": \"<string>\",\n   \"name\": \"<string>\",\n   \"value\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  {\n   \"id\": \"<string>\",\n   \"key\": \"<string>\",\n   \"name\": \"<string>\",\n   \"value\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n ],\n \"contactEmails\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"iconbyteArray\": \"<string>\",\n \"accessTokens\": {\n  \"apiAccessKey\": {\n   \"apiAccessKey\": \"<string>\",\n   \"expirationInterval\": \"<string>\",\n   \"expirationDate\": \"<string>\"\n  },\n  \"oauth2Token\": {\n   \"type\": \"<string>\",\n   \"clientId\": \"<string>\",\n   \"clientSecret\": \"<string>\",\n   \"clientName\": \"<string>\",\n   \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"expirationInterval\": \"<string>\",\n   \"refreshCount\": \"<string>\",\n   \"redirectUris\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n },\n \"creationDate\": \"<string>\",\n \"lastModified\": \"<string>\",\n \"lastUpdated\": \"<long>\",\n \"siteURLs\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"jsOrigins\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"version\": \"<string>\",\n \"isSuspended\": \"<boolean>\",\n \"authStrategyIds\": [\n  \"<string>\"\n ],\n \"subscription\": \"<boolean>\"\n}"
										},
										{
											"name": "This status code indicates that the specified application could not be updated",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"applicationID\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"owner\": \"<string>\",\n    \"identifiers\": [\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"id\": \"<string>\",\n            \"key\": \"<string>\",\n            \"name\": \"<string>\",\n            \"value\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ],\n    \"contactEmails\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"iconbyteArray\": \"<string>\",\n    \"accessTokens\": {\n        \"apiAccessKey\": {\n            \"apiAccessKey\": \"<string>\",\n            \"expirationInterval\": \"<string>\",\n            \"expirationDate\": \"<string>\"\n        },\n        \"oauth2Token\": {\n            \"type\": \"<string>\",\n            \"clientId\": \"<string>\",\n            \"clientSecret\": \"<string>\",\n            \"clientName\": \"<string>\",\n            \"scopes\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"expirationInterval\": \"<string>\",\n            \"refreshCount\": \"<string>\",\n            \"redirectUris\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    },\n    \"creationDate\": \"<string>\",\n    \"lastModified\": \"<string>\",\n    \"lastUpdated\": \"<long>\",\n    \"siteURLs\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"jsOrigins\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"version\": \"<string>\",\n    \"isSuspended\": \"<boolean>\",\n    \"authStrategyIds\": [\n        \"<string>\"\n    ],\n    \"subscription\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/applications/:applicationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"applications",
														":applicationId"
													],
													"variable": [
														{
															"key": "applicationId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Strategy",
							"item": [
								{
									"name": "OAuth",
									"item": [
										{
											"name": "Create Local OAuth2 Strategy with ClientID",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"OAuthStrategyClienID\",\n    \"description\": \"description flows here\",\n    \"authServerAlias\": \"local\",\n    \"audience\": \"oauth_audience\",\n    \"type\": \"OAUTH2\",\n    \"clientId\": \"oauth_clientID\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/strategies",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"strategies"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Local OAuth2 Strategy with Credentials",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"OAuthStrategyCredentials\",\n\t\"description\": \"description flows here\",\n\t\"authServerAlias\": \"local\",\n\t\"audience\": \"oauth_audience\",\n\t\"type\": \"OAUTH2\",\n\t\"dcrConfig\": {\n\t\t\"allowedGrantTypes\": [\n\t\t\t\"authorization_code\",\n\t\t\t\"password\",\n\t\t\t\"client_credentials\",\n\t\t\t\"refresh_token\",\n\t\t\t\"implicit\"\n\t\t],\n\t\t\"scopes\": [],\n\t\t\"redirectUris\": [\n\t\t\t\"https://redirectURI.com\"\n\t\t],\n\t\t\"authServer\": \"local\",\n\t\t\"applicationType\": \"web\",\n\t\t\"clientType\": \"CONFIDENTIAL\",\n\t\t\"expirationInterval\": 3600,\n\t\t\"refreshCount\": \"100\"\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/strategies",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"strategies"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create OAuth OAuth2 Strategy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"OAuth_OAuthStrategy\",\n\t\"description\": \"description flows here\",\n\t\"authServerAlias\": \"oauth\",\n\t\"audience\": \"oauth_audience\",\n\t\"secret\": \"bWFuYWdl\",\n\t\"type\": \"OAUTH2_LOCAL_HSA\",\n\t\"clientId\": \"oauth_clientid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/strategies",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"strategies"
													]
												}
											},
											"response": []
										}
									],
									"description": "Explanation:\nOAuth Strategy contains two types of Auth Servers. They are local and oauth.\n\n\nLocal Auth Server:\nCreate local auth server with either client id or generate the credentials.\n\nOAuth Auth Server:\nWe can create oauth auth server with or without HMAC secret.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "JWT",
									"item": [
										{
											"name": "Create JWT Strategy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"JWTStrategy\",\n    \"description\": \"description flows here\",\n    \"authServerAlias\": \"oauth\",\n    \"audience\": \"jwt_audience\",\n    \"secret\": \"bWFuYWdl\",\n    \"type\": \"JWT_HSA\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/strategies",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"strategies"
													]
												}
											},
											"response": []
										}
									],
									"description": "Explanation:\nThe available values for authServerAlias are local and oauth.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "OpenID",
									"item": [
										{
											"name": "Create OpenID Strategy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"OpenIDStrategy\",\n    \"description\": \"description flows here\",\n    \"authServerAlias\": \"oauth\",\n    \"audience\": \"openid_audience\",\n    \"secret\": \"bWFuYWdl\",\n    \"type\": \"OPENID_CONNECT_HSA\",\n    \"clientId\": \"openid_clientid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/strategies",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"strategies"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Get All Strategies",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/strategies",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"strategies"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Strategy by StrategyID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/strategies/:strategyId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"strategies",
												":strategyId"
											],
											"variable": [
												{
													"key": "strategyId",
													"value": "50dc438a-934d-48b8-bcd2-51ba76242a9e"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Strategy",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"50dc438a-934d-48b8-bcd2-51ba76242a9e\",\n    \"type\": \"OAUTH2_LOCAL_HSA\",\n    \"authServerAlias\": \"oauth\",\n    \"name\": \"OAuth_OAuthStrategy\",\n    \"description\": \"this is description\",\n    \"clientId\": \"oauth_clientid\",\n    \"jwtAuthStrategy\": {\n        \"id\": \"50dc438a-934d-48b8-bcd2-51ba76242a9e_embed\",\n        \"type\": \"JWT_HSA\",\n        \"authServerAlias\": \"oauth\",\n        \"name\": \"OAuth_OAuthStrategyembed\",\n        \"description\": \"description flows here - Embedded\",\n        \"audience\": \"oauth_audience\",\n        \"secret\": \"********************************\"\n    },\n    \"secret\": \"********************************\",\n    \"audience\": \"oauth_audience\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/strategies/:strategyId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"strategies",
												":strategyId"
											],
											"variable": [
												{
													"key": "strategyId",
													"value": "50dc438a-934d-48b8-bcd2-51ba76242a9e"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Refresh Credentials",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"50dc438a-934d-48b8-bcd2-51ba76242a9e\",\n    \"type\": \"OAUTH2_LOCAL_HSA\",\n    \"authServerAlias\": \"oauth\",\n    \"name\": \"OAuth_OAuthStrategy\",\n    \"description\": \"this is description\",\n    \"clientId\": \"oauth_clientid\",\n    \"jwtAuthStrategy\": {\n        \"id\": \"50dc438a-934d-48b8-bcd2-51ba76242a9e_embed\",\n        \"type\": \"JWT_HSA\",\n        \"authServerAlias\": \"oauth\",\n        \"name\": \"OAuth_OAuthStrategyembed\",\n        \"description\": \"description flows here - Embedded\",\n        \"audience\": \"oauth_audience\",\n        \"secret\": \"********************************\"\n    },\n    \"secret\": \"********************************\",\n    \"audience\": \"oauth_audience\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/strategies/:strategyId/refreshCredentials",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"strategies",
												":strategyId",
												"refreshCredentials"
											],
											"variable": [
												{
													"key": "strategyId",
													"value": "50dc438a-934d-48b8-bcd2-51ba76242a9e"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Strategy",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/strategies/:strategyId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"strategies",
												":strategyId"
											],
											"variable": [
												{
													"key": "strategyId",
													"value": "50dc438a-934d-48b8-bcd2-51ba76242a9e"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "Explanation:\nWith this collection we can do CRUD operations on different types of Strategies like OAuth, JWT and OpenID.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"description": "Explanation:\r\nThis postman collection contains API Gateway REST service to manage applications and strategies. With this postman collection one can do CRUD operations on Application and Strategy.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Approval Management",
					"item": [
						{
							"name": "Approval Configurations",
							"item": [
								{
									"name": "Get All Approval Configurations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/approvalConfigurations",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"approvalConfigurations"
											]
										},
										"description": "The method retrieves a list of available approval configurations in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that a list of the available approval configurations is retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"approvalConfigurations\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"createApplication\\\",\\r\\n            \\\"eventType\\\": \\\"createApplication\\\",\\r\\n            \\\"isEnabled\\\": true,\\r\\n            \\\"approversGroupId\\\": \\\"0936de2c-9fb9-4625-b5b0-b7648e0d4103\\\",\\r\\n            \\\"approvalMode\\\": \\\"anyone\\\",\\r\\n            \\\"approvedEmailConfiguration\\\": {\\r\\n                \\\"emailSubject\\\": \\\"Approval of @event.type\\\",\\r\\n                \\\"emailContent\\\": \\\"Congratulations @requestor.name !\\\\n\\\\nYour request for @event.type has been approved.\\\",\\r\\n                \\\"enabled\\\": false,\\r\\n                \\\"requestType\\\": \\\"approved\\\"\\r\\n            },\\r\\n            \\\"rejectedEmailConfiguration\\\": {\\r\\n                \\\"emailSubject\\\": \\\"Rejection of @event.type\\\",\\r\\n                \\\"emailContent\\\": \\\"Hello @requestor.name,\\\\n\\\\nYour @event.type  request has been rejected.\\\\nReasons:@rejectionReason.\\\\n\\\\nBest Regards,\\\\nAPI Gateway Team\\\\n\\\\n*** This notification was sent automatically. Do not reply to this email.***\\\",\\r\\n                \\\"enabled\\\": false,\\r\\n                \\\"requestType\\\": \\\"rejected\\\"\\r\\n            },\\r\\n            \\\"initiateApprovalRequestEmailConfiguration\\\": {\\r\\n                \\\"emailSubject\\\": \\\"Approval request pending\\\",\\r\\n                \\\"emailContent\\\": \\\"Hello @approver.name,\\\\n\\\\n A request by @requestor.name to @event.type needs your review and approval.\\\\n\\\\nBest Regards,\\\\nAPI Gateway Team\\\\n\\\\n*** This notification was sent automatically. Do not reply to this email.***\\\",\\r\\n                \\\"enabled\\\": false,\\r\\n                \\\"requestType\\\": \\\"initiate\\\"\\r\\n            }\\r\\n        }\\r\\n    ]\\r\\n}\""
										}
									]
								},
								{
									"name": "Create Approval Configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"approvalConfig\": {\n\t\t\"id\": \"createApplication\",\n\t\t\"eventType\": \"createApplication\",\n\t\t\"isEnabled\": true,\n\t\t\"approversGroupId\": \"API-Gateway-Providers\",\n\t\t\"approvalMode\": \"anyone\",\n\t\t\"approvedEmailConfiguration\": {\n\t\t\t\"emailSubject\": \"Approval of @event.type\",\n\t\t\t\"emailContent\": \"Congratulations @requestor.name !\\n\\nYour request for @event.type has been approved.\\n\\n *** This notification was sent automatically. Do not reply to this email.***\",\n\t\t\t\"enabled\": true,\n\t\t\t\"requestType\": \"approved\"\n\t\t},\n\t\t\"rejectedEmailConfiguration\": {\n\t\t\t\"emailSubject\": \"Rejection of @event.type\",\n\t\t\t\"emailContent\": \"Hello @requestor.name,\\n\\nYour @event.type  request has been rejected.\\nReasons:@rejectionReason.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\n\t\t\t\"enabled\": true,\n\t\t\t\"requestType\": \"rejected\"\n\t\t},\n\t\t\"initiateApprovalRequestEmailConfiguration\": {\n\t\t\t\"emailSubject\": \"Approval request pending\",\n\t\t\t\"emailContent\": \"Hello @approver.name,\\n\\n A request by @requestor.name to @event.type needs your review and approval.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\n\t\t\t\"enabled\": true,\n\t\t\t\"requestType\": \"initiate\"\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/approvalConfigurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"approvalConfigurations"
											]
										},
										"description": "Approval Configuration:\n\nSimilar to this we can create approval configurations for other event types also. Change the \"id\" and \"eventType\" as mentioned below.\n\n1. createApplication\n2. registerApplication\n3. updateApplication\n4. subscribePackage\n5. changeOwner"
									},
									"response": [
										{
											"name": "This status code indicates that the given approval configuration request body is not correct.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"eventType\": \"<string>\",\n    \"isEnabled\": \"<boolean>\",\n    \"approversGroupId\": \"<string>\",\n    \"approvalMode\": \"<string>\",\n    \"approvedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"rejectedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"initiateApprovalRequestEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the approval configuration has been successfully created in API Gateway.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"eventType\": \"<string>\",\n    \"isEnabled\": \"<boolean>\",\n    \"approversGroupId\": \"<string>\",\n    \"approvalMode\": \"<string>\",\n    \"approvedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"rejectedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"initiateApprovalRequestEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"approvalConfig\\\": {\\r\\n        \\\"id\\\": \\\"createApplication\\\",\\r\\n        \\\"eventType\\\": \\\"createApplication\\\",\\r\\n        \\\"isEnabled\\\": true,\\r\\n        \\\"approversGroupId\\\": \\\"0936de2c-9fb9-4625-b5b0-b7648e0d4103\\\",\\r\\n        \\\"approvalMode\\\": \\\"anyone\\\",\\r\\n        \\\"approvedEmailConfiguration\\\": {\\r\\n            \\\"emailSubject\\\": \\\"Approval of @event.type\\\",\\r\\n            \\\"emailContent\\\": \\\"Congratulations @requestor.name !\\\\n\\\\nYour request for @event.type has been approved.\\\",\\r\\n            \\\"enabled\\\": false,\\r\\n            \\\"requestType\\\": \\\"approved\\\"\\r\\n        },\\r\\n        \\\"rejectedEmailConfiguration\\\": {\\r\\n            \\\"emailSubject\\\": \\\"Rejection of @event.type\\\",\\r\\n            \\\"emailContent\\\": \\\"Hello @requestor.name,\\\\n\\\\nYour @event.type  request has been rejected.\\\\nReasons:@rejectionReason.\\\\n\\\\nBest Regards,\\\\nAPI Gateway Team\\\\n\\\\n*** This notification was sent automatically. Do not reply to this email.***\\\",\\r\\n            \\\"enabled\\\": false,\\r\\n            \\\"requestType\\\": \\\"rejected\\\"\\r\\n        },\\r\\n        \\\"initiateApprovalRequestEmailConfiguration\\\": {\\r\\n            \\\"emailSubject\\\": \\\"Approval request pending\\\",\\r\\n            \\\"emailContent\\\": \\\"Hello @approver.name,\\\\n\\\\n A request by @requestor.name to @event.type needs your review and approval.\\\\n\\\\nBest Regards,\\\\nAPI Gateway Team\\\\n\\\\n*** This notification was sent automatically. Do not reply to this email.***\\\",\\r\\n            \\\"enabled\\\": false,\\r\\n            \\\"requestType\\\": \\\"initiate\\\"\\r\\n        }\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"eventType\": \"<string>\",\n    \"isEnabled\": \"<boolean>\",\n    \"approversGroupId\": \"<string>\",\n    \"approvalMode\": \"<string>\",\n    \"approvedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"rejectedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"initiateApprovalRequestEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Approval Configuration by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/approvalConfigurations/:id",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"approvalConfigurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "createApplication",
													"description": "(Required) This parameter specifies the ID of an approval configuration whose details are to be retrieved in API Gateway."
												}
											]
										},
										"description": "The method retrieves the details of a specified approval configuration in API Gateway"
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that an approval configuration with the given ID could not be found in API Gateway.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the details of the specified approval configuration are retrieved successfully.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"approvalConfig\\\": {\\r\\n        \\\"id\\\": \\\"createApplication\\\",\\r\\n        \\\"eventType\\\": \\\"createApplication\\\",\\r\\n        \\\"isEnabled\\\": true,\\r\\n        \\\"approversGroupId\\\": \\\"0936de2c-9fb9-4625-b5b0-b7648e0d4103\\\",\\r\\n        \\\"approvalMode\\\": \\\"anyone\\\",\\r\\n        \\\"approvedEmailConfiguration\\\": {\\r\\n            \\\"emailSubject\\\": \\\"Approval of @event.type\\\",\\r\\n            \\\"emailContent\\\": \\\"Congratulations @requestor.name !\\\\n\\\\nYour request for @event.type has been approved.\\\",\\r\\n            \\\"enabled\\\": false,\\r\\n            \\\"requestType\\\": \\\"approved\\\"\\r\\n        },\\r\\n        \\\"rejectedEmailConfiguration\\\": {\\r\\n            \\\"emailSubject\\\": \\\"Rejection of @event.type\\\",\\r\\n            \\\"emailContent\\\": \\\"Hello @requestor.name,\\\\n\\\\nYour @event.type  request has been rejected.\\\\nReasons:@rejectionReason.\\\\n\\\\nBest Regards,\\\\nAPI Gateway Team\\\\n\\\\n*** This notification was sent automatically. Do not reply to this email.***\\\",\\r\\n            \\\"enabled\\\": false,\\r\\n            \\\"requestType\\\": \\\"rejected\\\"\\r\\n        },\\r\\n        \\\"initiateApprovalRequestEmailConfiguration\\\": {\\r\\n            \\\"emailSubject\\\": \\\"Approval request pending\\\",\\r\\n            \\\"emailContent\\\": \\\"Hello @approver.name,\\\\n\\\\n A request by @requestor.name to @event.type needs your review and approval.\\\\n\\\\nBest Regards,\\\\nAPI Gateway Team\\\\n\\\\n*** This notification was sent automatically. Do not reply to this email.***\\\",\\r\\n            \\\"enabled\\\": false,\\r\\n            \\\"requestType\\\": \\\"initiate\\\"\\r\\n        }\\r\\n    }\\r\\n}\""
										}
									]
								},
								{
									"name": "Update Approval Configuration",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"approvalConfig\": {\n\t\t\"id\": \"createApplication\",\n\t\t\"eventType\": \"createApplication\",\n\t\t\"isEnabled\": true,\n\t\t\"approversGroupId\": \"API-Gateway-Providers\",\n\t\t\"approvalMode\": \"anyone\",\n\t\t\"approvedEmailConfiguration\": {\n\t\t\t\"emailSubject\": \"Approval of @event.type\",\n\t\t\t\"emailContent\": \"Congratulations @requestor.name !\\n\\nYour request for @event.type has been approved.\\n\\n *** This notification was sent automatically. Do not reply to this email.***\",\n\t\t\t\"enabled\": true,\n\t\t\t\"requestType\": \"approved\"\n\t\t},\n\t\t\"rejectedEmailConfiguration\": {\n\t\t\t\"emailSubject\": \"Rejection of @event.type\",\n\t\t\t\"emailContent\": \"Hello @requestor.name,\\n\\nYour @event.type  request has been rejected.\\nReasons:@rejectionReason.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\n\t\t\t\"enabled\": true,\n\t\t\t\"requestType\": \"rejected\"\n\t\t},\n\t\t\"initiateApprovalRequestEmailConfiguration\": {\n\t\t\t\"emailSubject\": \"Approval request pending\",\n\t\t\t\"emailContent\": \"Hello @approver.name,\\n\\n A request by @requestor.name to @event.type needs your review and approval.\\n\\nBest Regards,\\nAPI Gateway Team\\n\\n*** This notification was sent automatically. Do not reply to this email.***\",\n\t\t\t\"enabled\": true,\n\t\t\t\"requestType\": \"initiate\"\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/approvalConfigurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"approvalConfigurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "createApplication",
													"description": "(Required) This parameter specifies the ID of an approval configuration that is to be updated in API Gateway."
												}
											]
										},
										"description": "The method updates the approval configuration in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that the given approval configuration request body is not correct.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"eventType\": \"<string>\",\n    \"isEnabled\": \"<boolean>\",\n    \"approversGroupId\": \"<string>\",\n    \"approvalMode\": \"<string>\",\n    \"approvedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"rejectedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"initiateApprovalRequestEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the approval configuration has been successfully updated in API Gateway.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"eventType\": \"<string>\",\n    \"isEnabled\": \"<boolean>\",\n    \"approversGroupId\": \"<string>\",\n    \"approvalMode\": \"<string>\",\n    \"approvedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"rejectedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"initiateApprovalRequestEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"approvalConfig\\\": {\\r\\n        \\\"id\\\": \\\"createApplication\\\",\\r\\n        \\\"eventType\\\": \\\"createApplication\\\",\\r\\n        \\\"isEnabled\\\": true,\\r\\n        \\\"approversGroupId\\\": \\\"0936de2c-9fb9-4625-b5b0-b7648e0d4103\\\",\\r\\n        \\\"approvalMode\\\": \\\"anyone\\\",\\r\\n        \\\"approvedEmailConfiguration\\\": {\\r\\n            \\\"emailSubject\\\": \\\"Approval of @event.type\\\",\\r\\n            \\\"emailContent\\\": \\\"Congratulations @requestor.name !\\\\n\\\\nYour request for @event.type has been approved.\\\",\\r\\n            \\\"enabled\\\": false,\\r\\n            \\\"requestType\\\": \\\"approved\\\"\\r\\n        },\\r\\n        \\\"rejectedEmailConfiguration\\\": {\\r\\n            \\\"emailSubject\\\": \\\"Rejection of @event.type\\\",\\r\\n            \\\"emailContent\\\": \\\"Hello @requestor.name,\\\\n\\\\nYour @event.type  request has been rejected.\\\\nReasons:@rejectionReason.\\\\n\\\\nBest Regards,\\\\nAPI Gateway Team\\\\n\\\\n*** This notification was sent automatically. Do not reply to this email.***\\\",\\r\\n            \\\"enabled\\\": false,\\r\\n            \\\"requestType\\\": \\\"rejected\\\"\\r\\n        },\\r\\n        \\\"initiateApprovalRequestEmailConfiguration\\\": {\\r\\n            \\\"emailSubject\\\": \\\"Approval request pending\\\",\\r\\n            \\\"emailContent\\\": \\\"Hello @approver.name,\\\\n\\\\n A request by @requestor.name to @event.type needs your review and approval.\\\\n\\\\nBest Regards,\\\\nAPI Gateway Team\\\\n\\\\n*** This notification was sent automatically. Do not reply to this email.***\\\",\\r\\n            \\\"enabled\\\": false,\\r\\n            \\\"requestType\\\": \\\"initiate\\\"\\r\\n        }\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"<string>\",\n    \"eventType\": \"<string>\",\n    \"isEnabled\": \"<boolean>\",\n    \"approversGroupId\": \"<string>\",\n    \"approvalMode\": \"<string>\",\n    \"approvedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"rejectedEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    },\n    \"initiateApprovalRequestEmailConfiguration\": {\n        \"emailSubject\": \"<string>\",\n        \"emailContent\": \"<string>\",\n        \"enabled\": \"<boolean>\",\n        \"requestType\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Approval Configuration",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/approvalConfigurations/:id",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"approvalConfigurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "createApplication",
													"description": "(Required) This parameter specifies the ID of an approval configuration that is to be deleted in API Gateway."
												}
											]
										},
										"description": "The method deletes the specified approval configuration in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that an approval configuration with the given ID could not be found in API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the specified approval configuration has been successfully deleted from API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvalConfigurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvalConfigurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Pending Approvals",
							"item": [
								{
									"name": "Get All Approvals",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/approvals",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"approvals"
											]
										},
										"description": "Retrieve all the approval requests waiting for the user. If the user is part of one or more approval team, then he/she will get the approval requests assigned for those teams."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The method provides all approval requests pending for the user",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\n    \\\"approvalRequests\\\": [\\n        {\\n            \\\"id\\\": \\\"726fbffa-3713-493b-8f5c-e1b04ec71798\\\",\\n            \\\"approversGroupId\\\": \\\"API-Gateway-Providers\\\",\\n            \\\"approvalEvent\\\": \\\"createApplication\\\",\\n            \\\"requestorId\\\": \\\"Administrator\\\",\\n            \\\"requestorName\\\": \\\"Administrator\\\",\\n            \\\"requestorFirstName\\\": \\\"Administrator\\\",\\n            \\\"requestorLastName\\\": \\\"\\\",\\n            \\\"requestorMail\\\": \\\"\\\",\\n            \\\"mode\\\": \\\"anyone\\\",\\n            \\\"created\\\": \\\"1586950929208\\\",\\n            \\\"lastUpdated\\\": \\\"1586950929208\\\",\\n            \\\"status\\\": \\\"pending\\\",\\n            \\\"approvalEventPayloadAsString\\\": \\\"{\\\\\\\"applicationID\\\\\\\":\\\\\\\"36005e81-9714-4eef-9a83-e819a405fbca\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"Approval Application\\\\\\\",\\\\\\\"owner\\\\\\\":\\\\\\\"Administrator\\\\\\\",\\\\\\\"identifiers\\\\\\\":[],\\\\\\\"contactEmails\\\\\\\":[],\\\\\\\"lastUpdated\\\\\\\":0,\\\\\\\"siteURLs\\\\\\\":[],\\\\\\\"jsOrigins\\\\\\\":[],\\\\\\\"version\\\\\\\":\\\\\\\"1.0\\\\\\\",\\\\\\\"properties\\\\\\\":{\\\\\\\"requesterComment\\\\\\\":null},\\\\\\\"isSuspended\\\\\\\":false,\\\\\\\"authStrategyIds\\\\\\\":[],\\\\\\\"subscription\\\\\\\":false}\\\",\\n            \\\"approvers\\\": [\\n                {\\n                    \\\"id\\\": \\\"gora\\\",\\n                    \\\"name\\\": \\\"gora\\\",\\n                    \\\"firstName\\\": \\\"gora\\\",\\n                    \\\"lastName\\\": \\\"gora\\\",\\n                    \\\"status\\\": \\\"pending\\\",\\n                    \\\"email\\\": \\\"gora@softwareag.com\\\"\\n                }\\n            ],\\n            \\\"properties\\\": {\\n                \\\"newApisForAssociation\\\": \\\"\\\"\\n            }\\n        }\\n    ]\\n}\""
										}
									]
								},
								{
									"name": "Get Approval Request by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/approvals/:approvalId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"approvals",
												":approvalId"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "24a97e00-9c8d-4b01-987b-8d65d230aab0",
													"description": "(Required) approvalId for the Approval Request to be retrieved"
												}
											]
										},
										"description": "Retrieve an Approval Request based on the approvalId."
									},
									"response": [
										{
											"name": "This status code indicates that the approvalId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId"
													],
													"variable": [
														{
															"key": "approvalId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId"
													],
													"variable": [
														{
															"key": "approvalId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This method provides the details of approval request.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId"
													],
													"variable": [
														{
															"key": "approvalId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\n    \\\"approvalRequest\\\": {\\n        \\\"id\\\": \\\"726fbffa-3713-493b-8f5c-e1b04ec71798\\\",\\n        \\\"approversGroupId\\\": \\\"API-Gateway-Providers\\\",\\n        \\\"approvalEvent\\\": \\\"createApplication\\\",\\n        \\\"requestorId\\\": \\\"Administrator\\\",\\n        \\\"requestorName\\\": \\\"Administrator\\\",\\n        \\\"requestorFirstName\\\": \\\"Administrator\\\",\\n        \\\"requestorLastName\\\": \\\"\\\",\\n        \\\"requestorMail\\\": \\\"\\\",\\n        \\\"mode\\\": \\\"anyone\\\",\\n        \\\"created\\\": \\\"1586950929208\\\",\\n        \\\"lastUpdated\\\": \\\"1586950929208\\\",\\n        \\\"status\\\": \\\"pending\\\",\\n        \\\"approvalEventPayloadAsString\\\": \\\"{\\\\\\\"applicationID\\\\\\\":\\\\\\\"36005e81-9714-4eef-9a83-e819a405fbca\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"Approval Application\\\\\\\",\\\\\\\"owner\\\\\\\":\\\\\\\"Administrator\\\\\\\",\\\\\\\"identifiers\\\\\\\":[],\\\\\\\"contactEmails\\\\\\\":[],\\\\\\\"lastUpdated\\\\\\\":0,\\\\\\\"siteURLs\\\\\\\":[],\\\\\\\"jsOrigins\\\\\\\":[],\\\\\\\"version\\\\\\\":\\\\\\\"1.0\\\\\\\",\\\\\\\"properties\\\\\\\":{\\\\\\\"requesterComment\\\\\\\":null},\\\\\\\"isSuspended\\\\\\\":false,\\\\\\\"authStrategyIds\\\\\\\":[],\\\\\\\"subscription\\\\\\\":false}\\\",\\n        \\\"approvers\\\": [\\n            {\\n                \\\"id\\\": \\\"gora\\\",\\n                \\\"name\\\": \\\"gora\\\",\\n                \\\"firstName\\\": \\\"gora\\\",\\n                \\\"lastName\\\": \\\"gora\\\",\\n                \\\"status\\\": \\\"pending\\\",\\n                \\\"email\\\": \\\"gora@softwareag.com\\\"\\n            }\\n        ],\\n        \\\"properties\\\": {\\n            \\\"newApisForAssociation\\\": \\\"\\\"\\n        }\\n    }\\n}\""
										}
									]
								},
								{
									"name": "Delete Approval Request",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/approvals/:approvalId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"approvals",
												":approvalId"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "24a97e00-9c8d-4b01-987b-8d65d230aab0",
													"description": "(Required) Approval Request Id for the Approval Request to be deleted"
												}
											]
										},
										"description": "Delete the Approval Request with the given approvalId"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId"
													],
													"variable": [
														{
															"key": "approvalId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId"
													],
													"variable": [
														{
															"key": "approvalId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the approvalId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId"
													],
													"variable": [
														{
															"key": "approvalId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Approve or Reject Approval Request",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"approverComment\": \"comments flows here\"\n}"
										},
										"url": {
											"raw": "{{baseURL}}/approvals/:approvalId/:action",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"approvals",
												":approvalId",
												":action"
											],
											"variable": [
												{
													"key": "approvalId",
													"value": "df0645de-cdd2-415d-94ff-abbf62987483",
													"description": "(Required) ApprovalId for the Approval Request to be approved"
												},
												{
													"key": "action",
													"value": "approve",
													"description": "(Required) Action for the Approval Request to be approve/reject."
												}
											]
										},
										"description": "Request payload for the approval request."
									},
									"response": [
										{
											"name": "This status code indicates that the given approval request body is not correct.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"approverComment\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId",
														":action"
													],
													"variable": [
														{
															"key": "approvalId"
														},
														{
															"key": "action"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that server has encountered an error during the update of approval request.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"approverComment\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId",
														":action"
													],
													"variable": [
														{
															"key": "approvalId"
														},
														{
															"key": "action"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the approvalId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"approverComment\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId",
														":action"
													],
													"variable": [
														{
															"key": "approvalId"
														},
														{
															"key": "action"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"approverComment\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId",
														":action"
													],
													"variable": [
														{
															"key": "approvalId"
														},
														{
															"key": "action"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Response payload of the approval request after approve/reject action.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"approverComment\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/approvals/:approvalId/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"approvals",
														":approvalId",
														":action"
													],
													"variable": [
														{
															"key": "approvalId"
														},
														{
															"key": "action"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\n    \\\"status\\\": \\\"approved\\\"\\n}\""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Archive Service",
					"item": [
						{
							"name": "Export API Gateway Assets",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/archive?include-applications=<string>&include-users=<string>&include-groups=<string>&include-truststores=<string>&policies=<string>,<string>&apis=<string>,<string>&aliases=<string>,<string>&applications=<string>,<string>&policyActions=<string>,<string>&approvalConfigurations=<string>,<string>&outboundProxies=<string>,<string>&urlAliases=<string>,<string>&keyStores=<string>,<string>&trustStores=<string>,<string>&JNDIProviderAliases=<string>,<string>&JMSConnectionAliases=<string>,<string>&JMSTriggers=<string>,<string>&webserviceEndpointAliases=<string>,<string>&users=<string>,<string>&groups=<string>,<string>&accessProfiles=<string>,<string>&kerberosSetting=<string>&plans=<string>,<string>&packages=<string>,<string>&configurations=<string>,<string>",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"archive"
									],
									"query": [
										{
											"key": "include-applications",
											"value": "<string>",
											"description": "This parameter indicates whether you want to export the applications associated with the\nAPIs"
										},
										{
											"key": "include-users",
											"value": "<string>",
											"description": "This parameter indicates whether you want to export users associated with the groups and/or with the password expiry settings"
										},
										{
											"key": "include-groups",
											"value": "<string>",
											"description": "This parameter indicates whether you want to export groups associated with the teams"
										},
										{
											"key": "include-truststores",
											"value": "<string>",
											"description": "This parameter indicates whether you want to export truststore alias associated with the email configuration"
										},
										{
											"key": "policies",
											"value": "<string>,<string>",
											"description": "This parameter identifies the policies to be exported. The wildcard \"*\" selects all the policies. \nFor example a single policy can be exported with its id using the following request:\nGET /rest/apigateway/archive?policies=07b8d7b7-20b7-422e-8464-4b19d405c41a\n\nWhereas, all the policies can be exported using the following request:\nGET /rest/apigateway/archive?policies=*"
										},
										{
											"key": "apis",
											"value": "<string>,<string>",
											"description": "This parameter identifies the APIs to be exported. The wildcard \"*\" selects all the APIs. \nFor example a single API can be exported using the following request:\nGET /rest/apigateway/archive?apis=e2996867-af49-4ac6-98e7-cba48837c13e\n\nWhereas, all the APIs can be exported using the following request:\nGET /rest/apigateway/archive?apis=*"
										},
										{
											"key": "aliases",
											"value": "<string>,<string>",
											"description": "This parameter identifies the aliases to be exported. \nThe wildcard \"*\" selects all aliases.\nFor example, a single alias can be exported using the following requrest:\nGET /rest/apigateway/archive?aliases=d1885756-9e38-39b5-87d6-ba937726b02d\n\nWhereas, all the APIs can be exported using the following request:\nGET /rest/apigateway/archive?alias=*"
										},
										{
											"key": "applications",
											"value": "<string>,<string>",
											"description": "This parameter identifies the applications to be exported. \nThe wildcard \"*\" selects all applications.\nFor example, a single application can be exported using the following requrest:\nGET /rest/apigateway/archive?applications=d1885756-9e38-39b5-87d6-ba937726b02d\n\nWhereas, all the applications can be exported using the following request:\nGET /rest/apigateway/archive?applications=*"
										},
										{
											"key": "policyActions",
											"value": "<string>,<string>",
											"description": "This parameter identifies the policy actions to be exported. \nThe wildcard \"*\" selects all policy actions.\nFor example, a single policy action can be exported using the following request:\n GET /rest/apigateway/archive?policyActions=20ca1e24-d6b2-430d-adf8-7a53a6cbaa53\n\nWhereas, all the policy actions can be exported using the following request:\nGET /rest/apigateway/archive?policyActions=*"
										},
										{
											"key": "approvalConfigurations",
											"value": "<string>,<string>",
											"description": "This parameter identifies the approval configurations to be exported. \nThe wildcard \"*\" selects all approval configurations.\nFor example, a single approval configuration can be exported using the following request:\nGET /rest/apigateway/archive?approvalConfigurations=createApplication\n\nWhereas, all the approval configurations can be exported using the following request:\n GET /rest/apigateway/archive?approvalConfigurations=*"
										},
										{
											"key": "outboundProxies",
											"value": "<string>,<string>",
											"description": "This parameter identifies the outbound proxy aliases to be exported. outbound proxy aliases are idetified with it's name.\nThe wildcard \"*\" selects all the outbound proxy aliases. \nFor example a single outbound proxy alias can be exported using the following request:\nGET /rest/apigateway/archive?outboundProxies=testOutboundProxyAlias\n\nWhereas, all the outbound proxy aliases can be exported using the following request:\nGET /rest/apigateway/archive?outboundProxies=*"
										},
										{
											"key": "urlAliases",
											"value": "<string>,<string>",
											"description": "This parameter identifies the URL aliases to be exported. URL aliases are idetified with it's name.\nThe wildcard \"*\" selects all the URL aliases. \nFor example, a single URL alias can be exported using the following request:\nGET /rest/apigateway/archive?urlAliases=testUrlAlias\n\nWhereas, all the URL aliases can be exported using the following request:\nGET /rest/apigateway/archive?testUrlAlias=*"
										},
										{
											"key": "keyStores",
											"value": "<string>,<string>",
											"description": "This parameter identifies the keystore aliases to be exported. Keystore aliases are idetified with it's name.\nThe wildcard \"*\" selects all the keystore aliases. \nFor example, a single keystore alias can be exported using the following request:\nGET /rest/apigateway/archive?keyStores=test_keystore\n\nWhereas, all the keystore aliases can be exported using the following request:\nGET /rest/apigateway/archive?keyStores=*"
										},
										{
											"key": "trustStores",
											"value": "<string>,<string>",
											"description": "This parameter identifies the truststore aliases to be exported. Truststore aliases are idetified with it's name.\nThe wildcard \"*\" selects all the truststore aliases. \nFor example, a single truststore alias can be exported using the following request:\nGET /rest/apigateway/archive?trustStores=test_truststore\n\nWhereas, all the truststore aliases can be exported using the following request:\nGET /rest/apigateway/archive?trustStores=*"
										},
										{
											"key": "JNDIProviderAliases",
											"value": "<string>,<string>",
											"description": "This parameter identifies the JNDI provider aliases to be exported. JNDI provider aliases are idetified with it's name.\nThe wildcard \"*\" selects all the JNDI provider aliases. \nFor example, a single JNDI provider alias can be exported using the following request:\nGET /rest/apigateway/archive?JNDIProviderAliases=test_jndiProviderAlias\n\nWhereas, all the JNDI provider aliases can be exported using the following request:\nGET /rest/apigateway/archive?JNDIProviderAliases=*"
										},
										{
											"key": "JMSConnectionAliases",
											"value": "<string>,<string>",
											"description": "This parameter identifies the JMS connection aliases to be exported. JMS connection aliases are idetified with it's name.\nThe wildcard \"*\" selects all the JNDI provider aliases. \nFor example, a single JNDI provider alias can be exported using the following request:\nGET /rest/apigateway/archive?JMSConnectionAliases=test_jmsConnectionAlias\n\nWhereas, all the JMS connection aliases can be exported using the following request:\nGET /rest/apigateway/archive?JMSConnectionAliases=*"
										},
										{
											"key": "JMSTriggers",
											"value": "<string>,<string>",
											"description": "This parameter identifies the JMS triggers to be exported. JMS triggers are idetified with it's name.\nThe wildcard \"*\" selects all the JMS triggers. \nFor example, a single JMS trigger can be exported using the following request:\nGET /rest/apigateway/archive?JMSTriggers=test_jmsTrigger\n\nWhereas, all the JMS triggers can be exported using the following request:\nGET /rest/apigateway/archive?JMSTriggers=*"
										},
										{
											"key": "webserviceEndpointAliases",
											"value": "<string>,<string>",
											"description": "This parameter identifies the 'web service endpoint' aliases to be exported. Web service endpoint aliases are idetified with it's name.\nThe wildcard \"*\" selects all the web service endpoint aliases. \nFor example, a single web service endpoint alias can be exported using the following request:\nGET /rest/apigateway/archive?webserviceEndpointAliases=test_wsEndpointAlias\n\nWhereas, all the JMS triggers can be exported using the following request:\nGET /rest/apigateway/archive?webserviceEndpointAliases=*"
										},
										{
											"key": "users",
											"value": "<string>,<string>",
											"description": "This parameter identifies the users to be exported. \nThe wildcard \"*\" selects all the users. \nFor example, a single user can be exported using the following request:\nGET /rest/apigateway/archive?users=7a6d3d40-44d8-4ab1-83df-5be63cdbae54\n\nWhereas, all the users can be exported using the following request:\nGET /rest/apigateway/archive?users=*"
										},
										{
											"key": "groups",
											"value": "<string>,<string>",
											"description": "This parameter identifies the groups to be exported. \nThe wildcard \"*\" selects all the groups. \nFor example, a single group can be exported using the following request:\nGET /rest/apigateway/archive?groups=d6b38ff8-59a8-47bf-9fba-0bdb24ee5b48\n\nWhereas, all the groups can be exported using the following request:\nGET /rest/apigateway/archive?groups=*"
										},
										{
											"key": "accessProfiles",
											"value": "<string>,<string>",
											"description": "This parameter identifies the teams to be exported. \nThe wildcard \"*\" selects all the teams. \nFor example, a single team can be exported using the following request:\nGET /rest/apigateway/archive?accessProfiles=d6b38ff8-59a8-47bf-9fba-0bdb24ee5b48\n\nWhereas, all the teams can be exported using the following request:\nGET /rest/apigateway/archive?accessProfiles=*"
										},
										{
											"key": "kerberosSetting",
											"value": "<string>",
											"description": "This parameter identifies the kerberos configuration to be exported.\nThe kerberos configuration can be exported using the following request:\nGET /rest/apigateway/archive?kerberosSetting=kerberosSetting"
										},
										{
											"key": "plans",
											"value": "<string>,<string>",
											"description": "This parameter identifies the plans to be exported. \nThe wildcard \"*\" selects all the plans. \nFor example, a single plan can be exported using the following request:\nGET /rest/apigateway/archive?plans=86d58023-be4b-4735-a08f-14e78131ce4a\n\nWhereas, all the plans can be exported using the following request:\nGET /rest/apigateway/archive?plans=*"
										},
										{
											"key": "packages",
											"value": "<string>,<string>",
											"description": "This parameter identifies the packages to be exported. \nThe wildcard \"*\" selects all the packages. \nFor example, a single package can be exported using the following request:\nGET /rest/apigateway/archive?packages=73c93393-1477-4a99-9e44-c9b3e679de0c\n\nWhereas, all the packages can be exported using the following request:\nGET /rest/apigateway/archive?packages=*"
										},
										{
											"key": "configurations",
											"value": "<string>,<string>",
											"description": "This parameter identifies the configurations to be exported. \nThe wildcard \"*\" selects all the configurations. \nFor example, a single configuration can be exported using the following request:\nGET /rest/apigateway/archive?configurations=loadBalancer,customContentTypes\n\nWhereas, all the configurations can be exported using the following request:\nGET /rest/apigateway/archive?configurations=*"
										}
									]
								},
								"description": "The GET method exports an archive. The result of the GET request is an archive in a ZIP format. \n This Method supports exporting API, Application, Alias,Policy, Policy Action, Keystore, Truststore, Kerberos, User, Group, Team, JMS Connection, JNDI Provider, JMS Trigger, Webservice Endpoint Alias, Approval Configuration, Outbound Proxy, URL alias, Plan and Package. \n This GET method can be used for exporting specific type of assets and its optional/soft dependant assets by specifying the asset name and corresponding include options in query parameter. \n For example, for an API, the Application assets (used by the API) are soft dependant of that API. To export the dependant applications of an API use the query param 'include-applications'.If 'include-applications' is not provided, the export archive will contains only the APIs. \n Refer 'Parameters' section for the usage of each include parameters.\n\n\n Use the POST /archive method to export all the assets in API Gateway."
							},
							"response": [
								{
									"name": "This response indicates that invalid credentials have been provided for the request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive?include-applications=<string>&include-users=<string>&include-groups=<string>&include-truststores=<string>&policies=<string>,<string>&apis=<string>,<string>&aliases=<string>,<string>&applications=<string>,<string>&policyActions=<string>,<string>&approvalConfigurations=<string>,<string>&outboundProxies=<string>,<string>&urlAliases=<string>,<string>&keyStores=<string>,<string>&trustStores=<string>,<string>&JNDIProviderAliases=<string>,<string>&JMSConnectionAliases=<string>,<string>&JMSTriggers=<string>,<string>&webserviceEndpointAliases=<string>,<string>&users=<string>,<string>&groups=<string>,<string>&accessProfiles=<string>,<string>&kerberosSetting=<string>&plans=<string>,<string>&packages=<string>,<string>&configurations=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive"
											],
											"query": [
												{
													"key": "include-applications",
													"value": "<string>"
												},
												{
													"key": "include-users",
													"value": "<string>"
												},
												{
													"key": "include-groups",
													"value": "<string>"
												},
												{
													"key": "include-truststores",
													"value": "<string>"
												},
												{
													"key": "policies",
													"value": "<string>,<string>"
												},
												{
													"key": "apis",
													"value": "<string>,<string>"
												},
												{
													"key": "aliases",
													"value": "<string>,<string>"
												},
												{
													"key": "applications",
													"value": "<string>,<string>"
												},
												{
													"key": "policyActions",
													"value": "<string>,<string>"
												},
												{
													"key": "approvalConfigurations",
													"value": "<string>,<string>"
												},
												{
													"key": "outboundProxies",
													"value": "<string>,<string>"
												},
												{
													"key": "urlAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "keyStores",
													"value": "<string>,<string>"
												},
												{
													"key": "trustStores",
													"value": "<string>,<string>"
												},
												{
													"key": "JNDIProviderAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "JMSConnectionAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "JMSTriggers",
													"value": "<string>,<string>"
												},
												{
													"key": "webserviceEndpointAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "users",
													"value": "<string>,<string>"
												},
												{
													"key": "groups",
													"value": "<string>,<string>"
												},
												{
													"key": "accessProfiles",
													"value": "<string>,<string>"
												},
												{
													"key": "kerberosSetting",
													"value": "<string>"
												},
												{
													"key": "plans",
													"value": "<string>,<string>"
												},
												{
													"key": "packages",
													"value": "<string>,<string>"
												},
												{
													"key": "configurations",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This response indicates that a request is incorrect. This can be due to identifiers that cannot be resolved.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive?include-applications=<string>&include-users=<string>&include-groups=<string>&include-truststores=<string>&policies=<string>,<string>&apis=<string>,<string>&aliases=<string>,<string>&applications=<string>,<string>&policyActions=<string>,<string>&approvalConfigurations=<string>,<string>&outboundProxies=<string>,<string>&urlAliases=<string>,<string>&keyStores=<string>,<string>&trustStores=<string>,<string>&JNDIProviderAliases=<string>,<string>&JMSConnectionAliases=<string>,<string>&JMSTriggers=<string>,<string>&webserviceEndpointAliases=<string>,<string>&users=<string>,<string>&groups=<string>,<string>&accessProfiles=<string>,<string>&kerberosSetting=<string>&plans=<string>,<string>&packages=<string>,<string>&configurations=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive"
											],
											"query": [
												{
													"key": "include-applications",
													"value": "<string>"
												},
												{
													"key": "include-users",
													"value": "<string>"
												},
												{
													"key": "include-groups",
													"value": "<string>"
												},
												{
													"key": "include-truststores",
													"value": "<string>"
												},
												{
													"key": "policies",
													"value": "<string>,<string>"
												},
												{
													"key": "apis",
													"value": "<string>,<string>"
												},
												{
													"key": "aliases",
													"value": "<string>,<string>"
												},
												{
													"key": "applications",
													"value": "<string>,<string>"
												},
												{
													"key": "policyActions",
													"value": "<string>,<string>"
												},
												{
													"key": "approvalConfigurations",
													"value": "<string>,<string>"
												},
												{
													"key": "outboundProxies",
													"value": "<string>,<string>"
												},
												{
													"key": "urlAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "keyStores",
													"value": "<string>,<string>"
												},
												{
													"key": "trustStores",
													"value": "<string>,<string>"
												},
												{
													"key": "JNDIProviderAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "JMSConnectionAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "JMSTriggers",
													"value": "<string>,<string>"
												},
												{
													"key": "webserviceEndpointAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "users",
													"value": "<string>,<string>"
												},
												{
													"key": "groups",
													"value": "<string>,<string>"
												},
												{
													"key": "accessProfiles",
													"value": "<string>,<string>"
												},
												{
													"key": "kerberosSetting",
													"value": "<string>"
												},
												{
													"key": "plans",
													"value": "<string>,<string>"
												},
												{
													"key": "packages",
													"value": "<string>,<string>"
												},
												{
													"key": "configurations",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This response indicates that the server has encountered an error while exporting API Gateway Asset",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive?include-applications=<string>&include-users=<string>&include-groups=<string>&include-truststores=<string>&policies=<string>,<string>&apis=<string>,<string>&aliases=<string>,<string>&applications=<string>,<string>&policyActions=<string>,<string>&approvalConfigurations=<string>,<string>&outboundProxies=<string>,<string>&urlAliases=<string>,<string>&keyStores=<string>,<string>&trustStores=<string>,<string>&JNDIProviderAliases=<string>,<string>&JMSConnectionAliases=<string>,<string>&JMSTriggers=<string>,<string>&webserviceEndpointAliases=<string>,<string>&users=<string>,<string>&groups=<string>,<string>&accessProfiles=<string>,<string>&kerberosSetting=<string>&plans=<string>,<string>&packages=<string>,<string>&configurations=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive"
											],
											"query": [
												{
													"key": "include-applications",
													"value": "<string>"
												},
												{
													"key": "include-users",
													"value": "<string>"
												},
												{
													"key": "include-groups",
													"value": "<string>"
												},
												{
													"key": "include-truststores",
													"value": "<string>"
												},
												{
													"key": "policies",
													"value": "<string>,<string>"
												},
												{
													"key": "apis",
													"value": "<string>,<string>"
												},
												{
													"key": "aliases",
													"value": "<string>,<string>"
												},
												{
													"key": "applications",
													"value": "<string>,<string>"
												},
												{
													"key": "policyActions",
													"value": "<string>,<string>"
												},
												{
													"key": "approvalConfigurations",
													"value": "<string>,<string>"
												},
												{
													"key": "outboundProxies",
													"value": "<string>,<string>"
												},
												{
													"key": "urlAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "keyStores",
													"value": "<string>,<string>"
												},
												{
													"key": "trustStores",
													"value": "<string>,<string>"
												},
												{
													"key": "JNDIProviderAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "JMSConnectionAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "JMSTriggers",
													"value": "<string>,<string>"
												},
												{
													"key": "webserviceEndpointAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "users",
													"value": "<string>,<string>"
												},
												{
													"key": "groups",
													"value": "<string>,<string>"
												},
												{
													"key": "accessProfiles",
													"value": "<string>,<string>"
												},
												{
													"key": "kerberosSetting",
													"value": "<string>"
												},
												{
													"key": "plans",
													"value": "<string>,<string>"
												},
												{
													"key": "packages",
													"value": "<string>,<string>"
												},
												{
													"key": "configurations",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This response indicates that the archive is created successfully. The response body is the zipped archive.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/archive?include-applications=<string>&include-users=<string>&include-groups=<string>&include-truststores=<string>&policies=<string>,<string>&apis=<string>,<string>&aliases=<string>,<string>&applications=<string>,<string>&policyActions=<string>,<string>&approvalConfigurations=<string>,<string>&outboundProxies=<string>,<string>&urlAliases=<string>,<string>&keyStores=<string>,<string>&trustStores=<string>,<string>&JNDIProviderAliases=<string>,<string>&JMSConnectionAliases=<string>,<string>&JMSTriggers=<string>,<string>&webserviceEndpointAliases=<string>,<string>&users=<string>,<string>&groups=<string>,<string>&accessProfiles=<string>,<string>&kerberosSetting=<string>&plans=<string>,<string>&packages=<string>,<string>&configurations=<string>,<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive"
											],
											"query": [
												{
													"key": "include-applications",
													"value": "<string>"
												},
												{
													"key": "include-users",
													"value": "<string>"
												},
												{
													"key": "include-groups",
													"value": "<string>"
												},
												{
													"key": "include-truststores",
													"value": "<string>"
												},
												{
													"key": "policies",
													"value": "<string>,<string>"
												},
												{
													"key": "apis",
													"value": "<string>,<string>"
												},
												{
													"key": "aliases",
													"value": "<string>,<string>"
												},
												{
													"key": "applications",
													"value": "<string>,<string>"
												},
												{
													"key": "policyActions",
													"value": "<string>,<string>"
												},
												{
													"key": "approvalConfigurations",
													"value": "<string>,<string>"
												},
												{
													"key": "outboundProxies",
													"value": "<string>,<string>"
												},
												{
													"key": "urlAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "keyStores",
													"value": "<string>,<string>"
												},
												{
													"key": "trustStores",
													"value": "<string>,<string>"
												},
												{
													"key": "JNDIProviderAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "JMSConnectionAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "JMSTriggers",
													"value": "<string>,<string>"
												},
												{
													"key": "webserviceEndpointAliases",
													"value": "<string>,<string>"
												},
												{
													"key": "users",
													"value": "<string>,<string>"
												},
												{
													"key": "groups",
													"value": "<string>,<string>"
												},
												{
													"key": "accessProfiles",
													"value": "<string>,<string>"
												},
												{
													"key": "kerberosSetting",
													"value": "<string>"
												},
												{
													"key": "plans",
													"value": "<string>,<string>"
												},
												{
													"key": "packages",
													"value": "<string>,<string>"
												},
												{
													"key": "configurations",
													"value": "<string>,<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Import API Gateway Archive",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-HTTP-Method-Override",
										"value": "GET",
										"description": "This parameter is used to specify that this REST call is an export operation. The value for this field is GET. If this is specified then you need to provide the filtering criteria in body to specify the asset. If empty payload specified then all assets will be exported. "
									},
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "zipFile",
											"description": "Zip file that contains the API Gateway asset needs to be imported",
											"type": "file",
											"src": "/C:/Users/gora/Desktop/Postman Collection/JWT%20Application.zip"
										}
									]
								},
								"url": {
									"raw": "{{baseURL}}/archive?overwrite=true&preserveAssetState=true",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"archive"
									],
									"query": [
										{
											"key": "overwrite",
											"value": "true",
											"description": "This parameter specifies the import option to define the artifact types that can be overwritten during import. The parameter enables you to specify overwriting of APIs, policies, policy actions, aliases, applications, configurations, approval configurations, outbound proxies, URL aliases, keyStores, trustStores, JNDI provider aliases, JMS connection aliases, JMS triggers, webservice endpoint aliases, users, groups, teams, kerberos settings, plans and packages.   \nThe wildcard \"*\" enables you to specify all types.\nFor example, the following request enables you to overwrite APIs during import:\nPOST /rest/apigateway/archive?overwrite=apis\nWhereas, overwriting all asset types during import can be specified as follows:\nPOST /rest/apigateway/archive?overwrite=*"
										},
										{
											"key": "preserveAssetState",
											"value": "true",
											"description": "This parameter is used to specify whether the asset state needs to be preserved after importing the assets in to API Gateway. By default this value will be true. If false specified the assets will be imported and wont preserve asset state after importing asset."
										}
									]
								},
								"description": "This method can be used for importing the API Gateway archive as well as exporting the assets as an archive. If the request is made with x-HTTP-Method-Override HTTP header with value as GET, then this method will export asset. It will require the body param using which you can specify the filtering criteria and include options for the API Gateway assets that need to be exported. \n\n If the HTTP header is not specified, then this method can be used to import the API Gateway archive. You can control the import settings with overwrite and preserveAssetState query parameters.\n\n Here are some sample payloads for different export scenarios. \n\n 1. Export all API Gateway assets. \n Payload: {} \n\n 2. Export all APIs \n Payload: { \"types\": [\"api\"] } \n\n 3. Export all APIs with registered Application \n Payload: {\r\n\"types\" : [\"api\"],\r\n\"includeOptions\" :{\r\n\"includeApplications\" :false\r\n}\r\n} \n\n 4. Export only APIs with name contains \"API Gateway\" \n Payload: {\r\n\"types\" : [\"api\"],\r\n\"scope\" : [\r\n{\"attributeName\" : \"apiName\",\r\n\"keyword\" : \".*API Gateway.*\"\r\n}],\r\n\"includeOptions\" :{\r\n\"includeApplications\" :false\r\n}\r\n} \n\n 5. Export API with specific ids only \n Payload: {\r\n\"types\" : [\"api\"],\r\n\"scope\" : [\r\n{\"attributeName\" : \"id\",\r\n\"keyword\" : \"1c36033a-ecb6-41ce-ad66-bada5cebe85e|8d505388-5524-4df5-bd3c-62c4bb5f41d0\"\r\n}],\r\n\"includeOptions\" :{\r\n\"includeApplications\" :true\r\n}\r\n} \n\n 6. Export API with name starts with API Gateway and description contains search \n Payload: {\r\n\"types\" : [\"api\"],\r\n\"scope\" : [\r\n{\"attributeName\" : \"apiName\",\r\n\"keyword\" : \"API Gateway.*\"\r\n},\r\n{\r\n\"attributeName\" : \"apiDescription\",\r\n\"keyword\" : \".*search.*\"\r\n}],\r\n\"condition\" : \"and\",\r\n\"includeOptions\" :{\r\n\"includeApplications\" :false\r\n}\r\n} \n\n 7. Export all Policy \n Payload: {\r\n\"types\" : [\"policy\"]\r\n} \n\n 8. Global Policy Alone \n Payload: {\r\n\"types\" : [\"policy\"],\r\n\"scope\":[\r\n{\r\n\"attributeName\" : \"policyScope\",\r\n\"keyword\" : \"GLOBAL\"\r\n}]\r\n} \n\n 9. Export Threat Protection Rule \n Payload: {\r\n\"types\" : [\"policy\"],\r\n\"scope\":[\r\n{\r\n\"attributeName\" : \"policyEnforcements.stageKey\",\r\n\"keyword\" : \"threatProtection\"\r\n}]\r\n} \n\n 10. Export All Policy Actions \n Payload: {\r\n\"types\" : [\"policy_action\"]\r\n} \n\n 11. Export All Threat Protection rules and policy \n Payload: {\r\n\"types\" : [\"policy_action\", \"policy\"],\r\n\"scope\":[\r\n{\r\n\"attributeName\" : \"policyEnforcements.stageKey\",\r\n\"keyword\" : \"threatProtection\"\r\n}, {\r\n\"attributeName\" : \"id\",\r\n\"keyword\" : \"globalipdos|ipdos\"\r\n}],\r\n\"condition\" : \"or\"\r\n} \n\n 12. Export all aliases \n Payload: {\r\n\"types\" : [\"alias\"]\r\n} \n\n 13. Export all applications \n Payload: {\r\n\"types\" : [\"application\"]\r\n} \n\n 14. Export all application with out including associated APIs \n Payload: {\r\n\"types\" : [\"application\"],\r\n\"includeOptions\" : {\r\n\"includeApis\": false\r\n}\r\n} \n\n 15. Export All Assertions \n Payload: {\r\n\"types\" : [\"assertion\"]\r\n} \n\n 16. Export all API Plans \n Payload: {\r\n\"types\" : [\"plan\"]\r\n} \n\n 17. Export all API Packages \n Payload: {\r\n\"types\" : [\"package\"]\r\n} \n\n 18. Export all packages along with subscription but with out the registered Applications for the associated APIs. \n Payload: {\r\n\"types\" : [\"package\"],\r\n\"includeOptions\":{\r\n\"includeApis\" : false,\r\n\"includeApplications\" : false,\r\n\"includeSubscriptions\" : true\r\n}\r\n} \n\n 19. Export all subscriptions \n Payload: {\r\n\"types\" : [\"subscription\"]\r\n} \n\n 20. Export all Administrator Settings \n Payload: {\r\n\"types\" : [\"administrator_setting\"]\r\n} \n\n 21. Export all approval configurations \n Payload: {\r\n\"types\" : [\"approval_configuration\"]\r\n} \n\n 22. Export all outbound proxy aliases \n Payload: {\r\n\"types\" : [\"outbound_proxy\"]\r\n} \n\n 23. Export all URL aliases \n Payload: {\r\n\"types\" : [\"url_alias\"]\r\n} \n\n 24. Export all keystore aliases \n Payload: {\r\n\"types\" : [\"keystore\"]\r\n} \n\n 25. Export all truststore aliases \n Payload: {\r\n\"types\" : [\"truststore\"]\r\n} \n\n 26. Export all kerberos settings \n Payload: {\r\n\"types\" : [\"kerberos_setting\"]\r\n} \n\n 27. Export all JNDI provider aliases \n Payload: {\r\n\"types\" : [\"jndi_provider_alias\"]\r\n} \n\n 28. Export all JMS connection aliases \n Payload: {\r\n\"types\" : [\"jms_connection_alias\"]\r\n} \n\n 29. Export all JMS triggers \n Payload: {\r\n\"types\" : [\"jms_trigger\"]\r\n} \n\n 30. Export all web service endpoint aliases \n Payload: {\r\n\"types\" : [\"web_service_endpoint_alias\"]\r\n} \n\n 31. Export all users \n Payload: {\r\n\"types\" : [\"users\"]\r\n} \n\n 32. Export all groups \n Payload: {\r\n\"types\" : [\"groups\"]\r\n} \n\n 33. Export all teams \n Payload: {\r\n\"types\" : [\"accessprofiles\"]\r\n}"
							},
							"response": [
								{
									"name": "This response indicates that the server has encountered an error while exporting or importing  API Gateway Asset",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-HTTP-Method-Override",
												"value": "<string>",
												"description": "This parameter is used to specify that this REST call is an export operation. The value for this field is GET. If this is specified then you need to provide the filtering criteria in body to specify the asset. If empty payload specified then all assets will be exported. "
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "zipFile",
													"value": "<binary>",
													"description": {
														"content": "Zip file that contains the API Gateway asset needs to be imported",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/archive?overwrite=<string>&preserveAssetState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive"
											],
											"query": [
												{
													"key": "overwrite",
													"value": "<string>"
												},
												{
													"key": "preserveAssetState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This response indicates that the archive import was successful. The response body holds a detailed import log in application/json format.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-HTTP-Method-Override",
												"value": "<string>",
												"description": "This parameter is used to specify that this REST call is an export operation. The value for this field is GET. If this is specified then you need to provide the filtering criteria in body to specify the asset. If empty payload specified then all assets will be exported. "
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "zipFile",
													"value": "<binary>",
													"description": {
														"content": "Zip file that contains the API Gateway asset needs to be imported",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/archive?overwrite=<string>&preserveAssetState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive"
											],
											"query": [
												{
													"key": "overwrite",
													"value": "<string>"
												},
												{
													"key": "preserveAssetState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\n  \\\"ArchiveResult\\\": [\\n    {\\n      \\\"PolicyAction\\\": {\\n        \\\"name\\\": \\\"Straight Through Routing\\\",\\n        \\\"id\\\": \\\"bc7c75ba-ad5e-4dd7-adb7-a62bcd60593d\\\",\\n        \\\"status\\\": \\\"Failed\\\",\\n        \\\"explanation\\\": \\\"Asset already exists.\\\",\\n        \\\"overwritten\\\": false\\n      }\\n    },\\n    {\\n      \\\"PolicyAction\\\": {\\n        \\\"name\\\": \\\"Require HTTP / HTTPS\\\",\\n        \\\"id\\\": \\\"c3852da1-4e6e-440b-8fe9-7e5c1523d7f1\\\",\\n        \\\"status\\\": \\\"Failed\\\",\\n        \\\"explanation\\\": \\\"Asset already exists.\\\",\\n        \\\"overwritten\\\": false\\n      }\\n    },\\n    {\\n      \\\"API\\\": {\\n        \\\"name\\\": \\\"BayernRest\\\",\\n        \\\"id\\\": \\\"70062a02-e7f9-4ead-a66e-313752a9b111\\\",\\n        \\\"status\\\": \\\"Failed\\\",\\n        \\\"explanation\\\": \\\"Asset already exists.\\\",\\n        \\\"overwritten\\\": false\\n      }\\n    },\\n    {\\n      \\\"Policy\\\": {\\n        \\\"name\\\": \\\"Default Policy for API BayernRest\\\",\\n        \\\"id\\\": \\\"9a0d17c1-8bf1-4282-a53e-2b2ca634ba39\\\",\\n        \\\"status\\\": \\\"Failed\\\",\\n        \\\"explanation\\\": \\\"Asset already exists.\\\",\\n        \\\"overwritten\\\": false\\n      }\\n    }\\n  ]\\n}\""
								},
								{
									"name": "This response indicates that the archive is created successfully. The response body is the zipped archive.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-HTTP-Method-Override",
												"value": "<string>",
												"description": "This parameter is used to specify that this REST call is an export operation. The value for this field is GET. If this is specified then you need to provide the filtering criteria in body to specify the asset. If empty payload specified then all assets will be exported. "
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "zipFile",
													"value": "<binary>",
													"description": {
														"content": "Zip file that contains the API Gateway asset needs to be imported",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/archive?overwrite=<string>&preserveAssetState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive"
											],
											"query": [
												{
													"key": "overwrite",
													"value": "<string>"
												},
												{
													"key": "preserveAssetState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This response indicates that the request payload is invalid or that no objects with the specified search parameters were found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-HTTP-Method-Override",
												"value": "<string>",
												"description": "This parameter is used to specify that this REST call is an export operation. The value for this field is GET. If this is specified then you need to provide the filtering criteria in body to specify the asset. If empty payload specified then all assets will be exported. "
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "zipFile",
													"value": "<binary>",
													"description": {
														"content": "Zip file that contains the API Gateway asset needs to be imported",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/archive?overwrite=<string>&preserveAssetState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive"
											],
											"query": [
												{
													"key": "overwrite",
													"value": "<string>"
												},
												{
													"key": "preserveAssetState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This response  indicates that invalid credentials have been provided for the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-HTTP-Method-Override",
												"value": "<string>",
												"description": "This parameter is used to specify that this REST call is an export operation. The value for this field is GET. If this is specified then you need to provide the filtering criteria in body to specify the asset. If empty payload specified then all assets will be exported. "
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "zipFile",
													"value": "<binary>",
													"description": {
														"content": "Zip file that contains the API Gateway asset needs to be imported",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/archive?overwrite=<string>&preserveAssetState=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"archive"
											],
											"query": [
												{
													"key": "overwrite",
													"value": "<string>"
												},
												{
													"key": "preserveAssetState",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"description": "Explanation:\n\nExport\n--------\nUse Send and Download option to download the archive file with the needed assets.\n\nImport\n--------\nAttach the exported archive file to import with the necessary path parameters.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Document Management Service",
					"item": [
						{
							"name": "Get Document by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/documents/:documentId",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"documents",
										":documentId"
									],
									"variable": [
										{
											"key": "documentId",
											"value": "3331aa4c-5308-4420-9b5e-964203e5902b"
										}
									]
								},
								"description": "Retrieves the requested document from API Gateway"
							},
							"response": [
								{
									"name": "This status code indicates invalid request or bad input.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested resource is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the given document has been retrieved successfully from API Gateway.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"documents\\\": [{\\r\\n\\t\\t\\\"id\\\": \\\"c98c7290-bc68-4da3-a39e-545c714e75bc\\\",\\r\\n\\t\\t\\\"fileName\\\": \\\"SamplePowerpoint.pptx\\\",\\r\\n\\t\\t\\\"displayName\\\": \\\"How to upload documents to the store?\\\",\\r\\n\\t\\t\\\"fileContent\\\": \\\"data:application/vnd.openxmlformats-officedocument.presentationml.presentation;base64,UEsDBBQABgAIAAAAIQD93q/s6gEAAFIPAAATAAgCW0NvbnRlbnRfVHlwZXNdLnhtbCCiBAIooAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMl990JrRLqv6+ONgR6nB3mzU7T/S6zeFFiF7yGWlYgyJtgnR813PvL8QsEZ/QW5+BJw0oMXXv4aH5oxlxCPLnIolA8a5hyjt9KsZloQZYhki/OENKCucg0qojmgSOpU1V9qrRlQLtjiqvVkK62BtGvsTT/zw7D4Aydg3ku5PObCsWzs3TDNTxzwWIaKWuQcnvnrahleR9U26jd3PYPAAD//wMAUEsDBBQABgAIAAAAIQBL9T3svwAAADcBAAAgAAAAcHB0L3NsaWRlcy9fcmVscy9zbGlkZTIueG1sLnJlbHOEj8EKwjAQRO+C/xD2blI9iEhTLyIInkQ/YEm2bbBNQjaK/XtzrCB4nB3mzU59eI+DeFFiF7yGtaxAkDfBOt9puN9Oqx0IzugtDsGThokYDs1yUV9pwFxC3LvIolA8a+hzjnul2PQ0IssQyRenDWnEXGTqVETzwI7Upqq2Ks0Z0HwxxdlqSGe7BnGbYmn+zw5t6wwdg3mO5POPCsWDs3TBKTxzwWLqKGuQcn7nudjI8j6oplZfc5sPAAAA//8DAFBLAwQUAAYACAAAACEAS/U97L8AAAA3AQAAIAAAAHBwdC9zbGlkZXMvX3JlbHMvc2xpZGUzLnhtbC5yZWxzhI/BCsIwEETvgv8Q9m5SPYhIUy8iCJ5EP2BJtm2wTUI2iv17c6wgeJwd5s1OfXiPg3hRYhe8hrWsQJA3wTrfabjfTqsdCM7oLQ7Bk4aJGA7NclFfacBcQty7yKJQPGvoc457pdj0NCLLEMkXpw1pxFxk6lRE88CO1KaqtirNGdB8McXZakhnuwZxm2Jp/s8ObesMHYN5juTzjwrFg7N0wSk8c8Fi6ihrkHJ+57nYyPI+qKZWX3ObDwAAAP//AwBQSwMEFAAGAAgAAAAhAEv1Pey/AAAANwEAACAAAABwcHQvc2xpZGVzL19yZWxzL3NsaWRlNS54bWwucmVsc4SPwQrCMBBE74L/EPZuUj2ISFMvIgieRDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyVz06EMBDG7ya+A+ldCuw/NVv2Ykz2YGJ0fYAKAzSWtmnrKm9vw67Ibjb10nAhmaH95pePmWG9+W55tAdtmBQEpXGCIhCFLJmoCXrbPd7coshYKkrKpQKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooo\\\"\\r\\n\\t}]\\r\\n}\""
								},
								{
									"name": "This status code indicates an error occurred while retrieving the given document from API Gateway.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get All Documents",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/documents",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"documents"
									]
								},
								"description": "Retrieves the requested document from API Gateway"
							},
							"response": [
								{
									"name": "This status code indicates invalid request or bad input.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the given document has been retrieved successfully from API Gateway.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"documents\\\": [{\\r\\n\\t\\t\\\"id\\\": \\\"c98c7290-bc68-4da3-a39e-545c714e75bc\\\",\\r\\n\\t\\t\\\"fileName\\\": \\\"SamplePowerpoint.pptx\\\",\\r\\n\\t\\t\\\"displayName\\\": \\\"How to upload documents to the store?\\\",\\r\\n\\t\\t\\\"fileContent\\\": \\\"data:application/vnd.openxmlformats-officedocument.presentationml.presentation;base64,UEsDBBQABgAIAAAAIQD93q/s6gEAAFIPAAATAAgCW0NvbnRlbnRfVHlwZXNdLnhtbCCiBAIool990JrRLqv6+ONgR6nB3mzU7T/S6zeFFiF7yGWlYgyJtgnR813PvL8QsEZ/QW5+BJw0oMXXv4aH5oxlxCPLnIolA8a5hyjt9KsZloQZYhki/OENKCucg0qojmgSOpU1V9qrRlQLtjiqvVkK62BtGvsTT/zw7D4Aydg3ku5PObCsWzs3TDNTxzwWIaKWuQcnvnrahleR9U26jd3PYPAAD//wMAUEsDBBQABgAIAAAAIQBL9T3svwAAADcBAAAgAAAAcHB0L3NsaWRlcy9fcmVscy9zbGlkZTIueG1sLnJlbHOEj8EKwjAQRO+C/xD2blI9iEhTLyIInkQ/YEm2bbBNQjaK/XtzrCB4nB3mzU59eI+DeFFiF7yGtaxAkDfBOt9puN9Oqx0IzugtDsGThokYDs1yUV9pwFxC3LvIolA8a+hzjnul2PQ0IssQyRenDWnEXGTqVETzwI7Upqq2Ks0Z0HwxxdlqSGe7BnGbYmn+zw5t6wwdg3mO5POPCsWDs3TBKTxzwWLqKGuQcn7nudjI8j6oplZfc5sPAAAA//8DAFBLAwQUAAYACAAAACEAS/U97L8AAAA3AQAAIAAAAHBwdC9zbGlkZXMvX3JlbHMvc2xpZGUzLnhtbC5yZWxzhI/BCsIwEETvgv8Q9m5SPYhIUy8iCJ5EP2BJtm2wTUI2iv17c6wgeJwd5s1OfXiPg3hRYhe8hrWsQJA3wTrfabjfTqsdCM7oLQ7Bk4aJGA7NclFfacBcQty7yKJQPGvoc457pdj0NCLLEMkXpw1pxFxk6lRE88CO1KaqtirNGdB8McXZakhnuwZxm2Jp/s8ObesMHYN5juTzjwrFg7N0wSk8c8Fi6ihrkHJ+57nYyPI+qKZWX3ObDwAAAP//AwBQSwMEFAAGAAgAAAAhAEv1Pey/AAAANwEAACAAAABwcHQvc2xpZGVzL19yZWxzL3NsaWRlNS54bWwucmVsc4SPwQrCMBBE74L/EPZuUj2ISFMvIgieRDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyVz06EMBDG7ya+A+ldCuw/NVv2Ykz2YGJ0fYAKAzSWtmnrKm9vw67Ibjb10nAhmaH95pePmWG9+W55tAdtmBQEpXGCIhCFLJmoCXrbPd7coshYKkrKpQKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooo\\\"\\r\\n\\t}]\\r\\n}\""
								},
								{
									"name": "This status code indicates that the requested resource is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates an error occurred while retrieving the given document from API Gateway.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Document",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"displayName\": \"APIDoc\",\n    \"fileName\": \"APIDoc.json\",\n    \"fileContent\": \"Content flows here...\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/documents/:documentId",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"documents",
										":documentId"
									],
									"variable": [
										{
											"key": "documentId",
											"value": "3331aa4c-5308-4420-9b5e-964203e5902b",
											"description": "(Required) The unique identifier of the document to update"
										}
									]
								}
							},
							"response": [
								{
									"name": "This status code indicates that the given document has been updated successfully in API Gateway.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"id\\\": \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\"\\r\\n}\""
								},
								{
									"name": "This status code indicates an error occurred while updating the given document in API Gateway.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested resource is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates invalid request or bad input.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Document by ID",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/documents/:documentId",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"documents",
										":documentId"
									],
									"variable": [
										{
											"key": "documentId",
											"value": "3331aa4c-5308-4420-9b5e-964203e5902b",
											"description": "(Required) Id of the document for deletion"
										}
									]
								},
								"description": "Deletes the stored document from API Gateway"
							},
							"response": [
								{
									"name": "This status code indicates invalid request or bad input.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the given document has been deleted successfully from API Gateway.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates an error occurred while deleting the given document from API Gateway.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested resource is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Patch Document",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"displayName\": \"APIDoc\",\n    \"fileName\": \"APIDoc.json\",\n    \"fileContent\": \"Content flows here...\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/documents/3331aa4c-5308-4420-9b5e-964203e5902b",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"documents",
										"3331aa4c-5308-4420-9b5e-964203e5902b"
									]
								}
							},
							"response": [
								{
									"name": "This status code indicates invalid request or bad input.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the given document has been patched successfully in API Gateway.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"id\\\": \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\"\\r\\n}\""
								},
								{
									"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates an error occurred while patching the given document in API Gateway.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested resource is not found.",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents/:documentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents",
												":documentId"
											],
											"variable": [
												{
													"key": "documentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Document",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"displayName\": \"APIDoc\",\n    \"fileName\": \"APIDoc.json\",\n    \"fileContent\": \"Content flows here...\"\n}"
								},
								"url": {
									"raw": "{{baseURL}}/documents",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"documents"
									]
								}
							},
							"response": [
								{
									"name": "This status code indicates that the given document has been stored successfully in API Gateway.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"id\\\": \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\"\\r\\n}\""
								},
								{
									"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested HTTP method is not supported for the resource.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents"
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates invalid request or bad input.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates an error occurred while storing the given document in API Gateway.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the requested resource is not found.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"displayName\": \"<string>\",\n    \"fileName\": \"<string>\",\n    \"fileContent\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/documents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"documents"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Package and Plan Management",
					"item": [
						{
							"name": "Package",
							"item": [
								{
									"name": "Create Package",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"apiIds\": [\n\t\t\"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\"\n\t],\n\t\"planIds\": [\n\t\t\"e7c33b25-610c-47cd-9ac7-e3700ba3d463\"\n\t],\n\t\"publishedPortals\": [],\n\t\"name\": \"Golden Package\",\n\t\"description\": \"description flows here\",\n\t\"version\": \"1.0\",\n\t\"icon\": null,\n\t\"teams\": [\n\t\t{\n\t\t\t\"id\": \"Administrators\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/packages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"packages"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Package",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"5d9f9502-30e8-4f0a-9971-e2e40a1347e6\",\n    \"apiIds\": [\n        \"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\",\n        \"d3371bdb-457a-4248-8034-7887ac8b42de\"\n    ],\n    \"planIds\": [\n        \"e7c33b25-610c-47cd-9ac7-e3700ba3d463\"\n    ],\n    \"publishedPortals\": [],\n    \"name\": \"Golden Package\",\n    \"description\": \"description flows here\",\n    \"version\": \"1.0\",\n    \"icon\": null,\n    \"teams\": [\n        {\n            \"id\": \"Administrators\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/packages/:packageID",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"packages",
												":packageID"
											],
											"variable": [
												{
													"key": "packageID",
													"value": "5d9f9502-30e8-4f0a-9971-e2e40a1347e6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate Package",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseURL}}/packages/:packageID/activate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"packages",
												":packageID",
												"activate"
											],
											"variable": [
												{
													"key": "packageID",
													"value": "5d9f9502-30e8-4f0a-9971-e2e40a1347e6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate Package",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseURL}}/packages/:packageID/deactivate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"packages",
												":packageID",
												"deactivate"
											],
											"variable": [
												{
													"key": "packageID",
													"value": "5d9f9502-30e8-4f0a-9971-e2e40a1347e6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Publish Package",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"communities\": [\n        \"3bdf8005-5685-3ef5-b132-de4681963fb6\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/packages/:packageID/publish",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"packages",
												":packageID",
												"publish"
											],
											"variable": [
												{
													"key": "packageID",
													"value": "5d9f9502-30e8-4f0a-9971-e2e40a1347e6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Unpublish Package",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseURL}}/packages/:packageID/unpublish",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"packages",
												":packageID",
												"unpublish"
											],
											"variable": [
												{
													"key": "packageID",
													"value": "5d9f9502-30e8-4f0a-9971-e2e40a1347e6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All Packages",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/packages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"packages"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Package details by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseURL}}/packages/:packageID",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"packages",
												":packageID"
											],
											"variable": [
												{
													"key": "packageID",
													"value": "5d9f9502-30e8-4f0a-9971-e2e40a1347e6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Package",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseURL}}/packages/:packageID",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"packages",
												":packageID"
											],
											"variable": [
												{
													"key": "packageID",
													"value": "5d9f9502-30e8-4f0a-9971-e2e40a1347e6"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Plan",
							"item": [
								{
									"name": "Create Plan",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"cost\": {\n\t\t\"currency\": null,\n\t\t\"value\": \"10000\",\n\t\t\"duration\": null\n\t},\n\t\"quota\": {\n\t\t\"policyActions\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"throttle\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"throttleRule\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"throttleRuleName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"requestCount\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"monitorRuleOperator\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"GT\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"value\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"1000\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"destination\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"destinationType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"GATEWAY\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"alertInterval\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"1\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"alertIntervalUnit\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"minutes\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"alertFrequency\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"always\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"alertMessage\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"Quota reached it's limit. Please try after some time.\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"consumerIds\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"AnyConsumers\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"destination\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"destinationType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"SMTP\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"emailTo\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"support@softwareag.com\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"destination\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"destinationType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"DES\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"monitorSLA\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"monitorRules\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"monitorRuleName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"requestCount\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"monitorRuleOperator\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"GT\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"value\",\n\t\t\t\t\t\t\t\t\"extendedProperties\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"key\": \"quota\",\n\t\t\t\t\t\t\t\t\t\t\"value\": \"1000\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"key\": \"notifyPercent\",\n\t\t\t\t\t\t\t\t\t\t\"value\": \"90\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t900\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"destination\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"destinationType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"GATEWAY\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"alertInterval\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"1\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"alertIntervalUnit\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"minutes\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"alertFrequency\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"always\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"alertMessage\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"request count reached 90%.\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"consumerIds\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"AnyConsumers\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"destination\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"destinationType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"SMTP\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"emailTo\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"support@softwareag.com\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"destination\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"destinationType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"DES\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t\"packageIds\": [],\n\t\"name\": \"Golden Plan\",\n\t\"description\": \"description flows here\",\n\t\"version\": \"1.0\",\n\t\"icon\": null,\n\t\"terms\": \"Terms and Conditions\",\n\t\"license\": \"***License Information***\",\n\t\"policyActions\": [\n\t\t{\n\t\t\t\"templateKey\": \"throttle\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"throttleRule\",\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"templateKey\": \"throttleRuleName\",\n\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\"requestCount\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"templateKey\": \"monitorRuleOperator\",\n\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\"GT\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"templateKey\": \"value\",\n\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\"1000\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"destination\",\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"templateKey\": \"destinationType\",\n\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\"GATEWAY\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"alertInterval\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"1\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"alertIntervalUnit\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"minutes\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"alertFrequency\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"always\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"alertMessage\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"The Request reaches the plan limit.\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"consumerIds\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"AnyConsumers\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"teams\": [\n\t\t{\n\t\t\t\"id\": \"Administrators\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/plans",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"plans"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Plan",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"e7c33b25-610c-47cd-9ac7-e3700ba3d463\",\n    \"cost\": {\n        \"currency\": null,\n        \"value\": \"10000\",\n        \"duration\": null\n    },\n    \"quota\": {\n        \"policyActions\": [\n            {\n                \"templateKey\": \"throttle\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"throttleRule\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"throttleRuleName\",\n                                \"values\": [\n                                    \"requestCount\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"monitorRuleOperator\",\n                                \"values\": [\n                                    \"GT\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"value\",\n                                \"values\": [\n                                    \"1000\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"destination\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"destinationType\",\n                                \"values\": [\n                                    \"GATEWAY\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alertInterval\",\n                        \"values\": [\n                            \"1\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alertIntervalUnit\",\n                        \"values\": [\n                            \"minutes\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alertFrequency\",\n                        \"values\": [\n                            \"always\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alertMessage\",\n                        \"values\": [\n                            \"Quota reached it's limit. Please try after some time.\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"consumerIds\",\n                        \"values\": [\n                            \"AnyConsumers\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"destination\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"destinationType\",\n                                \"values\": [\n                                    \"SMTP\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"emailTo\",\n                                \"values\": [\n                                    \"support@softwareag.com\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"destination\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"destinationType\",\n                                \"values\": [\n                                    \"DES\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"monitorSLA\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"monitorRules\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"monitorRuleName\",\n                                \"values\": [\n                                    \"requestCount\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"monitorRuleOperator\",\n                                \"values\": [\n                                    \"GT\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"value\",\n                                \"extendedProperties\": [\n                                    {\n                                        \"key\": \"quota\",\n                                        \"value\": \"1000\"\n                                    },\n                                    {\n                                        \"key\": \"notifyPercent\",\n                                        \"value\": \"90\"\n                                    }\n                                ],\n                                \"values\": [\n                                    900\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"destination\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"destinationType\",\n                                \"values\": [\n                                    \"GATEWAY\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alertInterval\",\n                        \"values\": [\n                            \"1\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alertIntervalUnit\",\n                        \"values\": [\n                            \"minutes\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alertFrequency\",\n                        \"values\": [\n                            \"always\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alertMessage\",\n                        \"values\": [\n                            \"request count reached 90%.\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"consumerIds\",\n                        \"values\": [\n                            \"AnyConsumers\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"destination\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"destinationType\",\n                                \"values\": [\n                                    \"SMTP\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"emailTo\",\n                                \"values\": [\n                                    \"support@softwareag.com\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"destination\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"destinationType\",\n                                \"values\": [\n                                    \"DES\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n    \"packageIds\": [],\n    \"name\": \"Golden Plan\",\n    \"description\": \"description flows here\",\n    \"version\": \"1.0\",\n    \"icon\": null,\n    \"terms\": \"Terms and Conditions\",\n    \"license\": \"***License Information***\",\n    \"policyActions\": [\n        {\n            \"templateKey\": \"throttle\",\n            \"parameters\": [\n                {\n                    \"templateKey\": \"throttleRule\",\n                    \"parameters\": [\n                        {\n                            \"templateKey\": \"throttleRuleName\",\n                            \"values\": [\n                                \"requestCount\"\n                            ]\n                        },\n                        {\n                            \"templateKey\": \"monitorRuleOperator\",\n                            \"values\": [\n                                \"GT\"\n                            ]\n                        },\n                        {\n                            \"templateKey\": \"value\",\n                            \"values\": [\n                                \"1000\"\n                            ]\n                        }\n                    ]\n                },\n                {\n                    \"templateKey\": \"destination\",\n                    \"parameters\": [\n                        {\n                            \"templateKey\": \"destinationType\",\n                            \"values\": [\n                                \"GATEWAY\"\n                            ]\n                        }\n                    ]\n                },\n                {\n                    \"templateKey\": \"alertInterval\",\n                    \"values\": [\n                        \"1\"\n                    ]\n                },\n                {\n                    \"templateKey\": \"alertIntervalUnit\",\n                    \"values\": [\n                        \"minutes\"\n                    ]\n                },\n                {\n                    \"templateKey\": \"alertFrequency\",\n                    \"values\": [\n                        \"always\"\n                    ]\n                },\n                {\n                    \"templateKey\": \"alertMessage\",\n                    \"values\": [\n                        \"The Request reaches the plan limit.\"\n                    ]\n                },\n                {\n                    \"templateKey\": \"consumerIds\",\n                    \"values\": [\n                        \"AnyConsumers\"\n                    ]\n                }\n            ]\n        }\n    ],\n    \"teams\": [\n        {\n            \"id\": \"Administrators\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/plans/:planID",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"plans",
												":planID"
											],
											"variable": [
												{
													"key": "planID",
													"value": "e7c33b25-610c-47cd-9ac7-e3700ba3d463"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All Plans",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/plans",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"plans"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Plan details by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseURL}}/plans/:planID",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"plans",
												":planID"
											],
											"variable": [
												{
													"key": "planID",
													"value": "e7c33b25-610c-47cd-9ac7-e3700ba3d463"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Plan",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/plans/:planID",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"plans",
												":planID"
											],
											"variable": [
												{
													"key": "planID",
													"value": "e7c33b25-610c-47cd-9ac7-e3700ba3d463"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Policy Management",
					"item": [
						{
							"name": "Policy Actions",
							"item": [
								{
									"name": "Transport",
									"item": [
										{
											"name": "Create Enable HTTP/HTTPS",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Enable HTTP / HTTPS\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"entryProtocolPolicy\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"protocol\",\r\n                \"values\": [\r\n                    \"http\",\r\n                    \"https\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"soapVersion\",\r\n                \"values\": [\r\n                    \"soap\"\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": false\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Soap Version:\nCurrently we are supporting 2 types of soap version. They are\n\n1. soap\n2. soap12"
											},
											"response": []
										},
										{
											"name": "Create Set Media Type",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"setMediaType\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"defaultContentType\",\n                \"values\": [\n                    \"application/json\"\n                ]\n            },\n            {\n                \"templateKey\": \"defaultAccept\",\n                \"values\": [\n                    \"application/json\"\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Soap Version:\nCurrently we are supporting 2 types of soap version. They are\n\n1. soap\n2. soap12"
											},
											"response": []
										},
										{
											"name": "Create Enable JMS/AMQP",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"enableJmsORAmqp\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"connectionAlias\",\n                \"values\": [\n                    \"AMQP_CON\"\n                ]\n            },\n            {\n                \"templateKey\": \"jmsOrAmqpSourceDetails\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"sourceName\",\n                        \"values\": [\n                            \"AMQPInputQueue\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"sourceType\",\n                        \"values\": [\n                            \"QUEUE\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"jmsSelector\",\n                        \"values\": []\n                    },\n                    {\n                        \"templateKey\": \"httpResource\",\n                        \"values\": [\n                            \"/softwareAG\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"httpMethods\",\n                        \"values\": [\n                            \"GET\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"content-type\",\n                        \"values\": [\n                            \"application/json\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Soap Version:\nCurrently we are supporting 2 types of soap version. They are\n\n1. soap\n2. soap12"
											},
											"response": []
										}
									]
								},
								{
									"name": "Identify & Access",
									"item": [
										{
											"name": "Create Authorize User",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Authorize User\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"authorizeUser\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"users\",\n                \"values\": [\n                    \"Administrator\"\n                ]\n            },\n            {\n                \"templateKey\": \"groups\",\n                \"values\": [\n                    \"API-Gateway-Administrators\"\n                ]\n            },\n            {\n                \"templateKey\": \"accessProfiles\",\n                \"values\": [\n                    \"Administrators\"\n                ]\n            }\n        ],\n        \"active\": false\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Identify & Authorize Application",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Identify & Authorize Application\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"evaluatePolicy\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"logicalConnector\",\r\n                \"values\": [\r\n                    \"OR\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"allowAnonymous\",\r\n                \"values\": [\r\n                    \"true\"                     \r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"IdentificationRule\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"applicationLookup\",\r\n                        \"values\": [\r\n                            \"strict\"          \r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"identificationType\",\r\n                        \"values\": [\r\n                            \"hostNameAddress\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": false\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Allow anonymous applicable values are\n1. true\n2. false\n\n\nApplication Lookup applicable values are\n1. strict - Registered Application\n2. open - Global Application\n3. relax - Global Application and default Application\n\nDifferent Type of Template Keys are\nAPI Key:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"apiKey\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nHTTP Basic Authentication:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"httpBasicAuth\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nOAuth2 Token:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"oAuth2Token\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nOpenID Connect:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"openIdClaims\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nHTTPS Certificate:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"httpsCertificate\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nWS Security Username Token:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"wssecUsernameToken\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nWS Security X.509 Token:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"wssecX509Token\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nPayload Element:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"payloadElement\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"payloadIdentifier\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"xpath\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expression\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"//s\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"namespace\",\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"templateKey\": \"prefix\",\n\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\"axis2\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"templateKey\": \"uri\",\n\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\"https://axis2.org\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"payloadIdentifier\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"jsonPath\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expression\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"response.paylaod\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"payloadIdentifier\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"regex\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expression\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"softwareag\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n            \nKerberos:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"kerberosToken\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"kerberosTokenAssertion\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"servicePrincipalName\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"Administrator\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"servicePrincipalPassword\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"manage\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n            \nJWT:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"jwtClaims\"\n\t\t\t]\n\t\t}\n\t]\n}\n            \nIP Address:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"ipAddressRange\"\n\t\t\t]\n\t\t}\n\t]\n}"
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Request Processing",
									"item": [
										{
											"name": "Create Invoke webMethods IS Service",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"requestInvokeESB\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"invokeISService\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"serviceName\",\n                        \"values\": [\n                            \"Service.processRequest:processPayload\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"runAsUser\",\n                        \"values\": [\n                            \"Administrator\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"complyToISSpec\",\n                        \"values\": [\n                            true\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Instead of configuration the webMethods IS service details every time. Create webMethods IS service alias under Administration -> Alias and use it everywhere.\n\n{\n\t\"policyAction\": {\n\t\t\"id\": \"1837bc32-5a2b-44d5-a6c9-2d832d15bdf2\",\n\t\t\"templateKey\": \"requestInvokeESB\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"esbAlias\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"APIGatewayESBAlias\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}"
											},
											"response": []
										},
										{
											"name": "Create Request Transformation",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"requestTransformation\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transformationConditions\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"logicalConnector\",\n                        \"values\": [\n                            \"OR\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"transformationCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"transformationVariable\",\n                                \"values\": [\n                                    \"${request.httpMethod}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"transformationConditionOperator\",\n                                \"values\": [\n                                    \"equals\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"transformationConditionValue\",\n                                \"values\": [\n                                    \"POST\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"requestTransformationConfiguration\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"commonTransformation\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"remove\",\n                                \"values\": [\n                                    \"${request.headers.x-Gateway-APIKey}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"addOrModify\",\n                                \"parameters\": [\n                                    {\n                                        \"templateKey\": \"transformationVariable\",\n                                        \"values\": [\n                                            \"${request.headers.APIKey}\"\n                                        ]\n                                    },\n                                    {\n                                        \"templateKey\": \"transformationValue\",\n                                        \"values\": [\n                                            \"e10a54ce-62f5-42ba-b5cb-a3bace7c39ab\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"methodTransformation\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"method\",\n                                \"values\": [\n                                    \"CUSTOM\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Validate API Specification",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Validate API Specification\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n\t\t\"templateKey\": \"validateAPISpec\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"schemaValidationFlag\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateQueryParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validatePathParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateCookieParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateContentTypes\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"headersValidationFlag\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateHTTPHeaders\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"logicalConnector\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"AND\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"httpHeaderNonReqValue\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerKey\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Content-Type\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerValueNonRequired\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"active\": false\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Schema validation for different types of schema are listed below\n\n{\n\t\"templateKey\": \"validateSchema\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/generate-synthetic-annotations\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/id-idref-checkingID_IDREF_CHECKING\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/identity-constraint-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/ignore-xsi-type-until-elemdecl\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/namespace-growth\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/normalized-value\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/validation/schema/root-element-declaration\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/validation/schema/root-type-definition\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/augment-psvi\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/internal/validation/schema/dv-factory\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/element-default\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/schema/external-schemaLocation\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/internal/validator/schema\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/internal/tolerate-duplicates\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/unparsed-entity-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validate-annotations\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema-full-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
											},
											"response": []
										},
										{
											"name": "Create Data Masking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Data Masking\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n\t\t\"templateKey\": \"requestDataMasking\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"xpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"//request/payload/accountNumber\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"jpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"${request.payload.accountNumber}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"sameForTransactionalLogging\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"applyForPayload\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"active\": false\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Request Data Masking:\n\nDifferent types of masking types are\n1. XPath\n2. JsonPath\n3. Regex\n\n\nMasking Type applicable values are\n1. mask\n2. filter\n\n"
											},
											"response": []
										}
									]
								},
								{
									"name": "Routing",
									"item": [
										{
											"name": "Outbound Authentication - Transport",
											"item": [
												{
													"name": "Create Basic Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"HTTP_BASIC\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"INCOMING_HTTP_BASIC_AUTH\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														},
														"description": "Basic Outbound Authentication:\n\nTo create new basic auth credentials remove the authMode and add the below payload.\n\n\n\t{\n\t\t\"templateKey\": \"authMode\",\n\t\t\"values\": [\n\t\t\t\"NEW\"\n\t\t]\n\t},\n\t{\n\t\t\"templateKey\": \"httpAuthCredentials\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"userName\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"Administrator\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"password\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"manage\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n"
													},
													"response": []
												},
												{
													"name": "Create OAuth2 Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyAction\": {\n    \t \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"OAUTH2\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"INCOMING_OAUTH_TOKEN\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														},
														"description": "OAuth2 Outbound Authentication:\r\n\r\nWe can also provide custom oauth2 token by replacing the \"authMode\" to \"NEW\" and provide the \"oauth2Token\" like below\r\n\r\n\r\n\t{\r\n\t\t\"templateKey\": \"authMode\",\r\n\t\t\"values\": [\r\n\t\t\t\"NEW\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"templateKey\": \"oauth2Token\",\r\n\t\t\"values\": [\r\n\t\t\t\"oauth2_token_value_here\"\r\n\t\t]\r\n\t}\r\n"
													},
													"response": []
												},
												{
													"name": "Create JWT Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"JWT\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"INCOMING_JWT\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Alias Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"ALIAS\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"NEW\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alias\",\n                        \"values\": [\n                            \"${HTTP transport security alias}\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Anonymous Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"REMOVE_INCOMING_HTTP_HEADERS\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"NEW\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create NTLM Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Outbound Authentication - Transport\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"outboundTransportAuthentication\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"transportSecurity\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"authType\",\r\n                        \"values\": [\r\n                            \"NTLM\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"authMode\",\r\n                        \"values\": [\r\n                            \"INCOMING_HTTP_BASIC_AUTH\"                     //availabels are NEW,,TRANSPARENT\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														},
														"description": "NTLM Outbound Authentication:\n\nTo pass the custom credentials change the auth mode to \"NEW\" and add the below entries.\n\n{\n\t\"templateKey\": \"httpAuthCredentials\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"userName\",\n\t\t\t\"values\": [\n\t\t\t\t\"Administrator\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"password\",\n\t\t\t\"values\": [\n\t\t\t\t\"manage\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nto make it transparent change the authMode to \"TRANSPARENT\"."
													},
													"response": []
												},
												{
													"name": "Create Kerberos Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"KERBEROS\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"INCOMING_KERBEROS\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														},
														"description": "Kerberos Outbound Authentication:\n\nTo provide custom kerberos credentials change the authMode to \"NEW\" and add the below entries.\n\n{\n\t\"templateKey\": \"kerberosCredentials\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"clientPrincipal\",\n\t\t\t\"values\": [\n\t\t\t\t\"value\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"clientPassword\",\n\t\t\t\"values\": [\n\t\t\t\t\"value\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"servicePrincipal\",\n\t\t\t\"values\": [\n\t\t\t\t\"value\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"servicePrincipalNameForm\",\n\t\t\t\"values\": [\n\t\t\t\t\"hostbased\" // or username\n\t\t\t]\n\t\t}\n\t]\n}\n"
													},
													"response": []
												}
											]
										},
										{
											"name": "Outbound Authentication - Message",
											"item": [
												{
													"name": "Create None Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"policyAction\": {\n\t\t \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Message\",\n                \"locale\": \"en\"\n            }\n        ],\n\t\t\"templateKey\": \"outboundMessageAuthentication\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"messageSecurity\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"authType\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"NONE\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"signAndEncryptConfig\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"keyStoreAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"DEFAULT_IS_KEYSTORE\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"keyAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"ssos\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"truststoreAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"DEFAULT_IS_TRUSTSTORE\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"certificateAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"ssos\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create WSS Username Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Message\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundMessageAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"messageSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"WSS_USERNAME\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"signAndEncryptConfig\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"keyStoreAlias\",\n                                \"values\": [\n                                    \"DEFAULT_IS_KEYSTORE\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"keyAlias\",\n                                \"values\": [\n                                    \"ssos\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"truststoreAlias\",\n                                \"values\": [\n                                    \"DEFAULT_IS_TRUSTSTORE\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"certificateAlias\",\n                                \"values\": [\n                                    \"ssos\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"NEW\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"wssCredentials\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"userName\",\n                                \"values\": [\n                                    \"Administrator\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"password\",\n                                \"values\": [\n                                    \"manage\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Alias Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Message\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundMessageAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"ALIAS\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"NEW\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alias\",\n                        \"values\": [\n                            \"${HTTP transport security alias}\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														}
													},
													"response": []
												},
												{
													"name": "Create Kerberos Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Outbound Authentication - Message\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"outboundMessageAuthentication\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"messageSecurity\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"authType\",\r\n                        \"values\": [\r\n                            \"KERBEROS\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"authMode\",\r\n                        \"values\": [\r\n                            \"NEW\"                 \r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"kerberosCredentials\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"templateKey\": \"clientPrincipal\",\r\n                                \"values\": [\r\n                                    \"<value>\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"clientPassword\",\r\n                                \"values\": [\r\n                                    \"<value>\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"servicePrincipal\",\r\n                                \"values\": [\r\n                                    \"<value>\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"servicePrincipalNameForm\",\r\n                                \"values\": [\r\n                                    \"username\"                \r\n                                ]\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"signAndEncryptConfig\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"templateKey\": \"truststoreAlias\",\r\n                                \"values\": [\r\n                                    \"DEFAULT_IS_TRUSTSTORE\"              \r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"certificateAlias\",\r\n                                \"values\": [\r\n                                    \"ssos\"\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														},
														"description": "Kerberos Outbound Message Authentication:\n\nAuth Mode applicable values are \n1. NEW\n2. DELEGATE_INCOMING\n3. INCOMING_HTTP_BASIC_AUTH\n\n\nService Principal Form applicable values are\n1. hostbased\n2. username"
													},
													"response": []
												},
												{
													"name": "Create Remove WSS Headers Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Outbound Authentication - Message\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"outboundMessageAuthentication\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"messageSecurity\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"authType\",\r\n                        \"values\": [\r\n                            \"REMOVE_WSS_HEADERS\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"authMode\",\r\n                        \"values\": [\r\n                            \"NEW\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														},
														"description": "Kerberos Outbound Message Authentication:\n\nAuth Mode applicable values are \n1. NEW\n2. DELEGATE_INCOMING\n3. INCOMING_HTTP_BASIC_AUTH\n\n\nService Principal Form applicable values are\n1. hostbased\n2. username"
													},
													"response": []
												},
												{
													"name": "Create SAML Outbound Authentication",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Outbound Authentication - Message\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"outboundMessageAuthentication\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"messageSecurity\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"authType\",\r\n                        \"values\": [\r\n                            \"SAML\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"authMode\",\r\n                        \"values\": [\r\n                            \"NEW\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"signAndEncryptConfig\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"templateKey\": \"truststoreAlias\",\r\n                                \"values\": [\r\n                                    \"DEFAULT_IS_TRUSTSTORE\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"certificateAlias\",\r\n                                \"values\": [\r\n                                    \"ssos\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"keyStoreAlias\",\r\n                                \"values\": [\r\n                                    \"DEFAULT_IS_KEYSTORE\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"keyAlias\",\r\n                                \"values\": [\r\n                                    \"ssos\"\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions"
															]
														},
														"description": "Kerberos Outbound Message Authentication:\n\nAuth Mode applicable values are \n1. NEW\n2. DELEGATE_INCOMING\n3. INCOMING_HTTP_BASIC_AUTH\n\n\nService Principal Form applicable values are\n1. hostbased\n2. username"
													},
													"response": []
												}
											]
										},
										{
											"name": "Create Content Based Routing",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"contentBasedRouting\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"routeTo\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"endpointUri\",\n                        \"values\": [\n                            \"http://petstore.swagger.io/v2/${sys:resource_path}\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"method\",\n                        \"values\": [\n                            \"CUSTOM\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"connectTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"readTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"contentRules\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"routeTo\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"endpointUri\",\n                                \"values\": [\n                                    \"http://petstore.swagger.io/v2/${sys:resource_path}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"method\",\n                                \"values\": [\n                                    \"CUSTOM\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"connectTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"readTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"sslConfig\",\n                                \"parameters\": [\n                                    {\n                                        \"templateKey\": \"keyStoreAlias\",\n                                        \"values\": [\n                                            \"DEFAULT_IS_KEYSTORE\"\n                                        ]\n                                    },\n                                    {\n                                        \"templateKey\": \"keyAlias\",\n                                        \"values\": [\n                                            \"ssos\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"payloadIdentifier\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"expressionType\",\n                                \"values\": [\n                                    \"jsonPath\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"expression\",\n                                \"values\": [\n                                    \"${request.headers.isSSLEnabled}\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"name\",\n                        \"values\": [\n                            \"isSSLEnabled\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Content Based Routing:\n\nThe supported payload identifiers are xpath,jsonpath and regex.\n\nXPath Payload Identifier:\n{\n\t\"templateKey\": \"payloadIdentifier\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\"values\": [\n\t\t\t\t\"xpath\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"expression\",\n\t\t\t\"values\": [\n\t\t\t\t\"/request/header/enableSSL\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nRegex Payload Identifier:\n{\n\t\"templateKey\": \"payloadIdentifier\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\"values\": [\n\t\t\t\t\"xpath\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"expression\",\n\t\t\t\"values\": [\n\t\t\t\t\"/request/header/enableSSL\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nAlso we can add multiple rules for content based routing by adding the section with template key \"contentRules\"."
											},
											"response": []
										},
										{
											"name": "Create Context Based Routing",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"contextBasedRouting\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"routeTo\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"endpointUri\",\n                        \"values\": [\n                            \"http://petstore.swagger.io/v2/${sys:resource_path}\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"method\",\n                        \"values\": [\n                            \"CUSTOM\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"connectTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"readTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"contextRules\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"name\",\n                        \"values\": [\n                            \"ContextBasedRoutingRule\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"contextConditionOperator\",\n                        \"values\": [\n                            \"or\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"routeTo\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"endpointUri\",\n                                \"values\": [\n                                    \"https://petstore.swagger.io/v2/${sys:resource_path}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"method\",\n                                \"values\": [\n                                    \"CUSTOM\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"connectTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"readTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"sslConfig\",\n                                \"parameters\": [\n                                    {\n                                        \"templateKey\": \"keyStoreAlias\",\n                                        \"values\": [\n                                            \"DEFAULT_IS_KEYSTORE\"\n                                        ]\n                                    },\n                                    {\n                                        \"templateKey\": \"keyAlias\",\n                                        \"values\": [\n                                            \"ssos\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"contextCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"conditionVariable\",\n                                \"values\": [\n                                    \"Consumer\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionValue\",\n                                \"values\": [\n                                    \"039778fc-dd3b-442b-a799-181a9dda1265\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"contextCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"conditionVariable\",\n                                \"values\": [\n                                    \"Date\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionOperator\",\n                                \"values\": [\n                                    \"LT\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionValue\",\n                                \"values\": [\n                                    \"2020-04-20\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"contextCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"conditionVariable\",\n                                \"values\": [\n                                    \"IPV4\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"fromIp\",\n                                \"values\": [\n                                    \"10.60.0.1\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"toIp\",\n                                \"values\": [\n                                    \"10.60.0.10\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"contextCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"conditionVariable\",\n                                \"values\": [\n                                    \"predefined\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionOperator\",\n                                \"values\": [\n                                    \"EQ\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionDataType\",\n                                \"values\": [\n                                    \"USER\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionValue\",\n                                \"values\": [\n                                    \"Administrator\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Date:\nApplicable conditionOperator for Date is GT(greater than) and LT(lesser than).\n\nIPV6:\nSimilar to what given in IPv4 we can also add IPv6 address limit with key \"IPv6\".\n\nTime:\nApplicable conditionOperator for time is GT(greater than) and LT(lesser than).\n{\n\t\"templateKey\": \"contextCondition\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"conditionVariable\",\n\t\t\t\"values\": [\n\t\t\t\t\"Time\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"conditionOperator\",\n\t\t\t\"values\": [\n\t\t\t\t\"LT\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"hours\",\n\t\t\t\"values\": [\n\t\t\t\t\"20\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"minutes\",\n\t\t\t\"values\": [\n\t\t\t\t\"20\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nPredefined Context Variables:\nSimilar to User we have few other conditionDataType for Predefined Context Variables with \n\nconditionOperator\n1. EQ(equal to)\n2. NEQ(not equal to)\n\nthey are \n\n1. INBOUND_HTTP_METHOD\n2. MESSAGE_TYPE - (Inbound Content Type)\n3. BUILDER_TYPE - (Inbound Accept)\n4. INBOUND_IP\n5. INBOUND_REQUEST_URI\n6. INBOUND_PROTOCOL\n7. ROUTING_METHOD\n8. MEDIATOR_IP - (Gateway IP)\n9. MEDIATOR_HOSTNAME - (Gateway HostName)\n10. OPERATION\n"
											},
											"response": []
										},
										{
											"name": "Create Dynamic Routing Policy Action",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"dynamicRouting\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"routeTo\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"endpointUri\",\n                        \"values\": [\n                            \"https://petstore.swagger.io/v2/${sys:resource_path}\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"method\",\n                        \"values\": [\n                            \"CUSTOM\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"connectTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"readTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"sslConfig\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"keyStoreAlias\",\n                                \"values\": [\n                                    \"DEFAULT_IS_KEYSTORE\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"keyAlias\",\n                                \"values\": [\n                                    \"ssos\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"dynamicRule\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"routingConditionKey\",\n                        \"values\": [\n                            \"context\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"dynRouteTo\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"dynEndpointUri\",\n                                \"values\": [\n                                    \"http://petstore.swagger.io/v2/${sys:resource_path}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"method\",\n                                \"values\": [\n                                    \"CUSTOM\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"connectTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"readTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Dynamic routing with Header:\n\nChange the routingConditionKey to \"header\" and add \"routingConditionValue\" like below.\n\n{\n\t\t\"templateKey\": \"routingConditionKey\",\n\t\t\"values\": [\n\t\t\t\"header\"\n\t\t]\n\t},\n\t{\n\t\t\"templateKey\": \"routingConditionValue\",\n\t\t\"values\": [\n\t\t\t\"dynamicRoutingHeader\"\n\t\t]\n\t}"
											},
											"response": []
										},
										{
											"name": "Create Load Balancing Routing Policy Action",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"loadBalancerRouting\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"lbRouteTo\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"endpointUri\",\n                        \"values\": [\n                            \"https://petstore.swagger.io/v2/${sys:resource_path}\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"method\",\n                        \"values\": [\n                            \"CUSTOM\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"connectTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"readTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"suspendDurationOnFailure\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"sslConfig\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"keyStoreAlias\",\n                                \"values\": [\n                                    \"DEFAULT_IS_KEYSTORE\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"keyAlias\",\n                                \"values\": [\n                                    \"ssos\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"serviceRegistryParameters\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"discoveryEndpointPathParameter\",\n                                \"parameters\": [\n                                    {\n                                        \"templateKey\": \"parameter\",\n                                        \"values\": [\n                                            \"seriviceDiscoveryParameter\"\n                                        ]\n                                    },\n                                    {\n                                        \"templateKey\": \"parameterValue\",\n                                        \"values\": [\n                                            \"serviceDiscoveryValue\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Load Balancing Routing:\n\nTo add multiple endpoints in the load balancing routing, add another entry for template key \"lbRouteTo\" object with the needed details like below.\n\n{\n\t\"templateKey\": \"lbRouteTo\",\n\t\"parameters\":[....]\n},\n{\n\t\"templateKey\": \"lbRouteTo\",\n\t\"parameters\":[....]\n}"
											},
											"response": []
										},
										{
											"name": "Create Custom HTTP Header Policy Action",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Custom HTTP Header\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"customHttpHeaders\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"header\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"headerKey\",\r\n                        \"values\": [\r\n                            \"Accept\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"headerValue\",\r\n                        \"values\": [\r\n                            \"application/json\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Straight Through Routing Policy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Straight Through Routing\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"straightThroughRouting\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"endpointUri\",\n                \"values\": [\n                    \"http:google.com\"\n                ]\n            },\n            {\n                \"templateKey\": \"method\",\n                \"values\": [\n                    \"CUSTOM\"\n                ]\n            },\n            {\n                \"templateKey\": \"sslConfig\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"keyStoreAlias\",\n                        \"values\": [\n                            \"DEFAULT_IS_KEYSTORE\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"keyAlias\",\n                        \"values\": [\n                            \"ssos\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Straight Through Routing Policy:\n\nBy default API Gateway will create Straight Through Routing policy while creating an API."
											},
											"response": []
										}
									]
								},
								{
									"name": "Traffic Monitoring",
									"item": [
										{
											"name": "Create Log Invocation",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Log Invocation\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"logInvocation\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"storeRequestHeaders\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeRequestPayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponseHeaders\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponsePayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeClientMessage\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeServerMessage\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeAsZip\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"logGenerationFrequency\",\r\n                \"values\": [\r\n                    \"OnSuccess\"                  \r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"SMTP\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"emailTo\",\r\n                        \"values\": [\r\n                            \"support@softwareag.com\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"localLog\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"logLevel\",\r\n                        \"values\": [\r\n                            \"Error\"                       \r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Log Invocation:\n\nLog Generation Frequency applicable values are\n1. Always\n2. OnSuccess\n3. OnFailure\n\nDestinations applicable destinations are\n1. APIPORTAL\n2. AUDITLOG\n3. CENTRASITE\n4. DES\n5. ELASTICSEARCH\n6. JDBC\n7. SNMP\n\nLog level for LocalLog applicable values are\n1. Error\n2. Info\n3. Warn"
											},
											"response": []
										},
										{
											"name": "Create Monitor Service Level Agreement",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Monitor Service Level Agreement\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"monitorSLA\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"alertInterval\",\r\n                \"values\": [\r\n                    \"2\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertIntervalUnit\",\r\n                \"values\": [\r\n                    \"minutes\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertFrequency\",\r\n                \"values\": [\r\n                    \"once\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertMessage\",\r\n                \"values\": [\r\n                    \"alert message flows here\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"consumerIds\",\r\n                \"values\": [\r\n                    \"a67f6c1e-77ff-423d-a9e7-917e11f5a4e0\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"SMTP\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"emailTo\",\r\n                        \"values\": [\r\n                            \"support@softwareag.com\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"localLog\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"logLevel\",\r\n                        \"values\": [\r\n                            \"Warn\"       \r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"monitorRules\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"monitorRuleName\",\r\n                        \"values\": [\r\n                            \"availability\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"monitorRuleOperator\",\r\n                        \"values\": [\r\n                            \"EQ\"                      \r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"value\",\r\n                        \"values\": [\r\n                            \"1\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Monitor Service Level Agreement:\n\nLog Generation Frequency applicable values are\n1. Always\n2. OnSuccess\n3. OnFailure\n\nDestinations applicable destinations are\n1. APIPORTAL\n2. AUDITLOG\n3. CENTRASITE\n4. DES\n5. ELASTICSEARCH\n6. JDBC\n7. SNMP\n\nLog level for LocalLog applicable values are\n1. Error\n2. Info\n3. Warn\n\nWe can add multiple \"monitorRules\" object with the different types of \"monitorRuleName\" and \"monitorRuleOperator\" specified below.\n\nMonitor Rule Name applicable values are\n1. availability\n2. avgResponseTime\n3. faultCount\n4. maxResponseTime\n5. minResponseTime\n6. successCount\n7. requestCount\n\nMonitor Rule Operator applicable values are\n1. EQ\n2. GT\n3. LT"
											},
											"response": []
										},
										{
											"name": "Create Monitor Service Performance",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"policyAction\": {\r\n         \"names\": [\r\n            {\r\n                \"value\": \"Monitor Service Performance\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"monitorServicePerformance\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"alertInterval\",\r\n                \"values\": [\r\n                    \"2\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertIntervalUnit\",\r\n                \"values\": [\r\n                    \"minutes\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertFrequency\",\r\n                \"values\": [\r\n                    \"once\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertMessage\",\r\n                \"values\": [\r\n                    \"alert message flows here\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"SMTP\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"emailTo\",\r\n                        \"values\": [\r\n                            \"support@softwareag.com\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"localLog\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"logLevel\",\r\n                        \"values\": [\r\n                            \"Warn\"       \r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"monitorRules\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"monitorRuleName\",\r\n                        \"values\": [\r\n                            \"availability\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"monitorRuleOperator\",\r\n                        \"values\": [\r\n                            \"EQ\"                      \r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"value\",\r\n                        \"values\": [\r\n                            \"1\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Monitor Service Performance:\n\nLog Generation Frequency applicable values are\n1. Always\n2. OnSuccess\n3. OnFailure\n\nDestinations applicable destinations are\n1. APIPORTAL\n2. AUDITLOG\n3. CENTRASITE\n4. DES\n5. ELASTICSEARCH\n6. JDBC\n7. SNMP\n\nLog level for LocalLog applicable values are\n1. Error\n2. Info\n3. Warn\n\nWe can add multiple \"monitorRules\" object with the different types of \"monitorRuleName\" and \"monitorRuleOperator\" specified below.\n\nMonitor Rule Name applicable values are\n1. availability\n2. avgResponseTime\n3. faultCount\n4. maxResponseTime\n5. minResponseTime\n6. successCount\n7. requestCount\n\nMonitor Rule Operator applicable values are\n1. EQ\n2. GT\n3. LT"
											},
											"response": []
										},
										{
											"name": "Create Throttling Traffic Optimization",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Throttling Traffic Optimization\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"throttle\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"throttleRule\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"throttleRuleName\",\r\n                        \"values\": [\r\n                            \"requestCount\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"monitorRuleOperator\",\r\n                        \"values\": [\r\n                            \"GT\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"value\",\r\n                        \"values\": [\r\n                            \"1\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertInterval\",\r\n                \"values\": [\r\n                    \"1\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertIntervalUnit\",\r\n                \"values\": [\r\n                    \"minutes\"                        \r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertFrequency\",\r\n                \"values\": [\r\n                    \"once\"                      \r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertMessage\",\r\n                \"values\": [\r\n                    \"alert message flows here\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"consumerIds\",\r\n                \"values\": [\r\n                    \"ed12d783-ef97-4b57-a0b5-7ca06805e8af\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"SMTP\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"emailTo\",\r\n                        \"values\": [\r\n                            \"support@softwareag.com\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"localLog\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"logLevel\",\r\n                        \"values\": [\r\n                            \"Error\"                        \r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Throttling Traffic Optimization\n\nDestinations applicable destinations are\n1. APIPORTAL\n2. AUDITLOG\n3. CENTRASITE\n4. DES\n5. ELASTICSEARCH\n6. JDBC\n7. SNMP\n\nLog level for LocalLog applicable values are\n1. Error\n2. Info\n3. Warn\n\nAlert frequency applicable values are\n1. once\n2. always\n\nAlert Interval Unit applicable values are\n1. minutes\n2. hours\n3. days\n4. weeks"
											},
											"response": []
										},
										{
											"name": "Create Service Result Cache",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Service Result Cache\",\n                \"locale\": \"en\"\n            }\n        ],\n\t\t\"templateKey\": \"serviceResultCache\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"cacheCriteria\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"httpHeader\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"httpHeaderName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Accept\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"whiteList\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\t\t\t\t\"text/xml\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"XPATH\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"xpath-exp\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"/request/headers\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"whiteList\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\t\t\t\t\"text/xml\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"namespace-src\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"prefix-src\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"axis2\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"uri-src\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"https://ws.axis2.org\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"queryParam\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"queryParamName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"srcResponse\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"whiteList\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"true\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"ttl\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"5d 4h 1m\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"max-payload-size\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"1024\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Response Processing",
									"item": [
										{
											"name": "Create Invoke webMethods IS Service",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Response Invoke ESB\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n        \"templateKey\": \"responseInvokeESB\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"invokeISService\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"serviceName\",\n                        \"values\": [\n                            \"Service.processRequest:processPayload\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"runAsUser\",\n                        \"values\": [\n                            \"Administrator\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"complyToISSpec\",\n                        \"values\": [\n                            true\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Instead of configuration the webMethods IS service details every time. Create webMethods IS service alias under Administration -> Alias and use it everywhere.\n\n{\n\t\"policyAction\": {\n\t\t\"id\": \"1837bc32-5a2b-44d5-a6c9-2d832d15bdf2\",\n\t\t\"templateKey\": \"requestInvokeESB\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"esbAlias\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"APIGatewayESBAlias\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}"
											},
											"response": []
										},
										{
											"name": "Create Validate API Specification",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Validate API Specification\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n\t\t\"templateKey\": \"validateAPISpec\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"schemaValidationFlag\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateQueryParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validatePathParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateCookieParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateContentTypes\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"headersValidationFlag\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateHTTPHeaders\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"logicalConnector\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"AND\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"httpHeaderNonReqValue\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerKey\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Content-Type\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerValueNonRequired\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"active\": false\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Schema validation for different types of schema are listed below\n\n{\n\t\"templateKey\": \"validateSchema\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/generate-synthetic-annotations\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/id-idref-checkingID_IDREF_CHECKING\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/identity-constraint-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/ignore-xsi-type-until-elemdecl\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/namespace-growth\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/normalized-value\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/validation/schema/root-element-declaration\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/validation/schema/root-type-definition\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/augment-psvi\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/internal/validation/schema/dv-factory\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/element-default\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/schema/external-schemaLocation\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/internal/validator/schema\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/internal/tolerate-duplicates\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/unparsed-entity-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validate-annotations\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema-full-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
											},
											"response": []
										},
										{
											"name": "Create Data Masking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Data Masking\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n\t\t\"templateKey\": \"responseDataMasking\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"xpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"//request/payload/accountNumber\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"jpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"${request.payload.accountNumber}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"sameForTransactionalLogging\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"applyForPayload\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"active\": false\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Response Data Masking:\n\nDifferent types of masking types are\n1. XPath\n2. JsonPath\n3. Regex\n\n\nMasking Type applicable values are\n1. mask\n2. filter\n\n\n\n"
											},
											"response": []
										},
										{
											"name": "Create CORS",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"CORS\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"cors\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"corsAttributes\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"allowedOrigins\",\n                        \"values\": [\n                            \"10.60.20.30\",\n                            \"10.60.20.31\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"allowHeaders\",\n                        \"values\": [\n                            \"application/json\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"exposeHeaders\",\n                        \"values\": [\n                            \"application/json\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"allowCredentials\",\n                        \"values\": [\n                            \"true\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"allowMethods\",\n                        \"values\": [\n                            \"GET\",\n                            \"POST\",\n                            \"PUT\",\n                            \"DELETE\",\n                            \"PATCH\",\n                            \"HEAD\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"maxAge\",\n                        \"values\": [\n                            \"12\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Request Transformation",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"responseTransformation\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transformationConditions\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"logicalConnector\",\n                        \"values\": [\n                            \"OR\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"transformationCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"transformationVariable\",\n                                \"values\": [\n                                    \"${request.httpMethod}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"transformationConditionOperator\",\n                                \"values\": [\n                                    \"equals\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"transformationConditionValue\",\n                                \"values\": [\n                                    \"POST\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"requestTransformationConfiguration\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"commonTransformation\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"remove\",\n                                \"values\": [\n                                    \"${request.headers.x-Gateway-APIKey}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"addOrModify\",\n                                \"parameters\": [\n                                    {\n                                        \"templateKey\": \"transformationVariable\",\n                                        \"values\": [\n                                            \"${request.headers.APIKey}\"\n                                        ]\n                                    },\n                                    {\n                                        \"templateKey\": \"transformationValue\",\n                                        \"values\": [\n                                            \"e10a54ce-62f5-42ba-b5cb-a3bace7c39ab\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"methodTransformation\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"method\",\n                                \"values\": [\n                                    \"CUSTOM\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Error Handling",
									"item": [
										{
											"name": "Create Data Masking",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Data Masking\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n\t\t\"templateKey\": \"faultDataMasking\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"xpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"//request/payload/accountNumber\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"jpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"${request.payload.accountNumber}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n                \"templateKey\": \"regexMasking\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"maskingCriteria\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"action\",\n                                \"values\": [\n                                    \"//s\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"maskingType\",\n                                \"values\": [\n                                    \"mask\"                          \n                                ]\n                            },\n                            {\n                                \"templateKey\": \"maskValue\",\n                                \"values\": [\n                                    \"********\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n\t\t\t{\n\t\t\t\t\"templateKey\": \"sameForTransactionalLogging\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"applyForPayload\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"active\": false\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												},
												"description": "Fault Data Masking:\n\nDifferent types of masking types are\n1. XPath\n2. JsonPath\n3. Regex\n\n\nMasking Type applicable values are\n1. mask\n2. filter\n\n"
											},
											"response": []
										},
										{
											"name": "Create Conditional Error Processing",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"policyAction\": {\n\t\t\"templateKey\": \"conditionalErrorProcessing\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"preProcessingSteps\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"invokeESBParam\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"esbAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"WmAPIGatewayESB\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customFailureMessages\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"sendNativeProviderFault\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"failureMessage\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"contentType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"errortemplate\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"{\\\"errorMessage\\\":\\\"unauthorized request\\\"}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"useAsDefault\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"postProcessingSteps\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"invokeESBParam\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"esbAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"WmAPIGatewayESB\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"faultCriteria\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"statusCodeCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"statusCode\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"401\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"faultCriteria\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"headerCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Accept\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"faultCriteria\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"xpathCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"payloadIdentifier\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"xpath\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"expression\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"/request/payload/error\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"value\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"unauthorized\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"payloadIdentifier\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"jsonPath\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"expression\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"${request.payload.error}\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"value\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"unauthorized\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Service Result Cache",
									"item": [
										{
											"name": "Get Cache Details By API Name And Version",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/serviceResultCache?apiName=SoftwareAG&apiVersion=1.0",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"serviceResultCache"
													],
													"query": [
														{
															"key": "apiName",
															"value": "SoftwareAG",
															"description": "(Required) This query parameter is used to specify the API name for which the service result cache element size needs to be fetched."
														},
														{
															"key": "apiVersion",
															"value": "1.0",
															"description": "(Required) The version of the apiName parameter specified"
														}
													]
												},
												"description": "You can enable API caching in API Gateway to cache your native service's response. With caching, you can reduce the number of calls made to your endpoint and also improve the latency of the requests to your API. When you enable caching for a stage, API Gateway caches responses from your endpoint for a specified time to live period. API Gateway then responds to the request by looking up the endpoint response from the cache instead of making a request to your endpoint. \n\nService Result cache can be configured for a API or Resource/method or Operation. \n\nThis REST Request is used to get the Service Result cache size for an API using apiName and apiVersion."
											},
											"response": [
												{
													"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator access.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache"
															],
															"query": [
																{
																	"key": "apiName",
																	"value": "<string>"
																},
																{
																	"key": "apiVersion",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the request for Service Result Cache size has been successfully returned. The response will have number of cache elements (A cached element is nothing but a single response) for the given API name and version, so it infers that the number of responses are actually cached for this API",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache"
															],
															"query": [
																{
																	"key": "apiName",
																	"value": "<string>"
																},
																{
																	"key": "apiVersion",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n\\t\\\"Cache size\\\": 2\\r\\n}\""
												},
												{
													"name": "This status code indicates that the server has encountered an error while fetching the Service Result cache for the API",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache"
															],
															"query": [
																{
																	"key": "apiName",
																	"value": "<string>"
																},
																{
																	"key": "apiVersion",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Cache Details By API Name And Version",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/serviceResultCache?apiName=Petstore&apiVersion=1.0",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"serviceResultCache"
													],
													"query": [
														{
															"key": "apiName",
															"value": "Petstore",
															"description": "(Required) This query parameter is used to specify the API name for which the service result cache deletion is requsted."
														},
														{
															"key": "apiVersion",
															"value": "1.0",
															"description": "(Required) The version of the apiName parameter specified"
														}
													]
												},
												"description": "This REST Request is used to request for deletion of Service Result cache for the API using apiName and apiVersion"
											},
											"response": [
												{
													"name": "This status code indicates that Service Result Cache has been deleted for the specified API and no data is returned in response",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache"
															],
															"query": [
																{
																	"key": "apiName",
																	"value": "<string>"
																},
																{
																	"key": "apiVersion",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the server has encountered an error while deleting the Service Result cache for the API",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache"
															],
															"query": [
																{
																	"key": "apiName",
																	"value": "<string>"
																},
																{
																	"key": "apiVersion",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator or API Gateway provider access to delete the Service Result Cache of the specified API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache"
															],
															"query": [
																{
																	"key": "apiName",
																	"value": "<string>"
																},
																{
																	"key": "apiVersion",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get Cache Details By API Id",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/serviceResultCache/:apiId",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"serviceResultCache",
														":apiId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
															"description": "(Required) The id of API for which the cached response size is requested"
														}
													]
												},
												"description": "This REST Request is used to get the Service Result cache size for the API using apiID. An alternative REST API call for /serviceResultCache. Instead of specifying name and version, if you know API id you can directly use that id to get the number of cached responses for that API"
											},
											"response": [
												{
													"name": "This status code indicates that the server has encountered an error while fetching the Service Result Cache for the API",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache/:apiId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache",
																":apiId"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the request for Service Result Cache size is successfully returned. The response will have number of cache elements (A cached element is nothing but a single response) for the given API id, so it infers that the number of responses are actually cached for this API ",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache/:apiId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache",
																":apiId"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n\\t\\\"Cache size\\\": 2\\r\\n}\""
												},
												{
													"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator access",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache/:apiId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache",
																":apiId"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Cache Details by API Id",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/serviceResultCache/:apiId",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"serviceResultCache",
														":apiId"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
															"description": "(Required) The id of API for which the Service Result Cache deletion is requested"
														}
													]
												},
												"description": "This REST Request is used to request for deletion of Service Result Cache for the API using api id"
											},
											"response": [
												{
													"name": "This status code indicates that the server has encountered an error while deleting the Service Result Cache for the API",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache/:apiId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache",
																":apiId"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator or API Gateway provider access to delete the Service Result cache of the specified API.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache/:apiId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache",
																":apiId"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that Service Result Cache has been deleted for the API and no data is returned in response ",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/serviceResultCache/:apiId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"serviceResultCache",
																":apiId"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Custom Extension",
									"item": [
										{
											"name": "Create External Callout Policy Action",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Custom Extension\",\n                \"locale\": \"en\"\n            }\n        ],\n\t\t\"templateKey\": \"customPolicy\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionType\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"externalCallout\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"externalEndpoint\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"endpointUri\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"${EndpointAlias}/rest/service/jsonTransformation/{pathParam}\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"externalEndpointMethod\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"CUSTOM\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"endpointSSLConfig\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"keyStoreAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"DEFAULT_IS_KEYSTORE\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"keyAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"ssos\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"truststoreAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"DEFAULT_IS_TRUSTSTORE\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"connectTimeout\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"30\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"readTimeout\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"30\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"mashupPathParamTransformation\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"mashupPathParams\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"mashupPathParamName\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"pathParam\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"mashupPathParamValue\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"pathValue\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionRequestProcessing\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"requestPayload\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"${request.payload}\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"mashupHeaderTransformation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"useIncomingHeaders\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"customHeaders\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Accept\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"mashupQueryParamsTransformation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"mashupQueryParams\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"mashupQueryParamName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"queryParam\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"mashupQueryParamValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"queryValue\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionResponseProcessing\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"copyEntireResponse\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"abortInCaseOfFailure\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create webMethods IS Service Policy Action",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Custom Extension\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"customPolicy\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"customExtensionType\",\n                \"values\": [\n                    \"invokeESB\"\n                ]\n            },\n            {\n                \"templateKey\": \"esbServices\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"esbAlias\",\n                        \"values\": [\n                            \"WmAPIGatewayESB\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create AWS Lambda Policy Action",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Custom Extension\",\n                \"locale\": \"en\"\n            }\n        ],\n\t\t\"templateKey\": \"customPolicy\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionType\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"awsLambda\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionRequestProcessing\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"requestPayload\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"${request.payload}\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"mashupHeaderTransformation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"useIncomingHeaders\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"customHeaders\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Content-type\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"mashupQueryParamsTransformation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"mashupQueryParams\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"mashupQueryParamName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"queryParam\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"mashupQueryParamValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"queryValue\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionResponseProcessing\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"copyEntireResponse\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"abortInCaseOfFailure\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"responsePayloadMap\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"responseFromCustomPolicyExpression\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"${request.headers.APIKey}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"targetPayloadExpression\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"${response.payload.apiKey}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"awsLambda\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"functionName\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"JsonTransformation\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"invocationType\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"RequestResponse\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"awsAlias\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"${NECROLAX}\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"awsClientConfig\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"clientConfiguration\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"awsClientConfigName\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"connectionTimeout\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"awsClientConfigValue\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"3000\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"clientConfiguration\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"awsClientConfigName\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"requestTimeout\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"awsClientConfigValue\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"3000\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Messaging Policy Action",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Custom Extension\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"customPolicy\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"customExtensionType\",\n                \"values\": [\n                    \"messaging\"\n                ]\n            },\n            {\n                \"templateKey\": \"customExtensionRequestProcessing\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"requestPayload\",\n                        \"values\": [\n                            \"{\\n\\\"echoAMQP\\\" : ${request.payload}\\n}\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"mashupHeaderTransformation\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"useIncomingHeaders\",\n                        \"values\": [\n                            \"false\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"customExtensionResponseProcessing\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"copyEntireResponse\",\n                        \"values\": [\n                            \"true\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"abortInCaseOfFailure\",\n                        \"values\": [\n                            \"true\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"mashupHeaderTransformation\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"useIncomingHeaders\",\n                                \"values\": [\n                                    \"false\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"messaging\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"connectionAlias\",\n                        \"values\": [\n                            \"AMQP_CON\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"destinationQueueOrTopicName\",\n                        \"values\": [\n                            \"amqpCPQueue\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"destinationQueueOrTopicType\",\n                        \"values\": [\n                            \"QUEUE\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"replyToQueueOrTopicName\",\n                        \"values\": [\n                            \"amqpCPReplyQueue\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"replyToQueueOrTopicType\",\n                        \"values\": [\n                            \"QUEUE\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"timeToLive\",\n                        \"values\": [\n                            \"20000\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"timeToWait\",\n                        \"values\": [\n                            \"30000\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"deliveryMode\",\n                        \"values\": [\n                            \"NON_PERSISTENT\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policyActions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policyActions"
													]
												}
											},
											"response": []
										}
									],
									"description": "Custom Extension:\n\nTo know more about Custom Extension please refer below techcommunity article.\n\nTECHCommunity Article:\nhttp://techcommunity.softwareag.com/pwiki/-/wiki/Main/Custom%20Extension%20policy%20in%20API%20Gateway\n\nCustom Extension is supported in 5 stages of API Invoke flow. They are\n\n1. Identify & Access - IAM\n2. Request Processing - requestPayloadProcessing\n3. Routing - routing\n4. Response Processing - responseProcessing\n5. Error Handling - responseFaultProcessing",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Get PolicyAction by PolicyAction ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/policyActions/:policyActionId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions",
												":policyActionId"
											],
											"variable": [
												{
													"key": "policyActionId",
													"value": "830a33fb-6967-4133-b5dd-88a43cea67a6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All Policy Actions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Policy Action",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/policyActions/:policyActionId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions",
												":policyActionId"
											],
											"variable": [
												{
													"key": "policyActionId",
													"value": "a1c8b26a-2fd1-4877-980d-3dd1c2c9caab"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Policies",
							"item": [
								{
									"name": "Threat Protection",
									"item": [
										{
											"name": "Global IP DOS",
											"item": [
												{
													"name": "Get Global DOS",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{baseURL}}/policyActions/globalipdos",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions",
																"globalipdos"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update Global DOS",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"policyAction\": {\n\t\t\"id\": \"globalipdos\",\n\t\t\"templateKey\": \"globalipdos\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"limitBy\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"GLOBALIP\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"isDOSEnabled\",\n\t\t\t\t\"values\": [\n\t\t\t\t\ttrue\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"maximumRequests\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"requestsPerSeconds\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"inProgressRequests\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"whenLimitExceeds\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"Block\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"blockInterval\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customErrorMessage\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"<img src=\\\"x\\\" onerror=alert(1) onerror=\\\"alert(22)\\\">\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"trustedIPRange\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"10.60.22.32\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions/globalipdos",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions",
																"globalipdos"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "DOS by IP",
											"item": [
												{
													"name": "Get DOS by IP",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{baseURL}}/policyActions/ipdos",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions",
																"ipdos"
															]
														}
													},
													"response": []
												},
												{
													"name": "Update DOS by IP",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"policyAction\": {\n\t\t\"id\": \"ipdos\",\n\t\t\"templateKey\": \"ipdos\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"limitBy\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"IP\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"isDOSEnabled\",\n\t\t\t\t\"values\": [\n\t\t\t\t\ttrue\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"maximumRequests\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"5\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"requestsPerSeconds\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"60\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"inProgressRequests\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"2\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"whenLimitExceeds\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"Add to Deny List\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"blockInterval\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customErrorMessage\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"Request reached limit by IP\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"trustedIPRange\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"10.60.22.33\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseURL}}/policyActions/ipdos",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"policyActions",
																"ipdos"
															]
														},
														"description": "To block the request change the payload with the values below\n\n{\n    \"templateKey\": \"whenLimitExceeds\",\n    \"values\": [\n        \"Block\"\n    ]\n}\n    \n//provide the blockInterval in minutes    \n{\n    \"templateKey\": \"blockInterval\",\n    \"values\": [\n        \"1\"\n    ]\n}"
													},
													"response": []
												}
											]
										},
										{
											"name": "Mobile Device and App",
											"item": [
												{
													"name": "Get Mobile Configurations",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															}
														],
														"url": {
															"raw": "{{baseURL}}/configurations/mobileApp",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"configurations",
																"mobileApp"
															]
														},
														"description": "You can use API Gateway to disable access for certain mobile application versions on a predefined set of mobile platforms. By registering the required devices and applications and disabling access to these versions, you ensure that all users use the latest versions of the applications and take advantage of the latest security and functional updates."
													},
													"response": [
														{
															"name": "This status code indicates that the Mobile Applications configurations are retrieved successfully. ",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/configurations/mobileApp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"configurations",
																		"mobileApp"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\r\\n    \\\"mobileApplications\\\": [\\r\\n        \\\"MyApp\\\",\\r\\n        \\\"HelloApplication\\\"\\r\\n    ],\\r\\n    \\\"mobileAppDeviceTypes\\\": [\\r\\n        \\\"Android\\\",\\r\\n        \\\"ios\\\"\\r\\n    ]\\r\\n}\""
														},
														{
															"name": "This status code indicates that the user is not a valid API Gateway user for retrieving the Mobile Applications configuration.",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/configurations/mobileApp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"configurations",
																		"mobileApp"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "This status code indicates that the mobileApp not mentioned in API access uri path.",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/configurations/mobileApp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"configurations",
																		"mobileApp"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\"Missing mandatory field configId in request.\\\"\\r\\n}\""
														}
													]
												},
												{
													"name": "Create Mobile Application Configurations",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"mobileAppDeviceTypes\": [\r\n        \"Android\",\r\n        \"Windows\"\r\n    ],\r\n    \"mobileApplications\": [\r\n        \"APIGateway\"\r\n    ]\r\n}"
														},
														"url": {
															"raw": "{{baseURL}}/configurations/mobileApp",
															"host": [
																"{{baseURL}}"
															],
															"path": [
																"configurations",
																"mobileApp"
															]
														},
														"description": "The method is used to update the details of the Mobile Applications configuration in API Gateway.You can use API Gateway to disable access for certain mobile application versions on a predefined set of mobile platforms. By registering the required devices and applications and disabling access to these versions, you ensure that all users use the latest versions of the applications and take advantage of the latest security and functional updates."
													},
													"response": [
														{
															"name": "This status code indicates that the Mobile Applications configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"mobileApplications\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"mobileAppDeviceTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/configurations/mobileApp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"configurations",
																		"mobileApp"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\r\\n    \\\"mobileApplications\\\": [\\r\\n        \\\"MyApp\\\",\\r\\n        \\\"HelloApplication\\\"\\r\\n    ],\\r\\n    \\\"mobileAppDeviceTypes\\\": [\\r\\n        \\\"Android\\\",\\r\\n        \\\"ios\\\"\\r\\n    ]\\r\\n}\""
														},
														{
															"name": "This status code indicates that the specified HTTP method is not allowed for the requested Mobile Applications in API Gateway.",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"mobileApplications\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"mobileAppDeviceTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/configurations/mobileApp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"configurations",
																		"mobileApp"
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\r\\n\\t\\\"errorDetails\\\": \\\" Unable to process the PUT request for Mobile Applications configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: loadBalancer\\\"\\r\\n}\""
														},
														{
															"name": "This status code indicates that the request body is invalid.",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"mobileApplications\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"mobileAppDeviceTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/configurations/mobileApp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"configurations",
																		"mobileApp"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\r\\n\\\"errorDetails\\\": \\\" Invalid property key found in request payload.\\\"\\r\\n}\""
														},
														{
															"name": "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Threat Protection\" functional privilege to access this API.",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"mobileApplications\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"mobileAppDeviceTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/configurations/mobileApp",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"configurations",
																		"mobileApp"
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												}
											]
										}
									]
								},
								{
									"name": "Global Policy",
									"item": [
										{
											"name": "Create Global Policy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policy\": {\n        \"descriptions\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"description flows here\"\n            }\n        ],\n        \"names\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"Global Policy\"\n            }\n        ],\n        \"global\": true,\n        \"policyScope\": \"GLOBAL\",\n        \"active\": false,\n        \"systemPolicy\": false,\n        \"policyEnforcements\": [\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"a3e8b1d4-03f0-4146-8c6b-565089039146\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"requestPayloadProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"2592c05c-0c96-4455-be8e-2eebf5dba16e\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"routing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"dd69eeb1-9bc7-44c9-be0d-cb7a047349d3\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"LMT\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"c068a84c-beed-4199-b32e-e56679f5f3ac\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"IAM\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"0c29da09-7c7c-4449-b93b-6ec6acb89bda\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseFaultProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"fcac4e90-a0a6-4f37-bbcc-3d8ed02460dd\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"transport\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"8b6c2c66-7eba-435c-a22c-2f156ff984be\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseProcessing\"\n            }\n        ],\n        \"scope\": {\n            \"applicableAPITypes\": [\n                \"REST\",\n                \"SOAP\",\n                \"ODATA\"\n            ],\n            \"logicalConnector\": \"AND\",\n            \"scopeConditions\": [\n                {\n                    \"filterType\": \"HTTP_METHOD\",\n                    \"attributes\": [\n                        {\n                            \"attributeName\": \"GET\",\n                            \"value\": true\n                        }\n                    ]\n                },\n                {\n                    \"filterType\": \"API\",\n                    \"attributes\": [\n                        {\n                            \"attributeName\": \"API_NAME\",\n                            \"operation\": \"EQUALS\",\n                            \"value\": \"SoftwareAG\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policies",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policies"
													]
												},
												"description": "The possible values for HTTP_METHODS filter type are \n1. POST\n2. PUT\n3. DELETE\n4. PATCH\n5. GET\n\nThe possible values for API filter type are \nattribute name\n1. API_NAME\n2. API_DESCRIPTION\n3. API_VERSION\n\nattribute values\n1. EQUALS\n2. NOT_EQUALS\n3. CONTAINS\n4. NOT_CONTAINS\n5. STARTS_WITH\n6. NOT_STARTS_WITH\n7. ENDS_WITH"
											},
											"response": []
										},
										{
											"name": "Update Global Policy",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policy\": {\n        \"id\": \"0ef28805-1254-40db-9841-738f85680bc4\",\n        \"descriptions\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"description flows here\"\n            }\n        ],\n        \"names\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"Global Policy\"\n            }\n        ],\n        \"global\": true,\n        \"policyScope\": \"GLOBAL\",\n        \"active\": false,\n        \"systemPolicy\": false,\n        \"policyEnforcements\": [\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"a3e8b1d4-03f0-4146-8c6b-565089039146\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"requestPayloadProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"2592c05c-0c96-4455-be8e-2eebf5dba16e\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"routing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"dd69eeb1-9bc7-44c9-be0d-cb7a047349d3\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"LMT\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"c068a84c-beed-4199-b32e-e56679f5f3ac\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"IAM\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"0c29da09-7c7c-4449-b93b-6ec6acb89bda\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseFaultProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"fcac4e90-a0a6-4f37-bbcc-3d8ed02460dd\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"transport\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"8b6c2c66-7eba-435c-a22c-2f156ff984be\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseProcessing\"\n            }\n        ],\n        \"scope\": {\n            \"applicableAPITypes\": [\n                \"REST\",\n                \"SOAP\",\n                \"ODATA\"\n            ],\n            \"logicalConnector\": \"AND\",\n            \"scopeConditions\": [\n                {\n                    \"filterType\": \"HTTP_METHOD\",\n                    \"attributes\": [\n                        {\n                            \"attributeName\": \"GET\",\n                            \"value\": true\n                        }\n                    ]\n                },\n                {\n                    \"filterType\": \"API\",\n                    \"attributes\": [\n                        {\n                            \"attributeName\": \"API_NAME\",\n                            \"operation\": \"EQUALS\",\n                            \"value\": \"SoftwareAG\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policies/:policyId",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policies",
														":policyId"
													],
													"variable": [
														{
															"key": "policyId",
															"value": "0ef28805-1254-40db-9841-738f85680bc4"
														}
													]
												},
												"description": "The possible values for HTTP_METHODS filter type are \n1. POST\n2. PUT\n3. DELETE\n4. PATCH\n5. GET\n\nThe possible values for API filter type are \nattribute name\n1. API_NAME\n2. API_DESCRIPTION\n3. API_VERSION\n\nattribute values\n1. EQUALS\n2. NOT_EQUALS\n3. CONTAINS\n4. NOT_CONTAINS\n5. STARTS_WITH\n6. NOT_STARTS_WITH\n7. ENDS_WITH"
											},
											"response": []
										},
										{
											"name": "Get APIs for Global Policy By ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/policies/:policyId/apis?active=true",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policies",
														":policyId",
														"apis"
													],
													"query": [
														{
															"key": "active",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "policyId",
															"value": "0ef28805-1254-40db-9841-738f85680bc4",
															"description": "(Required) This path parameter is used to specify the global policy id for which we need the list of applicable APIs"
														}
													]
												},
												"description": "This REST request is used to get the list of applicable APIs for a global policy.  An API become  applicable API for a global policy only if it satisfies the scope specified in the global policy.  By default it will return the basic API details of all the applicable APIs either if the API is active or inactive for a global policy. User can use the query parameter \"active\" to retrieve all active APIs for a global policy or all applicable APIs regardless of its status for a global policy."
											},
											"response": [
												{
													"name": "This is status code indicates that server has encounted an while getting applicable APIs for the specified policy",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/apis?active=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"apis"
															],
															"query": [
																{
																	"key": "active",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the specified global policy is not available in API Gateway",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/apis?active=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"apis"
															],
															"query": [
																{
																	"key": "active",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Unable to find the resource: 732c4526-db9a-4ef9-9782-edda1a6aa9bc1\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator or API gateway provider access to get the list of applicable APIs for the specified global policy.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/apis?active=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"apis"
															],
															"query": [
																{
																	"key": "active",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicate the specified policy is not a global policy.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/apis?active=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"apis"
															],
															"query": [
																{
																	"key": "active",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\"5e04581b-a583-495b-83b3-411f9c067054 is not a global policy.\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the specified global policy is valid and in the response it will contain the list of applicable APIs based on the parameters specified in the request. ",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/apis?active=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"apis"
															],
															"query": [
																{
																	"key": "active",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"apiResponse\\\": [\\r\\n    {\\r\\n      \\\"api\\\": {\\r\\n        \\\"apiName\\\": \\\"API Gateway \\\",\\r\\n        \\\"apiVersion\\\": \\\"10.0\\\",\\r\\n        \\\"apiDescription\\\": \\\"This swagger doc contain API Definition for API Gateway APIs. It contains swagger definition for all APIs in API Gateway.\\\",\\r\\n        \\\"isActive\\\": false,\\r\\n        \\\"type\\\": \\\"REST\\\",\\r\\n        \\\"publishedPortals\\\": [],\\r\\n        \\\"systemVersion\\\": 1,\\r\\n        \\\"id\\\": \\\"4869049b-4cef-4c76-b678-14d4970c5241\\\"\\r\\n      },\\r\\n      \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"api\\\": {\\r\\n        \\\"apiName\\\": \\\"EMP\\\",\\r\\n        \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n        \\\"isActive\\\": true,\\r\\n        \\\"type\\\": \\\"REST\\\",\\r\\n        \\\"publishedPortals\\\": [],\\r\\n        \\\"systemVersion\\\": 1,\\r\\n        \\\"id\\\": \\\"e60d6fe9-3612-469f-b33a-fb4c97c72b3b\\\"\\r\\n      },\\r\\n      \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"api\\\": {\\r\\n        \\\"apiName\\\": \\\"EMP_POJO_WSDL\\\",\\r\\n        \\\"apiVersion\\\": \\\"1\\\",\\r\\n        \\\"isActive\\\": true,\\r\\n        \\\"type\\\": \\\"SOAP\\\",\\r\\n        \\\"publishedPortals\\\": [],\\r\\n        \\\"systemVersion\\\": 1,\\r\\n        \\\"id\\\": \\\"421eb4bf-b2d0-40a4-900f-ad5fd0a2484e\\\"\\r\\n      },\\r\\n      \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"api\\\": {\\r\\n        \\\"apiName\\\": \\\"EMP_REST_SWAGGER\\\",\\r\\n        \\\"apiVersion\\\": \\\"1.0.0\\\",\\r\\n        \\\"isActive\\\": false,\\r\\n        \\\"type\\\": \\\"REST\\\",\\r\\n        \\\"publishedPortals\\\": [],\\r\\n        \\\"systemVersion\\\": 1,\\r\\n        \\\"id\\\": \\\"260c11e1-b3eb-4714-aa73-7cd95fc91abb\\\"\\r\\n      },\\r\\n      \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n    }\\r\\n  ]\\r\\n}\""
												}
											]
										},
										{
											"name": "Activate Global Policy By Policy ID",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/policies/:policyId/activate",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policies",
														":policyId",
														"activate"
													],
													"variable": [
														{
															"key": "policyId",
															"value": "0ef28805-1254-40db-9841-738f85680bc4",
															"description": "(Required) The path parameter should be the policy id of global policy that needs to be activated. If the policy id is not belongs to a global policy then error will be reported"
														}
													]
												},
												"description": "This REST request is used to activate a global policy and this request doesn't require any request body. This request will try to activate the global policy and if any error occurs during activation it will be reported as response or if the global policy is activated then its policy details active flag set to true will be sent as response. If the global policy have any conflicts then it cannot be activated the conflicts are manually resolved."
											},
											"response": [
												{
													"name": "This status code indicates that the global policy id specified is activated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/activate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"activate"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"policy\\\": {\\r\\n    \\\"id\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n    \\\"names\\\": [\\r\\n      {\\r\\n        \\\"value\\\": \\\"a\\\",\\r\\n        \\\"locale\\\": \\\"English\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"descriptions\\\": [\\r\\n      {\\r\\n        \\\"value\\\": \\\"\\\",\\r\\n        \\\"locale\\\": \\\"English\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"scope\\\": {\\r\\n      \\\"applicableAPITypes\\\": [\\r\\n        \\\"REST\\\",\\r\\n        \\\"SOAP\\\"\\r\\n      ],\\r\\n      \\\"result\\\": {},\\r\\n      \\\"scopeConditions\\\": [],\\r\\n      \\\"logicalConnector\\\": \\\"AND\\\"\\r\\n    },\\r\\n    \\\"policyEnforcements\\\": [\\r\\n      {\\r\\n        \\\"enforcements\\\": [\\r\\n          {\\r\\n            \\\"enforcementObjectId\\\": \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\",\\r\\n            \\\"order\\\": null\\r\\n          }\\r\\n        ],\\r\\n        \\\"stageKey\\\": \\\"IAM\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n    \\\"global\\\": true,\\r\\n    \\\"active\\\": true,\\r\\n    \\\"systemPolicy\\\": false\\r\\n  }\\r\\n}\""
												},
												{
													"name": "This status code indicates that the request is not correct. It can be either due to incorrect policy type or trying to activate already active policy. The sample shows that the policy is specified is not a global policy id.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/activate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"activate"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Policy [PT1] is not a global policy. Cannot be activated/deactivated.\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator access to activate global policy.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/activate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"activate"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the policy id specified is not found in API Gateway",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/activate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"activate"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Unable to find the resource: 732c4526-db9a-4ef9-9782-edda1a6aa9bc1\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the server has encountered an error during the activation of global policy. The sample shows the error is due to a conflict between two global policies on the common applicable APIs. The conflict is between this global policy and other active global policy. This happens when an API satisfies the scope of one or more global policy and during the effective policy calculation you might get policy validation error message. The detailed structure of the error is reported for any conflicts that happen during the process activation ",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/activate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"activate"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Conflict between global Policy for API - EMP_POJO_WSDL, Operation - updateEmployee -  An API can be associated with only one policy action with template id Identify & Authorize Application\\\",\\r\\n  \\\"reason\\\": [\\r\\n    {\\r\\n      \\\"apiId\\\": \\\"421eb4bf-b2d0-40a4-900f-ad5fd0a2484e\\\",\\r\\n      \\\"apiName\\\": \\\"EMP_POJO_WSDL\\\",\\r\\n      \\\"apiType\\\": \\\"SOAP\\\",\\r\\n      \\\"errorOnResource\\\": [\\r\\n        {\\r\\n          \\\"conflictingPolicies\\\": {\\r\\n            \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\": {\\r\\n              \\\"names\\\": [\\r\\n                {\\r\\n                  \\\"value\\\": \\\"a\\\",\\r\\n                  \\\"locale\\\": \\\"English\\\"\\r\\n                }\\r\\n              ],\\r\\n              \\\"policyActionsIds\\\": [\\r\\n                \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\"\\r\\n              ],\\r\\n              \\\"policyId\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n              \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n              \\\"stageKey\\\": \\\"IAM\\\"\\r\\n            }\\r\\n          },\\r\\n          \\\"error\\\": {\\r\\n            \\\"allowedOccurence\\\": \\\"once\\\",\\r\\n            \\\"errorType\\\": \\\"occurence\\\",\\r\\n            \\\"policyActionName\\\": \\\"[Identify & Authorize Application]\\\",\\r\\n            \\\"templateId\\\": \\\"evaluatePolicy\\\"\\r\\n          },\\r\\n          \\\"errorMessage\\\": \\\" An API can be associated with only one policy action with template id Identify & Authorize Application\\\",\\r\\n          \\\"policyDetails\\\": {\\r\\n            \\\"names\\\": [\\r\\n              {\\r\\n                \\\"value\\\": \\\"Employee Global Policy\\\",\\r\\n                \\\"locale\\\": \\\"English\\\"\\r\\n              }\\r\\n            ],\\r\\n            \\\"policyActionsIds\\\": [\\r\\n              \\\"31c729f9-4f1c-4074-acba-6975c0668433\\\"\\r\\n            ],\\r\\n            \\\"policyId\\\": \\\"7a16baec-7925-4579-966b-bfe58265853d\\\",\\r\\n            \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n            \\\"stageKey\\\": \\\"IAM\\\"\\r\\n          },\\r\\n          \\\"resource\\\": \\\"updateEmployee\\\"\\r\\n        },\\r\\n        {\\r\\n          \\\"conflictingPolicies\\\": {\\r\\n            \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\": {\\r\\n              \\\"names\\\": [\\r\\n                {\\r\\n                  \\\"value\\\": \\\"a\\\",\\r\\n                  \\\"locale\\\": \\\"English\\\"\\r\\n                }\\r\\n              ],\\r\\n              \\\"policyActionsIds\\\": [\\r\\n                \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\"\\r\\n              ],\\r\\n              \\\"policyId\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n              \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n              \\\"stageKey\\\": \\\"IAM\\\"\\r\\n            }\\r\\n          },\\r\\n          \\\"error\\\": {\\r\\n            \\\"allowedOccurence\\\": \\\"once\\\",\\r\\n            \\\"errorType\\\": \\\"occurence\\\",\\r\\n            \\\"policyActionName\\\": \\\"[Identify & Authorize Application]\\\",\\r\\n            \\\"templateId\\\": \\\"evaluatePolicy\\\"\\r\\n          },\\r\\n          \\\"errorMessage\\\": \\\" An API can be associated with only one policy action with template id Identify & Authorize Application\\\",\\r\\n          \\\"policyDetails\\\": {\\r\\n            \\\"names\\\": [\\r\\n              {\\r\\n                \\\"value\\\": \\\"Employee Global Policy\\\",\\r\\n                \\\"locale\\\": \\\"English\\\"\\r\\n              }\\r\\n            ],\\r\\n            \\\"policyActionsIds\\\": [\\r\\n              \\\"31c729f9-4f1c-4074-acba-6975c0668433\\\"\\r\\n            ],\\r\\n            \\\"policyId\\\": \\\"7a16baec-7925-4579-966b-bfe58265853d\\\",\\r\\n            \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n            \\\"stageKey\\\": \\\"IAM\\\"\\r\\n          },\\r\\n          \\\"resource\\\": \\\"addEmployee\\\"\\r\\n        },\\r\\n        {\\r\\n          \\\"conflictingPolicies\\\": {\\r\\n            \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\": {\\r\\n              \\\"names\\\": [\\r\\n                {\\r\\n                  \\\"value\\\": \\\"a\\\",\\r\\n                  \\\"locale\\\": \\\"English\\\"\\r\\n                }\\r\\n              ],\\r\\n              \\\"policyActionsIds\\\": [\\r\\n                \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\"\\r\\n              ],\\r\\n              \\\"policyId\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n              \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n              \\\"stageKey\\\": \\\"IAM\\\"\\r\\n            }\\r\\n          },\\r\\n          \\\"error\\\": {\\r\\n            \\\"allowedOccurence\\\": \\\"once\\\",\\r\\n            \\\"errorType\\\": \\\"occurence\\\",\\r\\n            \\\"policyActionName\\\": \\\"[Identify & Authorize Application]\\\",\\r\\n            \\\"templateId\\\": \\\"evaluatePolicy\\\"\\r\\n          },\\r\\n          \\\"errorMessage\\\": \\\" An API can be associated with only one policy action with template id Identify & Authorize Application\\\",\\r\\n          \\\"policyDetails\\\": {\\r\\n            \\\"names\\\": [\\r\\n              {\\r\\n                \\\"value\\\": \\\"Employee Global Policy\\\",\\r\\n                \\\"locale\\\": \\\"English\\\"\\r\\n              }\\r\\n            ],\\r\\n            \\\"policyActionsIds\\\": [\\r\\n              \\\"31c729f9-4f1c-4074-acba-6975c0668433\\\"\\r\\n            ],\\r\\n            \\\"policyId\\\": \\\"7a16baec-7925-4579-966b-bfe58265853d\\\",\\r\\n            \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n            \\\"stageKey\\\": \\\"IAM\\\"\\r\\n          },\\r\\n          \\\"resource\\\": \\\"deleteEmployee\\\"\\r\\n        },\\r\\n        {\\r\\n          \\\"conflictingPolicies\\\": {\\r\\n            \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\": {\\r\\n              \\\"names\\\": [\\r\\n                {\\r\\n                  \\\"value\\\": \\\"a\\\",\\r\\n                  \\\"locale\\\": \\\"English\\\"\\r\\n                }\\r\\n              ],\\r\\n              \\\"policyActionsIds\\\": [\\r\\n                \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\"\\r\\n              ],\\r\\n              \\\"policyId\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n              \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n              \\\"stageKey\\\": \\\"IAM\\\"\\r\\n            }\\r\\n          },\\r\\n          \\\"error\\\": {\\r\\n            \\\"allowedOccurence\\\": \\\"once\\\",\\r\\n            \\\"errorType\\\": \\\"occurence\\\",\\r\\n            \\\"policyActionName\\\": \\\"[Identify & Authorize Application]\\\",\\r\\n            \\\"templateId\\\": \\\"evaluatePolicy\\\"\\r\\n          },\\r\\n          \\\"errorMessage\\\": \\\" An API can be associated with only one policy action with template id Identify & Authorize Application\\\",\\r\\n          \\\"policyDetails\\\": {\\r\\n            \\\"names\\\": [\\r\\n              {\\r\\n                \\\"value\\\": \\\"Employee Global Policy\\\",\\r\\n                \\\"locale\\\": \\\"English\\\"\\r\\n              }\\r\\n            ],\\r\\n            \\\"policyActionsIds\\\": [\\r\\n              \\\"31c729f9-4f1c-4074-acba-6975c0668433\\\"\\r\\n            ],\\r\\n            \\\"policyId\\\": \\\"7a16baec-7925-4579-966b-bfe58265853d\\\",\\r\\n            \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n            \\\"stageKey\\\": \\\"IAM\\\"\\r\\n          },\\r\\n          \\\"resource\\\": \\\"getEmployee\\\"\\r\\n        }\\r\\n      ]\\r\\n    }\\r\\n  ]\\r\\n}\""
												}
											]
										},
										{
											"name": "Deactivate Global Policy By Policy ID",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/policies/:policyId/deactivate",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policies",
														":policyId",
														"deactivate"
													],
													"variable": [
														{
															"key": "policyId",
															"value": "0ef28805-1254-40db-9841-738f85680bc4",
															"description": "(Required) The path parameter should be the policy id of global policy that needs to be deactivated. If the policy id is not belongs to a global policy then error will be reported"
														}
													]
												},
												"description": "This REST request is used to deactivate a global policy and it doesn't require any request body. This request tries to deactivate the global policy and if any error occurs during deactivation will be reported as response or if the global policy deactivated the policy details of a global policy with active flag set to false is sent as response. An active global policy cannot have conflicts with other active global policy and hence the  deactivation fails only when the conflict occurs between active global policy that is specified and one or more applicable active APIs. This can happen when the applicable active API policy action  might depend on one or more policy action from the specified global policy. If you deactivate this policy, it would cause the active API to have an unstable state. Hence the deactivation is reported as failed in this case."
											},
											"response": [
												{
													"name": "This status code indicates that the server has encountered an error during the deactivation of global policy. The sample shows the error due to policy dependencies between an active API and the global policy specified",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/deactivate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"deactivate"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Conflict between global Policy for API - EMP, Path - /employee/{id}, Method - get -  Policy action Throttling Traffic Optimization is dependent to policy action(s) [Identify & Authorize Application]\\\",\\r\\n  \\\"reason\\\": [\\r\\n    {\\r\\n      \\\"apiId\\\": \\\"e60d6fe9-3612-469f-b33a-fb4c97c72b3b\\\",\\r\\n      \\\"apiName\\\": \\\"EMP\\\",\\r\\n      \\\"apiType\\\": \\\"REST\\\",\\r\\n      \\\"errorOnResource\\\": [\\r\\n        {\\r\\n          \\\"error\\\": {\\r\\n            \\\"errorType\\\": \\\"occurence\\\",\\r\\n            \\\"missingDependency\\\": [\\r\\n              \\\"evaluatePolicy\\\"\\r\\n            ],\\r\\n            \\\"policyActionName\\\": \\\"[Throttling Traffic Optimization]\\\",\\r\\n            \\\"templateId\\\": \\\"throttle\\\"\\r\\n          },\\r\\n          \\\"errorMessage\\\": \\\" Policy action Throttling Traffic Optimization is dependent to policy action(s) [Identify & Authorize Application]\\\",\\r\\n          \\\"method\\\": \\\"get\\\",\\r\\n          \\\"policyDetails\\\": {\\r\\n            \\\"names\\\": [\\r\\n              {\\r\\n                \\\"value\\\": \\\"Default Policy for API EMP\\\",\\r\\n                \\\"locale\\\": \\\"English\\\"\\r\\n              }\\r\\n            ],\\r\\n            \\\"policyActionsIds\\\": [\\r\\n              \\\"9adf1ff1-efdc-4c41-8998-794d316eaced\\\"\\r\\n            ],\\r\\n            \\\"policyId\\\": \\\"d7672248-7d25-444e-a9b6-853e1d95d1c6\\\",\\r\\n            \\\"policyScope\\\": \\\"SERVICE\\\",\\r\\n            \\\"stageKey\\\": \\\"LMT\\\"\\r\\n          },\\r\\n          \\\"resource\\\": \\\"/employee/{id}\\\"\\r\\n        }\\r\\n      ]\\r\\n    }\\r\\n  ]\\r\\n}\""
												},
												{
													"name": "This status code indicates that the request is not correct. It can be either due to incorrect policy type or trying to deactivate already inactive  policy. The sample shows that the policy is specified is not a global policy id.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/deactivate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"deactivate"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Policy [PT1] is not a global policy. Cannot be activated/deactivated.\\\"\\r\\n}\""
												},
												{
													"name": "This status code indicates that the global policy id specified is deactivated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/deactivate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"deactivate"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"policy\\\": {\\r\\n    \\\"id\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n    \\\"names\\\": [\\r\\n      {\\r\\n        \\\"value\\\": \\\"a\\\",\\r\\n        \\\"locale\\\": \\\"English\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"descriptions\\\": [\\r\\n      {\\r\\n        \\\"value\\\": \\\"\\\",\\r\\n        \\\"locale\\\": \\\"English\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"scope\\\": {\\r\\n      \\\"applicableAPITypes\\\": [\\r\\n        \\\"REST\\\",\\r\\n        \\\"SOAP\\\"\\r\\n      ],\\r\\n      \\\"result\\\": {},\\r\\n      \\\"scopeConditions\\\": [],\\r\\n      \\\"logicalConnector\\\": \\\"AND\\\"\\r\\n    },\\r\\n    \\\"policyEnforcements\\\": [\\r\\n      {\\r\\n        \\\"enforcements\\\": [\\r\\n          {\\r\\n            \\\"enforcementObjectId\\\": \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\",\\r\\n            \\\"order\\\": null\\r\\n          }\\r\\n        ],\\r\\n        \\\"stageKey\\\": \\\"IAM\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n    \\\"global\\\": true,\\r\\n    \\\"active\\\": false,\\r\\n    \\\"systemPolicy\\\": false\\r\\n  }\\r\\n}\""
												},
												{
													"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator access to deactivate global policy.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/deactivate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"deactivate"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the policy id specified is not found in API Gateway",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/policies/:policyId/deactivate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"policies",
																":policyId",
																"deactivate"
															],
															"variable": [
																{
																	"key": "policyId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Unable to find the resource: 732c4526-db9a-4ef9-9782-edda1a6aa9bc1\\\"\\r\\n}\""
												}
											]
										}
									],
									"description": "Global Policy:\n\nCreate the needed policy actions before creating global policy. Once the needed policy actions are created then add the created policy actions entry in policyEnforcements with the appropriate stage key. Also add the required filters for the global policy.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Policy Template",
									"item": [
										{
											"name": "Create Policy Template",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policy\": {\n        \"descriptions\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"description flows here\"\n            }\n        ],\n        \"names\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"Policy Template\"\n            }\n        ],\n        \"policyEnforcements\": [\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"a3e8b1d4-03f0-4146-8c6b-565089039146\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"requestPayloadProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"2592c05c-0c96-4455-be8e-2eebf5dba16e\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"routing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"dd69eeb1-9bc7-44c9-be0d-cb7a047349d3\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"LMT\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"c068a84c-beed-4199-b32e-e56679f5f3ac\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"IAM\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"0c29da09-7c7c-4449-b93b-6ec6acb89bda\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseFaultProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"fcac4e90-a0a6-4f37-bbcc-3d8ed02460dd\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"transport\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"8b6c2c66-7eba-435c-a22c-2f156ff984be\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseProcessing\"\n            }\n        ],\n        \"global\": false,\n        \"policyScope\": \"TEMPLATE\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policies",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policies"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Policy Template",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"policy\": {\n        \"id\": \"ebba103b-62a1-432d-a564-54126464c214\",\n        \"names\": [\n            {\n                \"value\": \"Policy Template\",\n                \"locale\": \"English\"\n            }\n        ],\n        \"descriptions\": [\n            {\n                \"value\": \"description flows here\",\n                \"locale\": \"English\"\n            }\n        ],\n        \"policyEnforcements\": [\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"a3e8b1d4-03f0-4146-8c6b-565089039146\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"requestPayloadProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"2592c05c-0c96-4455-be8e-2eebf5dba16e\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"routing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"dd69eeb1-9bc7-44c9-be0d-cb7a047349d3\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"LMT\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"c068a84c-beed-4199-b32e-e56679f5f3ac\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"IAM\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"0c29da09-7c7c-4449-b93b-6ec6acb89bda\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseFaultProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"fcac4e90-a0a6-4f37-bbcc-3d8ed02460dd\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"transport\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"8b6c2c66-7eba-435c-a22c-2f156ff984be\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseProcessing\"\n            }\n        ],\n        \"policyScope\": \"TEMPLATE\",\n        \"systemPolicy\": false,\n        \"active\": false,\n        \"global\": false\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseURL}}/policies/:policyId",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"policies",
														":policyId"
													],
													"variable": [
														{
															"key": "policyId",
															"value": "ebba103b-62a1-432d-a564-54126464c214"
														}
													]
												}
											},
											"response": []
										}
									],
									"description": "Policy Template:\n\nCreate the needed policy actions before creating policy template. After creating policy actions associate it with the policy template payload under policyEnforcements, add it to the appropriate stages.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Get Policy by PolicyID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/policies/:policyId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policies",
												":policyId"
											],
											"variable": [
												{
													"key": "policyId",
													"value": "5c755bdc-f900-40b9-a5d1-bace562ea1b7"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All Policies",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseURL}}/policies",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policies"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Policy by PolicyID",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/policies/:policyId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policies",
												":policyId"
											],
											"variable": [
												{
													"key": "policyId",
													"value": "ebba103b-62a1-432d-a564-54126464c214"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Policy Stages",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/policyStages",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyStages"
									]
								},
								"description": "This REST Request is used to get the list of policy stages available in API gateway. It will also show the list of policies (template key of each policy) associated with each stage. "
							},
							"response": [
								{
									"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator or API Gateway provider access to get the policy stage.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policyStages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policyStages"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The response body contains list of all stages and policy associated with the stages. Also the response body contains the sequence where the policies corresponding to a stage will be executed",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policyStages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policyStages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"stages\\\": [\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"threatProtection\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Threat Protection\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"globalipdos\\\",\\r\\n        \\\"ipdos\\\",\\r\\n        \\\"egviolationalert\\\",\\r\\n        \\\"MsgSizeLimitFilter\\\",\\r\\n        \\\"OAuthFilter\\\",\\r\\n        \\\"mobileAppProtectionFilter\\\",\\r\\n        \\\"sqlInjectionFilter\\\",\\r\\n        \\\"antiVirusFilter\\\",\\r\\n        \\\"jsonThreatProtectionFilter\\\",\\r\\n        \\\"xmlThreatProtectionFilter\\\",\\r\\n        \\\"customFilter\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"insequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"transport\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Transport\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"entryProtocolPolicy\\\",\\r\\n        \\\"setMediaType\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"insequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"IAM\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Identity and Access Management\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"inboundAuthTransport\\\",\\r\\n        \\\"webServiceSecurityPolicy\\\",\\r\\n        \\\"authorizeUser\\\",\\r\\n        \\\"evaluatePolicy\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": null\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"requestPayloadProcessing\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Request Payload Processing\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"invokeESB\\\",\\r\\n        \\\"xsltTransformation\\\",\\r\\n        \\\"validateSchema\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"insequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"routing\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Routing Policies\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"contentBasedRouting\\\",\\r\\n        \\\"contextBasedRouting\\\",\\r\\n        \\\"dynamicRouting\\\",\\r\\n        \\\"loadBalancerRouting\\\",\\r\\n        \\\"straightThroughRouting\\\",\\r\\n        \\\"customHttpHeaders\\\",\\r\\n        \\\"outboundTransportAuthentication\\\",\\r\\n        \\\"outboundMessageAuthentication\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"insequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"LMT\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Logging, Monitoring and Traffic Optimization\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"logInvocation\\\",\\r\\n        \\\"monitorServicePerformance\\\",\\r\\n        \\\"monitorSLA\\\",\\r\\n        \\\"throttle\\\",\\r\\n        \\\"serviceResultCache\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"insequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"responseProcessing\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Response Processing\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"invokeESB\\\",\\r\\n        \\\"xsltTransformation\\\",\\r\\n        \\\"validateSchema\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"outsequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"responseFaultProcessing\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Error Handling\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"conditionalErrorProcessing\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"faultsequence\\\"\\r\\n    }\\r\\n  ]\\r\\n}\""
								}
							]
						}
					]
				},
				{
					"name": "Promotion Management",
					"item": [
						{
							"name": "Stages",
							"item": [
								{
									"name": "Create Stage",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"gora\",\n    \"description\": \"description flows here\",\n    \"url\": \"http://localhost:5555\",\n    \"username\": \"Administrator\",\n    \"password\": \"manage\",\n    \"keystoreAlias\": \"DEFAULT_IS_KEYSTORE\",\n    \"keyAlias\": \"ssos\"\n}"
										},
										"url": {
											"raw": "{{baseURL}}/stages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"stages"
											]
										},
										"description": "This REST operation is used to configure a stage in the source API Gateway where promotion will be initiated. A stage is just another API Gateway instance. When the stage url is https, then keystore and keystore alias will also be expected while configuring a stage"
									},
									"response": [
										{
											"name": "Stage is created successfully in API Gateway. Now user can promote API Gateway assets to the created stage",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"url\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"keystoreAlias\": \"<string>\",\n    \"keyAlias\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/stages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"stage\\\": {\\r\\n        \\\"id\\\": \\\"cc71211e-cd45-4a72-b453-9cc22c783f9d\\\",\\r\\n        \\\"name\\\": \\\"QA Stage\\\",\\r\\n        \\\"description\\\": \\\"This stage will be used to test the assets promoted from the development stage\\\",\\r\\n        \\\"url\\\": \\\"http://mcmriz01:5555/\\\",\\r\\n        \\\"username\\\": \\\"Administrator\\\",\\r\\n        \\\"password\\\": \\\"********************************\\\"\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code shows when the user missed the mandatory fields like name, url, username, password and keyStoreAlias, keyAlias for https url in the request or provide a invalid request body",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"url\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"keystoreAlias\": \"<string>\",\n    \"keyAlias\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/stages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to configure a stage.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"url\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"keystoreAlias\": \"<string>\",\n    \"keyAlias\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/stages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Stage details by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/stages/:stageId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"stages",
												":stageId"
											],
											"variable": [
												{
													"key": "stageId",
													"value": "93663d49-4b1c-4c61-8b0a-4116cde6d8c6",
													"description": "(Required) Stage Id for the stage to be retrieved"
												}
											]
										},
										"description": "This REST operation is used to retrieve a particular stage object based on a stage id"
									},
									"response": [
										{
											"name": "This status code indicates that the stageId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/stages/:stageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages",
														":stageId"
													],
													"variable": [
														{
															"key": "stageId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/stages/:stageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages",
														":stageId"
													],
													"variable": [
														{
															"key": "stageId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the stage based on the stageId.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/stages/:stageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages",
														":stageId"
													],
													"variable": [
														{
															"key": "stageId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"stage\\\": {\\r\\n        \\\"id\\\": \\\"2d9e280a-b529-466c-9ec8-d6b0e93026a8\\\",\\r\\n        \\\"name\\\": \\\"sampleStage\\\",\\r\\n        \\\"url\\\": \\\"http://localhost:5555/\\\",\\r\\n        \\\"username\\\": \\\"Administrator\\\",\\r\\n        \\\"password\\\": \\\"********************************\\\"\\r\\n    }\\r\\n}\""
										}
									]
								},
								{
									"name": "Update Stage",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"gora\",\n    \"description\": \"description flows here\",\n    \"url\": \"http://localhost:5555\",\n    \"username\": \"Administrator\",\n    \"password\": \"manage\",\n    \"keystoreAlias\": \"DEFAULT_IS_KEYSTORE\",\n    \"keyAlias\": \"ssos\"\n}"
										},
										"url": {
											"raw": "{{baseURL}}/stages/:stageId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"stages",
												":stageId"
											],
											"variable": [
												{
													"key": "stageId",
													"value": "06c3802f-f144-4c69-a10a-837b61c73184",
													"description": "(Required) Stage Id for the stage to be updated"
												}
											]
										},
										"description": "This REST operation is used to update a stage in the source API Gateway where promotion will be initiated. A stage is just another API Gateway instance. When the stage url is https, then keystore and keystore alias will also be expected while configuring a stage"
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"url\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"keystoreAlias\": \"<string>\",\n    \"keyAlias\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/stages/:stageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages",
														":stageId"
													],
													"variable": [
														{
															"key": "stageId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the stageId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"url\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"keystoreAlias\": \"<string>\",\n    \"keyAlias\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/stages/:stageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages",
														":stageId"
													],
													"variable": [
														{
															"key": "stageId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the updated stage object",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"url\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"keystoreAlias\": \"<string>\",\n    \"keyAlias\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/stages/:stageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages",
														":stageId"
													],
													"variable": [
														{
															"key": "stageId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"stage\\\": {\\r\\n        \\\"id\\\": \\\"2d9e280a-b529-466c-9ec8-d6b0e93026a8\\\",\\r\\n        \\\"name\\\": \\\"sampleStage\\\",\\r\\n        \\\"url\\\": \\\"http://localhost:5555/\\\",\\r\\n        \\\"username\\\": \\\"Administrator\\\",\\r\\n        \\\"password\\\": \\\"********************************\\\"\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code shows when the user missed the mandatory fields like name, url, username, password and keyStoreAlias, keyAlias for https url in the request or provide a invalid request body",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"url\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"keystoreAlias\": \"<string>\",\n    \"keyAlias\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/stages/:stageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages",
														":stageId"
													],
													"variable": [
														{
															"key": "stageId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Stage",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/stages/:stageId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"stages",
												":stageId"
											],
											"variable": [
												{
													"key": "stageId",
													"value": "06c3802f-f144-4c69-a10a-837b61c73184",
													"description": "(Required) Stage Id for the stage to be deleted"
												}
											]
										},
										"description": "Delete the stage"
									},
									"response": [
										{
											"name": "This status code indicates that the stageId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/stages/:stageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages",
														":stageId"
													],
													"variable": [
														{
															"key": "stageId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/stages/:stageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages",
														":stageId"
													],
													"variable": [
														{
															"key": "stageId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/stages/:stageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages",
														":stageId"
													],
													"variable": [
														{
															"key": "stageId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get All Stages",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/stages",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"stages"
											]
										},
										"description": "This REST operation is used to retrieve all the configured stages"
									},
									"response": [
										{
											"name": "Returns the list of all stages",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/stages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"stages\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"2d9e280a-b529-466c-9ec8-d6b0e93026a8\\\",\\r\\n            \\\"name\\\": \\\"sampleStage\\\",\\r\\n            \\\"url\\\": \\\"http://localhost:5555/\\\",\\r\\n            \\\"username\\\": \\\"Administrator\\\",\\r\\n            \\\"password\\\": \\\"********************************\\\"\\r\\n        }\\r\\n    ]\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/stages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stages"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Promotion",
							"item": [
								{
									"name": "Create Promotion",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"description\": \"description flows here\",\n\t\"name\": \"ProdPromotion\",\n\t\"destinationStages\": [\n\t\t\"93663d49-4b1c-4c61-8b0a-4116cde6d8c6\"\n\t],\n\t\"promotedAssets\": {\n\t\t\"api\": [\n\t\t\t\"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\"\n\t\t],\n\t\t\"application\": [\n\t\t\t\"039778fc-dd3b-442b-a799-181a9dda1265\"\n\t\t],\n\t\t\"alias\": [\n\t\t\t\"32e09ad8-e180-4b6e-86ac-4026e6aa8f3b\"\n\t\t],\n\t\t\"package\": [\n\t\t\t\"3b221626-16c2-4573-bd62-37eff0dbd782\"\n\t\t],\n\t\t\"policy\": [\n\t\t\t\"GlobalLogInvocationPolicy\",\n\t\t\t\"073340a5-f759-42db-a31c-adbdb8e5c40b\"\n\t\t],\n\t\t\"users\": [\n\t\t\t\"Administrator\"\n\t\t],\n\t\t\"groups\": [\n\t\t\t\"Administrators\",\n\t\t\t\"API-Gateway-Providers\"\n\t\t],\n\t\t\"accessprofiles\": [\n\t\t\t\"0b6859ba-8bb9-4f41-ba8e-42b617337566\"\n\t\t],\n\t\t\"gateway_scope\": [\n\t\t\t\"bfc07c60-047e-408a-b310-59b0ac61be0d\"\n\t\t]\n\t}\n}"
										},
										"url": {
											"raw": "{{baseURL}}/promotion?overwrite=true&overwriteAlias=false&fixingMissingVersions=true",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"promotion"
											],
											"query": [
												{
													"key": "overwrite",
													"value": "true",
													"description": "This parameter determines whether any existing assets on the target stage (except for aliases) will be overwritten"
												},
												{
													"key": "overwriteAlias",
													"value": "false",
													"description": "This parameter determines whether any existing aliases on the target stage will be overwritten"
												},
												{
													"key": "fixingMissingVersions",
													"value": "true"
												}
											]
										},
										"description": "This REST operation is used to promote the API Gateway assets from the source machine to destination machine where the destination machine is configured as a stage"
									},
									"response": [
										{
											"name": "Promotion of assets is completed successfully in API Gateway.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"destinationStages\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"promotedAssets\": \"<object>\",\n    \"includeApis\": \"<boolean>\",\n    \"includeApplications\": \"<boolean>\",\n    \"includeSubscriptions\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/promotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"promotion\\\": {\\r\\n        \\\"id\\\": \\\"025d530f-e8ed-4984-99bf-9d216bd3adc0\\\",\\r\\n        \\\"name\\\": \\\"samplePromote_01\\\",\\r\\n        \\\"destinationStages\\\": [\\r\\n            \\\"2d9e280a-b529-466c-9ec8-d6b0e93026a8\\\"\\r\\n        ],\\r\\n        \\\"valueSubstitution\\\": [],\\r\\n        \\\"promotedAssets\\\": {\\r\\n            \\\"api\\\": [\\r\\n                \\\"d033acd7-f935-4d92-8042-b152a992b0cd\\\"\\r\\n            ]\\r\\n        },\\r\\n        \\\"creationTime\\\": \\\"2018-08-07 07:33:57 GMT\\\",\\r\\n        \\\"owner\\\": \\\"Administrator\\\",\\r\\n        \\\"status\\\": \\\"Success\\\",\\r\\n        \\\"promotionResults\\\": {\\r\\n            \\\"sampleStage\\\": {\\r\\n                \\\"status\\\": \\\"Success\\\",\\r\\n                \\\"ArchiveResult\\\": [\\r\\n                    {\\r\\n                        \\\"PolicyAction\\\": {\\r\\n                            \\\"name\\\": \\\"Policy Action [Enable HTTP / HTTPS] -> Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                            \\\"id\\\": \\\"b8b508e0-a61d-49f0-9131-a9379dbd7f6e\\\",\\r\\n                            \\\"status\\\": \\\"Success\\\",\\r\\n                            \\\"explanation\\\": \\\"OK\\\",\\r\\n                            \\\"overwritten\\\": true,\\r\\n                            \\\"dependencyFailed\\\": null\\r\\n                        }\\r\\n                    },\\r\\n                    {\\r\\n                        \\\"API\\\": {\\r\\n                            \\\"name\\\": \\\"PetStore on Heroku[1.0.0]\\\",\\r\\n                            \\\"id\\\": \\\"d033acd7-f935-4d92-8042-b152a992b0cd\\\",\\r\\n                            \\\"status\\\": \\\"Success\\\",\\r\\n                            \\\"explanation\\\": \\\"OK\\\",\\r\\n                            \\\"overwritten\\\": true,\\r\\n                            \\\"dependencyFailed\\\": null\\r\\n                        }\\r\\n                    },\\r\\n                    {\\r\\n                        \\\"Policy\\\": {\\r\\n                            \\\"name\\\": \\\"Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                            \\\"id\\\": \\\"629edf16-3a8c-4362-b75c-2a9f9ab27ee0\\\",\\r\\n                            \\\"status\\\": \\\"Success\\\",\\r\\n                            \\\"explanation\\\": \\\"OK\\\",\\r\\n                            \\\"overwritten\\\": true,\\r\\n                            \\\"dependencyFailed\\\": null\\r\\n                        }\\r\\n                    },\\r\\n                    {\\r\\n                        \\\"PolicyAction\\\": {\\r\\n                            \\\"name\\\": \\\"Policy Action [Straight Through Routing] -> Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                            \\\"id\\\": \\\"e50eba2b-6f54-4585-9dac-25b20543bf82\\\",\\r\\n                            \\\"status\\\": \\\"Success\\\",\\r\\n                            \\\"explanation\\\": \\\"OK\\\",\\r\\n                            \\\"overwritten\\\": true,\\r\\n                            \\\"dependencyFailed\\\": null\\r\\n                        }\\r\\n                    }\\r\\n                ]\\r\\n            }\\r\\n        },\\r\\n        \\\"includeApis\\\": false,\\r\\n        \\\"includeApplications\\\": false,\\r\\n        \\\"includeSubscriptions\\\": false\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code shows when the user missed the mandatory fields like destinationStages, promotedAssets in the request or provide a invalid request body",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"destinationStages\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"promotedAssets\": \"<object>\",\n    \"includeApis\": \"<boolean>\",\n    \"includeApplications\": \"<boolean>\",\n    \"includeSubscriptions\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/promotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to configure a stage.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"destinationStages\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"promotedAssets\": \"<object>\",\n    \"includeApis\": \"<boolean>\",\n    \"includeApplications\": \"<boolean>\",\n    \"includeSubscriptions\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/promotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get All Promotions",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/promotion",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"promotion"
											]
										},
										"description": "This REST operation is used to retrieve the promotions history with each promotion entry provides the promotion name, promoted by whom, when it's promoted and the promoted assets status"
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/promotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the list of all promotions",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/promotion",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"promotion\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"12beeb57-1855-4da3-8802-679fcff6941b\\\",\\r\\n            \\\"name\\\": \\\"samplePromote\\\",\\r\\n            \\\"destinationStages\\\": [\\r\\n                \\\"2d9e280a-b529-466c-9ec8-d6b0e93026a8\\\"\\r\\n            ],\\r\\n            \\\"valueSubstitution\\\": [],\\r\\n            \\\"promotedAssets\\\": {\\r\\n                \\\"api\\\": [\\r\\n                    \\\"9ae31b7f-25e6-11e8-9ed0-e261b16c5360\\\"\\r\\n                ],\\r\\n                \\\"application\\\": []\\r\\n            },\\r\\n            \\\"creationTime\\\": \\\"2018-08-07 07:29:28 GMT\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"status\\\": \\\"Success\\\",\\r\\n            \\\"promotionResults\\\": {\\r\\n                \\\"sampleStage\\\": {\\r\\n                    \\\"status\\\": \\\"Success\\\",\\r\\n                    \\\"ArchiveResult\\\": [\\r\\n                        {\\r\\n                            \\\"Alias\\\": {\\r\\n                                \\\"name\\\": \\\"LabCaseEndpointAlias\\\",\\r\\n                                \\\"id\\\": \\\"fe1d5c3c-e02a-11e7-9d18-d9340e1d9bce\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Enable HTTP / HTTPS] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"75852c98-244a-4be3-8434-f39a7426ce95\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"Alias\\\": {\\r\\n                                \\\"name\\\": \\\"SetProjectIdTransformationAlias\\\",\\r\\n                                \\\"id\\\": \\\"7011f00c-e01a-11e7-9d18-c3cb04029276\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"Policy\\\": {\\r\\n                                \\\"name\\\": \\\"Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"0147048a-795f-48f2-905e-7357474fc02f\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Outbound Authentication - Transport] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"a2947928-5a38-49a0-b0bb-2076800987a1\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Monitor Service Performance] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"11d6d5d8-a55b-480b-8305-34544937fea8\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"API\\\": {\\r\\n                                \\\"name\\\": \\\"LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"9ae31b7f-25e6-11e8-9ed0-e261b16c5360\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Request Transformation] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"73a459c5-a15c-49ce-8394-459a34adb81e\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"Alias\\\": {\\r\\n                                \\\"name\\\": \\\"MyLabCaseAccountThesse\\\",\\r\\n                                \\\"id\\\": \\\"b73a8400-e008-11e7-9d18-f5832492b6de\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PassmanData\\\": {\\r\\n                                \\\"name\\\": \\\"HTTP_AUTH_OUTBOUND_CLIENT_PWDMyLabCaseAccountThesse\\\",\\r\\n                                \\\"id\\\": \\\"HTTP_AUTH_OUTBOUND_CLIENT_PWDMyLabCaseAccountThesse\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Log Invocation] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"b2fda4bb-70cd-43ba-b508-250f8ba6f5ac\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Identify & Authorize Application] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"f37af4f0-1304-4cf2-b6ea-dc19b012f537\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Straight Through Routing] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"fa476c9d-b30c-4d51-b7c5-80a824723f4f\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Service Result Cache] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"0fc7967a-0c31-4ba2-bc8a-a70f059d3ef0\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            },\\r\\n            \\\"includeApis\\\": false,\\r\\n            \\\"includeApplications\\\": false,\\r\\n            \\\"includeSubscriptions\\\": false\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"5cf6f3f5-f8ad-4810-9ef7-ed51d3fd2cfd\\\",\\r\\n            \\\"name\\\": \\\"samplePromote_01\\\",\\r\\n            \\\"destinationStages\\\": [\\r\\n                \\\"2d9e280a-b529-466c-9ec8-d6b0e93026a8\\\"\\r\\n            ],\\r\\n            \\\"valueSubstitution\\\": [],\\r\\n            \\\"promotedAssets\\\": {\\r\\n                \\\"api\\\": [\\r\\n                    \\\"9ae31b7f-25e6-11e8-9ed0-e261b16c5360\\\"\\r\\n                ]\\r\\n            },\\r\\n            \\\"creationTime\\\": \\\"2018-08-07 07:32:35 GMT\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"status\\\": \\\"Success\\\",\\r\\n            \\\"promotionResults\\\": {\\r\\n                \\\"sampleStage\\\": {\\r\\n                    \\\"status\\\": \\\"Success\\\",\\r\\n                    \\\"ArchiveResult\\\": [\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Log Invocation] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"b2fda4bb-70cd-43ba-b508-250f8ba6f5ac\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"Alias\\\": {\\r\\n                                \\\"name\\\": \\\"SetProjectIdTransformationAlias\\\",\\r\\n                                \\\"id\\\": \\\"7011f00c-e01a-11e7-9d18-c3cb04029276\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"Policy\\\": {\\r\\n                                \\\"name\\\": \\\"Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"0147048a-795f-48f2-905e-7357474fc02f\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PassmanData\\\": {\\r\\n                                \\\"name\\\": \\\"HTTP_AUTH_OUTBOUND_CLIENT_PWDMyLabCaseAccountThesse\\\",\\r\\n                                \\\"id\\\": \\\"HTTP_AUTH_OUTBOUND_CLIENT_PWDMyLabCaseAccountThesse\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"Alias\\\": {\\r\\n                                \\\"name\\\": \\\"MyLabCaseAccountThesse\\\",\\r\\n                                \\\"id\\\": \\\"b73a8400-e008-11e7-9d18-f5832492b6de\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Request Transformation] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"73a459c5-a15c-49ce-8394-459a34adb81e\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Enable HTTP / HTTPS] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"75852c98-244a-4be3-8434-f39a7426ce95\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"API\\\": {\\r\\n                                \\\"name\\\": \\\"LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"9ae31b7f-25e6-11e8-9ed0-e261b16c5360\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Monitor Service Performance] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"11d6d5d8-a55b-480b-8305-34544937fea8\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"Alias\\\": {\\r\\n                                \\\"name\\\": \\\"LabCaseEndpointAlias\\\",\\r\\n                                \\\"id\\\": \\\"fe1d5c3c-e02a-11e7-9d18-d9340e1d9bce\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Service Result Cache] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"0fc7967a-0c31-4ba2-bc8a-a70f059d3ef0\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Straight Through Routing] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"fa476c9d-b30c-4d51-b7c5-80a824723f4f\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Outbound Authentication - Transport] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"a2947928-5a38-49a0-b0bb-2076800987a1\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Identify & Authorize Application] -> Policy For API LabCaseTestService_VS[2.0]\\\",\\r\\n                                \\\"id\\\": \\\"f37af4f0-1304-4cf2-b6ea-dc19b012f537\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            },\\r\\n            \\\"includeApis\\\": false,\\r\\n            \\\"includeApplications\\\": false,\\r\\n            \\\"includeSubscriptions\\\": false\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"917e144e-70cc-4ada-8541-9f68d28483e9\\\",\\r\\n            \\\"name\\\": \\\"samplePromote_01\\\",\\r\\n            \\\"destinationStages\\\": [\\r\\n                \\\"2d9e280a-b529-466c-9ec8-d6b0e93026a8\\\"\\r\\n            ],\\r\\n            \\\"valueSubstitution\\\": [],\\r\\n            \\\"promotedAssets\\\": {\\r\\n                \\\"api\\\": [\\r\\n                    \\\"d033acd7-f935-4d92-8042-b152a992b0cd\\\"\\r\\n                ]\\r\\n            },\\r\\n            \\\"creationTime\\\": \\\"2018-08-07 07:33:10 GMT\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"status\\\": \\\"Success\\\",\\r\\n            \\\"promotionResults\\\": {\\r\\n                \\\"sampleStage\\\": {\\r\\n                    \\\"status\\\": \\\"Success\\\",\\r\\n                    \\\"ArchiveResult\\\": [\\r\\n                        {\\r\\n                            \\\"Policy\\\": {\\r\\n                                \\\"name\\\": \\\"Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                                \\\"id\\\": \\\"629edf16-3a8c-4362-b75c-2a9f9ab27ee0\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Straight Through Routing] -> Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                                \\\"id\\\": \\\"e50eba2b-6f54-4585-9dac-25b20543bf82\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Enable HTTP / HTTPS] -> Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                                \\\"id\\\": \\\"b8b508e0-a61d-49f0-9131-a9379dbd7f6e\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"API\\\": {\\r\\n                                \\\"name\\\": \\\"PetStore on Heroku[1.0.0]\\\",\\r\\n                                \\\"id\\\": \\\"d033acd7-f935-4d92-8042-b152a992b0cd\\\",\\r\\n                                \\\"status\\\": \\\"Failed\\\",\\r\\n                                \\\"explanation\\\": \\\"Asset already exists.\\\",\\r\\n                                \\\"overwritten\\\": false,\\r\\n                                \\\"dependencyFailed\\\": false\\r\\n                            }\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            },\\r\\n            \\\"includeApis\\\": false,\\r\\n            \\\"includeApplications\\\": false,\\r\\n            \\\"includeSubscriptions\\\": false\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"025d530f-e8ed-4984-99bf-9d216bd3adc0\\\",\\r\\n            \\\"name\\\": \\\"samplePromote_01\\\",\\r\\n            \\\"destinationStages\\\": [\\r\\n                \\\"2d9e280a-b529-466c-9ec8-d6b0e93026a8\\\"\\r\\n            ],\\r\\n            \\\"valueSubstitution\\\": [],\\r\\n            \\\"promotedAssets\\\": {\\r\\n                \\\"api\\\": [\\r\\n                    \\\"d033acd7-f935-4d92-8042-b152a992b0cd\\\"\\r\\n                ]\\r\\n            },\\r\\n            \\\"creationTime\\\": \\\"2018-08-07 07:33:57 GMT\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"status\\\": \\\"Success\\\",\\r\\n            \\\"promotionResults\\\": {\\r\\n                \\\"sampleStage\\\": {\\r\\n                    \\\"status\\\": \\\"Success\\\",\\r\\n                    \\\"ArchiveResult\\\": [\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Enable HTTP / HTTPS] -> Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                                \\\"id\\\": \\\"b8b508e0-a61d-49f0-9131-a9379dbd7f6e\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"API\\\": {\\r\\n                                \\\"name\\\": \\\"PetStore on Heroku[1.0.0]\\\",\\r\\n                                \\\"id\\\": \\\"d033acd7-f935-4d92-8042-b152a992b0cd\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"Policy\\\": {\\r\\n                                \\\"name\\\": \\\"Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                                \\\"id\\\": \\\"629edf16-3a8c-4362-b75c-2a9f9ab27ee0\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        },\\r\\n                        {\\r\\n                            \\\"PolicyAction\\\": {\\r\\n                                \\\"name\\\": \\\"Policy Action [Straight Through Routing] -> Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                                \\\"id\\\": \\\"e50eba2b-6f54-4585-9dac-25b20543bf82\\\",\\r\\n                                \\\"status\\\": \\\"Success\\\",\\r\\n                                \\\"explanation\\\": \\\"OK\\\",\\r\\n                                \\\"overwritten\\\": true,\\r\\n                                \\\"dependencyFailed\\\": null\\r\\n                            }\\r\\n                        }\\r\\n                    ]\\r\\n                }\\r\\n            },\\r\\n            \\\"includeApis\\\": false,\\r\\n            \\\"includeApplications\\\": false,\\r\\n            \\\"includeSubscriptions\\\": false\\r\\n        }\\r\\n    ]\\r\\n}\""
										}
									]
								},
								{
									"name": "Delete Promotion",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/promotion/:promotionId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"promotion",
												":promotionId"
											],
											"variable": [
												{
													"key": "promotionId",
													"value": "dd195b63-3ea0-42e3-a582-56e38e87bc52",
													"description": "(Required) Promotion Id for the promotion to be deleted"
												}
											]
										},
										"description": "Delete the promotion"
									},
									"response": [
										{
											"name": "This status code indicates that the promotionId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/promotion/:promotionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion",
														":promotionId"
													],
													"variable": [
														{
															"key": "promotionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/promotion/:promotionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion",
														":promotionId"
													],
													"variable": [
														{
															"key": "promotionId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/promotion/:promotionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion",
														":promotionId"
													],
													"variable": [
														{
															"key": "promotionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Promotion details by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/promotion/:promotionId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"promotion",
												":promotionId"
											],
											"variable": [
												{
													"key": "promotionId",
													"value": "dd195b63-3ea0-42e3-a582-56e38e87bc52",
													"description": "(Required) Promotion Id for the promotion to be retrieved"
												}
											]
										},
										"description": "Retrieve a promotion based on the promotion id."
									},
									"response": [
										{
											"name": "Returns the promotion based on the promotionId.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/promotion/:promotionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion",
														":promotionId"
													],
													"variable": [
														{
															"key": "promotionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"promotion\\\": {\\r\\n        \\\"id\\\": \\\"025d530f-e8ed-4984-99bf-9d216bd3adc0\\\",\\r\\n        \\\"name\\\": \\\"samplePromote_01\\\",\\r\\n        \\\"destinationStages\\\": [\\r\\n            \\\"2d9e280a-b529-466c-9ec8-d6b0e93026a8\\\"\\r\\n        ],\\r\\n        \\\"valueSubstitution\\\": [],\\r\\n        \\\"promotedAssets\\\": {\\r\\n            \\\"api\\\": [\\r\\n                \\\"d033acd7-f935-4d92-8042-b152a992b0cd\\\"\\r\\n            ]\\r\\n        },\\r\\n        \\\"creationTime\\\": \\\"2018-08-07 07:33:57 GMT\\\",\\r\\n        \\\"owner\\\": \\\"Administrator\\\",\\r\\n        \\\"status\\\": \\\"Success\\\",\\r\\n        \\\"promotionResults\\\": {\\r\\n            \\\"sampleStage\\\": {\\r\\n                \\\"status\\\": \\\"Success\\\",\\r\\n                \\\"ArchiveResult\\\": [\\r\\n                    {\\r\\n                        \\\"PolicyAction\\\": {\\r\\n                            \\\"name\\\": \\\"Policy Action [Enable HTTP / HTTPS] -> Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                            \\\"id\\\": \\\"b8b508e0-a61d-49f0-9131-a9379dbd7f6e\\\",\\r\\n                            \\\"status\\\": \\\"Success\\\",\\r\\n                            \\\"explanation\\\": \\\"OK\\\",\\r\\n                            \\\"overwritten\\\": true,\\r\\n                            \\\"dependencyFailed\\\": null\\r\\n                        }\\r\\n                    },\\r\\n                    {\\r\\n                        \\\"API\\\": {\\r\\n                            \\\"name\\\": \\\"PetStore on Heroku[1.0.0]\\\",\\r\\n                            \\\"id\\\": \\\"d033acd7-f935-4d92-8042-b152a992b0cd\\\",\\r\\n                            \\\"status\\\": \\\"Success\\\",\\r\\n                            \\\"explanation\\\": \\\"OK\\\",\\r\\n                            \\\"overwritten\\\": true,\\r\\n                            \\\"dependencyFailed\\\": null\\r\\n                        }\\r\\n                    },\\r\\n                    {\\r\\n                        \\\"Policy\\\": {\\r\\n                            \\\"name\\\": \\\"Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                            \\\"id\\\": \\\"629edf16-3a8c-4362-b75c-2a9f9ab27ee0\\\",\\r\\n                            \\\"status\\\": \\\"Success\\\",\\r\\n                            \\\"explanation\\\": \\\"OK\\\",\\r\\n                            \\\"overwritten\\\": true,\\r\\n                            \\\"dependencyFailed\\\": null\\r\\n                        }\\r\\n                    },\\r\\n                    {\\r\\n                        \\\"PolicyAction\\\": {\\r\\n                            \\\"name\\\": \\\"Policy Action [Straight Through Routing] -> Policy For API PetStore on Heroku[1.0.0]\\\",\\r\\n                            \\\"id\\\": \\\"e50eba2b-6f54-4585-9dac-25b20543bf82\\\",\\r\\n                            \\\"status\\\": \\\"Success\\\",\\r\\n                            \\\"explanation\\\": \\\"OK\\\",\\r\\n                            \\\"overwritten\\\": true,\\r\\n                            \\\"dependencyFailed\\\": null\\r\\n                        }\\r\\n                    }\\r\\n                ]\\r\\n            }\\r\\n        },\\r\\n        \\\"includeApis\\\": false,\\r\\n        \\\"includeApplications\\\": false,\\r\\n        \\\"includeSubscriptions\\\": false\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/promotion/:promotionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion",
														":promotionId"
													],
													"variable": [
														{
															"key": "promotionId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the promotionId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/promotion/:promotionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"promotion",
														":promotionId"
													],
													"variable": [
														{
															"key": "promotionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Rollback",
							"item": [
								{
									"name": "Get Rollback details by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/rollback/:rollbackId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"rollback",
												":rollbackId"
											],
											"variable": [
												{
													"key": "rollbackId",
													"value": "673971cc-38a5-4767-b840-7ead98742c27",
													"description": "(Required) Rollback Id for the rollback to be retrieved"
												}
											]
										},
										"description": "Retrieve a rollback based on the rollback id."
									},
									"response": [
										{
											"name": "This status code indicates that the rollbackId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback/:rollbackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback",
														":rollbackId"
													],
													"variable": [
														{
															"key": "rollbackId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the rollback based on the rollbackId.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback/:rollbackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback",
														":rollbackId"
													],
													"variable": [
														{
															"key": "rollbackId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"rollback\\\": \\r\\n        {\\r\\n            \\\"id\\\": \\\"01faa8db-1213-44c3-9b4a-cda173f00b4a\\\",\\r\\n            \\\"name\\\": \\\"testP3\\\",\\r\\n            \\\"status\\\": \\\"Success\\\",\\r\\n            \\\"promotionTime\\\": \\\"2018-12-04 09:08:31 GMT\\\",\\r\\n            \\\"lastRollbackTime\\\": \\\"2018-12-04 09:18:27 GMT\\\"\\r\\n        }\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback/:rollbackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback",
														":rollbackId"
													],
													"variable": [
														{
															"key": "rollbackId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Do Rollback",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/rollback/:rollbackId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"rollback",
												":rollbackId"
											],
											"variable": [
												{
													"key": "rollbackId",
													"value": "673971cc-38a5-4767-b840-7ead98742c27",
													"description": "(Required) Rollback Id for the promotion to be rollbacked"
												}
											]
										},
										"description": "This REST operation is used to rollback the assets to the previous state i.e the state prior to promotion. Rollback should be initiated from the local gateway instance."
									},
									"response": [
										{
											"name": "Returns the rollback object",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback/:rollbackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback",
														":rollbackId"
													],
													"variable": [
														{
															"key": "rollbackId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"rollback\\\": \\r\\n        {\\r\\n            \\\"id\\\": \\\"01faa8db-1213-44c3-9b4a-cda173f00b4a\\\",\\r\\n            \\\"name\\\": \\\"testP3\\\",\\r\\n            \\\"status\\\": \\\"Success\\\",\\r\\n            \\\"promotionTime\\\": \\\"2018-12-04 09:08:31 GMT\\\",\\r\\n            \\\"lastRollbackTime\\\": \\\"2018-12-04 09:18:27 GMT\\\"\\r\\n        }\\r\\n}\""
										},
										{
											"name": "This status code indicates that the rollbackId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback/:rollbackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback",
														":rollbackId"
													],
													"variable": [
														{
															"key": "rollbackId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback/:rollbackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback",
														":rollbackId"
													],
													"variable": [
														{
															"key": "rollbackId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Rollback",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/rollback/:rollbackId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"rollback",
												":rollbackId"
											],
											"variable": [
												{
													"key": "rollbackId",
													"value": "673971cc-38a5-4767-b840-7ead98742c27",
													"description": "(Required) Rollback Id for the rollback to be deleted"
												}
											]
										},
										"description": "Delete the rollback"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback/:rollbackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback",
														":rollbackId"
													],
													"variable": [
														{
															"key": "rollbackId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback/:rollbackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback",
														":rollbackId"
													],
													"variable": [
														{
															"key": "rollbackId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the rollbackId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback/:rollbackId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback",
														":rollbackId"
													],
													"variable": [
														{
															"key": "rollbackId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get All Rollbacks",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/rollback",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"rollback"
											]
										},
										"description": "This REST operation is used to retrieve the list of possible rollbacks a user can do from the local (target) API Gateway instance. Each rollback entry was created when a promotion of assets to the local (target) API Gateway instance from another stage"
									},
									"response": [
										{
											"name": "Returns the list of all rollbacks",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"rollback\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"b3c038d6-84a8-4b35-93af-21ab4151c1d4\\\",\\r\\n            \\\"name\\\": \\\"testP2\\\",\\r\\n            \\\"description\\\": \\\"\\\",\\r\\n\\t\\t\\t\\\"promotionTime\\\": \\\"2018-12-04 09:07:43 GMT\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"01faa8db-1213-44c3-9b4a-cda173f00b4a\\\",\\r\\n            \\\"name\\\": \\\"testP3\\\",\\r\\n            \\\"status\\\": \\\"Success\\\",\\r\\n            \\\"promotionTime\\\": \\\"2018-12-04 09:08:31 GMT\\\",\\r\\n            \\\"lastRollbackTime\\\": \\\"2018-12-04 09:18:27 GMT\\\"\\r\\n        }\\r\\n    ]\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rollback",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rollback"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Search Service",
					"item": [
						{
							"name": "Search by Type",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"types\": [\"api\"],\r\n    \"condition\": \"and\",\r\n    \"scope\": [{\r\n        \"attributeName\": \"apiName\",\r\n        \"keyword\": \".*\"\r\n    }],\r\n    \"responseFields\": [\"apiName\", \"apiVersion\", \"apiDescription\",\r\n        \"id\", \"type\", \"isActive\", \"systemVersion\", \"publishedPortals\", \"publishedToRegistry\", \"provider\", \"centraSiteURL\", \"apiDefinition.isRESTInvokeEnabled\", \"apiDefinition.type\"],\r\n    \"from\": 0,\r\n    \"size\": 10,\r\n    \"sortByField\": \"apiName\",\r\n    \"sortOrder\": \"ASC\"\r\n}"
								},
								"url": {
									"raw": "{{baseURL}}/search",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search"
									]
								},
								"description": "The search API allows you to execute a search query in API Gateway and get back search results that match the query. You can perform search across different objects such as API, Application, Alias, Assertions, Policies, Administrator Settings, Policy Action, Packages, Plans, Subscriptions, Users and User Groups. Following are the type of searches that does not require scope or fields. \n 1. Users - This type is used to get the list of users from IS. \n 2. User Groups - This type is used to get the list of user groups from IS. \n\n Following are the type of searches for which you can specify the  scope and fields. \n 1. API - This type is used to search the APIs in API Gateway. \n 2. Application - This type is used to search the Applications created in API Gateway. \n 3. Alias - This type is used to search aliases created in API Gateway. \n 4. Assertions - This type is used to search custom assertions created in API Gateway. \n 5. Policy - This type is used to search policies in API Gateway. \n 6. Policy Action - This type is used to search policy actions in API Gateway. \n 7. Package - This type is used to search packages in API Gateway. \n 8. Plan - This type is used to search plans in API Gateway. \n 9. Administrator Setting - This type is used to search the administrator settings in API Gateway. \n 10. Subscription - This type is used to search subscriptions in API Gateway. \n \n For the above ten types, if a scope is specified, then the scope is applicable for all types regardless whether it is applicable for that or not. Also if the required fields are specified and it is not available in any other types, then the search result corresponds to that type does not have the fields. \n If from and size are specified then it skips first n records specified in from for all types and it fetches the number of records specified in size.\n\n\nexamples:\n\n1. Fetch All APIs contains run as substring\n\nPayload : { \"types\" : [\"api\"], \"scope\":[ { \"attributeName\" : \"apiName\", \"keyword\" : \".*run.*\" }] }\n\nThe above payload will fetch all APIs contains run as substring in API name. The response will contains APIs with some fields populated with default values. \n\n2. Fetch All APIs contains run as substring and specific set of fields in the response\n\nPayload : { \"types\" : [\"api\"], \"scope\":[ { \"attributeName\" : \"apiName\", \"keyword\" : \".*run.*\" }], \"responseFields\" : [\"apiName\", \"type\", \"isActive\", \"systemVersion\", \"policies\",\"publishedPortals\",\"apiVersion\",\"id\"]}\n\nTo fetch all fields, user can use \"*\" in responseFields. It will fetch all the fields in the response.\n\nPayload : { \"types\" : [\"api\"], \"scope\":[ { \"attributeName\" : \"apiName\", \"keyword\" : \".*run.*\" }], \"responseFields\" : [\"*\"]}\n\n\nThe above payload will fetch all APIs contains run as substring in API name and corresponding fields mentioned in responseFields section.\n\nThe responseFields can be identified from schema definition using below table for some of the main used types\n\nAsset type: API ,Swagger file: APIGatewayServiceManagement.json ,Definition: #/definitions/GatewayAPI\nAsset type: POLICY ,Swagger file: APIGatewayPolicyManagement.json ,Definition: #/definitions/Policy\nAsset type: POLICY_ACTION ,Swagger file: APIGatewayPolicyManagement.json ,Definition: #/definitions/PolicyAction\nAsset type: ALIAS ,Swagger file: APIGatewayAlias.json  ,Definition: #/definitions/Alias\nAsset type: APPLICATION ,Swagger file:APIGatewayApplication.json ,Definition: #/definitions/Application\nAsset type: USERS ,Swagger file: APIGatewayUserManagementSwagger.json ,Definition: #/definitions/User\nAsset type: GROUPS ,Swagger file: APIGatewayUserManagementSwagger.json ,Definition: #/definitions/Group\nAsset type: ACCESSPROFILES ,Swagger file: APIGatewayUserManagementSwagger.json ,Definition: #/definitions/AccessProfile\nAsset type: API_DOCUMENT ,Swagger file: APIGatewayDocumentManagement.json ,Definition: #/definitions/Document\nAsset type: KEYSTORE ,Swagger file: APIGatewayAdministration.json ,Definition: #/definitions/KeyStore\nAsset type: TRUSTSTORE ,Swagger file: APIGatewayAdministration.json ,Definition: #/definitions/TrustStore\n\nFor other types user can use \"*\" in responseFields section to get all the fields.\n"
							},
							"response": [
								{
									"name": "This status code indicates either error occurred during the search process or user has missed some mandatory field that is required to do the search. The examples shows user missed a mandatory field \"condition\" in request body",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Mandatory field condition is missing in the input request body\\\"\\r\\n}\""
								},
								{
									"name": "This status code indicates that the search process is not successful and has failed due to some internal server error.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the search process is successful. The result is a map of type and object. Each type has it's respective search results mapped.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"GROUP\\\": [\\\"API-Gateway-Administrators\\\",\\r\\n\\t\\\"API-Gateway-Providers\\\",\\r\\n\\t\\\"Administrators\\\",\\r\\n\\t\\\"Anonymous\\\",\\r\\n\\t\\\"Developers\\\",\\r\\n\\t\\\"Everybody\\\",\\r\\n\\t\\\"Replicators\\\"],\\r\\n\\t\\\"POLICY\\\": [{\\r\\n\\t\\t\\\"id\\\": \\\"GlobalLogInvocationPolicy\\\",\\r\\n\\t\\t\\\"names\\\": [{\\r\\n\\t\\t\\t\\\"value\\\": \\\"Transaction logging\\\",\\r\\n\\t\\t\\t\\\"locale\\\": \\\"English\\\"\\r\\n\\t\\t}],\\r\\n\\t\\t\\\"policyEnforcements\\\": [],\\r\\n\\t\\t\\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n\\t\\t\\\"global\\\": false,\\r\\n\\t\\t\\\"active\\\": false,\\r\\n\\t\\t\\\"systemPolicy\\\": false\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"id\\\": \\\"3808db1a-8577-41e5-af6b-dcdac470524c\\\",\\r\\n\\t\\t\\\"names\\\": [{\\r\\n\\t\\t\\t\\\"value\\\": \\\"Transport Policy\\\",\\r\\n\\t\\t\\t\\\"locale\\\": \\\"English\\\"\\r\\n\\t\\t}],\\r\\n\\t\\t\\\"policyEnforcements\\\": [],\\r\\n\\t\\t\\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n\\t\\t\\\"global\\\": false,\\r\\n\\t\\t\\\"active\\\": false,\\r\\n\\t\\t\\\"systemPolicy\\\": false\\r\\n\\t}],\\r\\n\\t\\\"ALIAS\\\": [{\\r\\n\\t\\t\\\"name\\\": \\\"Myname\\\",\\r\\n\\t\\t\\\"value\\\": \\\"API Gateway N\\\"\\r\\n\\t}],\\r\\n\\t\\\"APPLICATION\\\": [{\\r\\n\\t\\t\\\"name\\\": \\\"Application\\\",\\r\\n\\t\\t\\\"owner\\\": \\\"Administrator\\\",\\r\\n\\t\\t\\\"identifiers\\\": [],\\r\\n\\t\\t\\\"siteURLs\\\": [],\\r\\n\\t\\t\\\"subscription\\\": false\\r\\n\\t}],\\r\\n\\t\\\"API\\\": [{\\r\\n\\t\\t\\\"apiName\\\": \\\"API Gateway\\\",\\r\\n\\t\\t\\\"isActive\\\": false,\\r\\n\\t\\t\\\"policies\\\": [],\\r\\n\\t\\t\\\"publishedPortals\\\": [],\\r\\n\\t\\t\\\"systemVersion\\\": 1,\\r\\n\\t\\t\\\"id\\\": \\\"1ac48246-80eb-44c8-8901-564e025dbbde\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"apiName\\\": \\\"API Gateway Policy Management\\\",\\r\\n\\t\\t\\\"isActive\\\": false,\\r\\n\\t\\t\\\"owner\\\": \\\"Administrator\\\",\\r\\n\\t\\t\\\"policies\\\": [],\\r\\n\\t\\t\\\"publishedPortals\\\": [],\\r\\n\\t\\t\\\"systemVersion\\\": 1,\\r\\n\\t\\t\\\"id\\\": \\\"7b2166a6-cf3c-4f72-a04b-72c110c302d2\\\"\\r\\n\\t}],\\r\\n\\t\\\"USER\\\": [\\\"Administrator\\\",\\r\\n\\t\\\"Default\\\",\\r\\n\\t\\\"Developer\\\",\\r\\n\\t\\\"Replicator\\\",\\r\\n\\t\\\"apigateway\\\"]\\r\\n}\""
								},
								{
									"name": "This status code indicates that either the user did not provide any user credentials or user does not have API Gateway Administrator or API Gateway provider access rights for search.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Search based on any Fields",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n        \"TRANSACTION_EVENTS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"apiId\",\n            \"keyword\": \"eea29d9c-e6fd-4544-b958-cc63ec2a28e7\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/search",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search"
									]
								},
								"description": "Search query enables you to get different types of events in API Gateway.\n\nOne can search events based on any fields in the events. Previously it was limited to few fields. Now it is enhanced to support all fields.\n\nFields:\n1. API Id\n2. API Name\n3. API Version\n4. Status code\n5. Operation Name\n6. Total time\n7. Total data size\nand so on.\n"
							},
							"response": [
								{
									"name": "This status code indicates either error occurred during the search process or user has missed some mandatory field that is required to do the search. The examples shows user missed a mandatory field \"condition\" in request body",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Mandatory field condition is missing in the input request body\\\"\\r\\n}\""
								},
								{
									"name": "This status code indicates that either the user did not provide any user credentials or user does not have API Gateway Administrator or API Gateway provider access rights for search.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the search process is not successful and has failed due to some internal server error.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the search process is successful. The result is a map of type and object. Each type has it's respective search results mapped.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"GROUP\\\": [\\\"API-Gateway-Administrators\\\",\\r\\n\\t\\\"API-Gateway-Providers\\\",\\r\\n\\t\\\"Administrators\\\",\\r\\n\\t\\\"Anonymous\\\",\\r\\n\\t\\\"Developers\\\",\\r\\n\\t\\\"Everybody\\\",\\r\\n\\t\\\"Replicators\\\"],\\r\\n\\t\\\"POLICY\\\": [{\\r\\n\\t\\t\\\"id\\\": \\\"GlobalLogInvocationPolicy\\\",\\r\\n\\t\\t\\\"names\\\": [{\\r\\n\\t\\t\\t\\\"value\\\": \\\"Transaction logging\\\",\\r\\n\\t\\t\\t\\\"locale\\\": \\\"English\\\"\\r\\n\\t\\t}],\\r\\n\\t\\t\\\"policyEnforcements\\\": [],\\r\\n\\t\\t\\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n\\t\\t\\\"global\\\": false,\\r\\n\\t\\t\\\"active\\\": false,\\r\\n\\t\\t\\\"systemPolicy\\\": false\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"id\\\": \\\"3808db1a-8577-41e5-af6b-dcdac470524c\\\",\\r\\n\\t\\t\\\"names\\\": [{\\r\\n\\t\\t\\t\\\"value\\\": \\\"Transport Policy\\\",\\r\\n\\t\\t\\t\\\"locale\\\": \\\"English\\\"\\r\\n\\t\\t}],\\r\\n\\t\\t\\\"policyEnforcements\\\": [],\\r\\n\\t\\t\\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n\\t\\t\\\"global\\\": false,\\r\\n\\t\\t\\\"active\\\": false,\\r\\n\\t\\t\\\"systemPolicy\\\": false\\r\\n\\t}],\\r\\n\\t\\\"ALIAS\\\": [{\\r\\n\\t\\t\\\"name\\\": \\\"Myname\\\",\\r\\n\\t\\t\\\"value\\\": \\\"API Gateway N\\\"\\r\\n\\t}],\\r\\n\\t\\\"APPLICATION\\\": [{\\r\\n\\t\\t\\\"name\\\": \\\"Application\\\",\\r\\n\\t\\t\\\"owner\\\": \\\"Administrator\\\",\\r\\n\\t\\t\\\"identifiers\\\": [],\\r\\n\\t\\t\\\"siteURLs\\\": [],\\r\\n\\t\\t\\\"subscription\\\": false\\r\\n\\t}],\\r\\n\\t\\\"API\\\": [{\\r\\n\\t\\t\\\"apiName\\\": \\\"API Gateway\\\",\\r\\n\\t\\t\\\"isActive\\\": false,\\r\\n\\t\\t\\\"policies\\\": [],\\r\\n\\t\\t\\\"publishedPortals\\\": [],\\r\\n\\t\\t\\\"systemVersion\\\": 1,\\r\\n\\t\\t\\\"id\\\": \\\"1ac48246-80eb-44c8-8901-564e025dbbde\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"apiName\\\": \\\"API Gateway Policy Management\\\",\\r\\n\\t\\t\\\"isActive\\\": false,\\r\\n\\t\\t\\\"owner\\\": \\\"Administrator\\\",\\r\\n\\t\\t\\\"policies\\\": [],\\r\\n\\t\\t\\\"publishedPortals\\\": [],\\r\\n\\t\\t\\\"systemVersion\\\": 1,\\r\\n\\t\\t\\\"id\\\": \\\"7b2166a6-cf3c-4f72-a04b-72c110c302d2\\\"\\r\\n\\t}],\\r\\n\\t\\\"USER\\\": [\\\"Administrator\\\",\\r\\n\\t\\\"Default\\\",\\r\\n\\t\\\"Developer\\\",\\r\\n\\t\\\"Replicator\\\",\\r\\n\\t\\\"apigateway\\\"]\\r\\n}\""
								}
							]
						},
						{
							"name": "Search based on different events",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n       \"TRANSACTION_EVENTS\", \"LIFECYCLE_EVENTS\", \"POLICYVIOLATION_EVENTS\", \"MONITOR_EVENTS\", \"ERROR_EVENTS\", \"THREATPROTECTION_EVENTS\", \"PERFORMANCE_METRICS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"apiId\",\n            \"keyword\": \"eea29d9c-e6fd-4544-b958-cc63ec2a28e7\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/search",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search"
									]
								},
								"description": "Search query enables you to get different types of events in API Gateway.\n\nOne can search events based on any fields in the events. Previously it was limited to few fields. Now it is enhanced to support all fields.\n\nFields:\n1. API Id\n2. API Name\n3. API Version\n4. Status code\n5. Operation Name\n6. Total time\n7. Total data size\nand so on.\n\nSupported search types:\n1. TRANSACTION_EVENTS\n2. LIFECYCLE_EVENTS\n3. POLICYVIOLATION_EVENTS\n4. MONITOR_EVENTS\n5. ERROR_EVENTS\n6. THREATPROTECTION_EVENTS\n7. PERFORMANCE_METRICS\n"
							},
							"response": [
								{
									"name": "This status code indicates either error occurred during the search process or user has missed some mandatory field that is required to do the search. The examples shows user missed a mandatory field \"condition\" in request body",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Mandatory field condition is missing in the input request body\\\"\\r\\n}\""
								},
								{
									"name": "This status code indicates that either the user did not provide any user credentials or user does not have API Gateway Administrator or API Gateway provider access rights for search.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the search process is successful. The result is a map of type and object. Each type has it's respective search results mapped.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"GROUP\\\": [\\\"API-Gateway-Administrators\\\",\\r\\n\\t\\\"API-Gateway-Providers\\\",\\r\\n\\t\\\"Administrators\\\",\\r\\n\\t\\\"Anonymous\\\",\\r\\n\\t\\\"Developers\\\",\\r\\n\\t\\\"Everybody\\\",\\r\\n\\t\\\"Replicators\\\"],\\r\\n\\t\\\"POLICY\\\": [{\\r\\n\\t\\t\\\"id\\\": \\\"GlobalLogInvocationPolicy\\\",\\r\\n\\t\\t\\\"names\\\": [{\\r\\n\\t\\t\\t\\\"value\\\": \\\"Transaction logging\\\",\\r\\n\\t\\t\\t\\\"locale\\\": \\\"English\\\"\\r\\n\\t\\t}],\\r\\n\\t\\t\\\"policyEnforcements\\\": [],\\r\\n\\t\\t\\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n\\t\\t\\\"global\\\": false,\\r\\n\\t\\t\\\"active\\\": false,\\r\\n\\t\\t\\\"systemPolicy\\\": false\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"id\\\": \\\"3808db1a-8577-41e5-af6b-dcdac470524c\\\",\\r\\n\\t\\t\\\"names\\\": [{\\r\\n\\t\\t\\t\\\"value\\\": \\\"Transport Policy\\\",\\r\\n\\t\\t\\t\\\"locale\\\": \\\"English\\\"\\r\\n\\t\\t}],\\r\\n\\t\\t\\\"policyEnforcements\\\": [],\\r\\n\\t\\t\\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n\\t\\t\\\"global\\\": false,\\r\\n\\t\\t\\\"active\\\": false,\\r\\n\\t\\t\\\"systemPolicy\\\": false\\r\\n\\t}],\\r\\n\\t\\\"ALIAS\\\": [{\\r\\n\\t\\t\\\"name\\\": \\\"Myname\\\",\\r\\n\\t\\t\\\"value\\\": \\\"API Gateway N\\\"\\r\\n\\t}],\\r\\n\\t\\\"APPLICATION\\\": [{\\r\\n\\t\\t\\\"name\\\": \\\"Application\\\",\\r\\n\\t\\t\\\"owner\\\": \\\"Administrator\\\",\\r\\n\\t\\t\\\"identifiers\\\": [],\\r\\n\\t\\t\\\"siteURLs\\\": [],\\r\\n\\t\\t\\\"subscription\\\": false\\r\\n\\t}],\\r\\n\\t\\\"API\\\": [{\\r\\n\\t\\t\\\"apiName\\\": \\\"API Gateway\\\",\\r\\n\\t\\t\\\"isActive\\\": false,\\r\\n\\t\\t\\\"policies\\\": [],\\r\\n\\t\\t\\\"publishedPortals\\\": [],\\r\\n\\t\\t\\\"systemVersion\\\": 1,\\r\\n\\t\\t\\\"id\\\": \\\"1ac48246-80eb-44c8-8901-564e025dbbde\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"apiName\\\": \\\"API Gateway Policy Management\\\",\\r\\n\\t\\t\\\"isActive\\\": false,\\r\\n\\t\\t\\\"owner\\\": \\\"Administrator\\\",\\r\\n\\t\\t\\\"policies\\\": [],\\r\\n\\t\\t\\\"publishedPortals\\\": [],\\r\\n\\t\\t\\\"systemVersion\\\": 1,\\r\\n\\t\\t\\\"id\\\": \\\"7b2166a6-cf3c-4f72-a04b-72c110c302d2\\\"\\r\\n\\t}],\\r\\n\\t\\\"USER\\\": [\\\"Administrator\\\",\\r\\n\\t\\\"Default\\\",\\r\\n\\t\\\"Developer\\\",\\r\\n\\t\\\"Replicator\\\",\\r\\n\\t\\\"apigateway\\\"]\\r\\n}\""
								},
								{
									"name": "This status code indicates that the search process is not successful and has failed due to some internal server error.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Count based on different events",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n       \"TRANSACTION_EVENTS\", \"LIFECYCLE_EVENTS\", \"POLICYVIOLATION_EVENTS\", \"MONITOR_EVENTS\", \"ERROR_EVENTS\", \"THREATPROTECTION_EVENTS\", \"PERFORMANCE_METRICS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"apiId\",\n            \"keyword\": \"eea29d9c-e6fd-4544-b958-cc63ec2a28e7\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/search/_count",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search",
										"_count"
									]
								},
								"description": "Search query enables you to get different types of events in API Gateway.\n\nOne can search events based on any fields in the events. Previously it was limited to few fields. Now it is enhanced to support all fields.\n\nFields:\n1. API Id\n2. API Name\n3. API Version\n4. Status code\n5. Operation Name\n6. Total time\n7. Total data size\nand so on.\n\nSupported search types:\n1. TRANSACTION_EVENTS\n2. LIFECYCLE_EVENTS\n3. POLICYVIOLATION_EVENTS\n4. MONITOR_EVENTS\n5. ERROR_EVENTS\n6. THREATPROTECTION_EVENTS\n7. PERFORMANCE_METRICS\n"
							},
							"response": [
								{
									"name": "This status code indicates that the search process is not successful and has failed due to some internal server error.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that either the user did not provide any user credentials or user does not have API Gateway Administrator or API Gateway provider access rights for search.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates either error occurred during the search process or user has missed some mandatory field that is required to do the search. The examples shows user missed a mandatory field \"condition\" in request body",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Mandatory field condition is missing in the input request body\\\"\\r\\n}\""
								},
								{
									"name": "This status code indicates that the search process is successful. The result is a map of type and object. Each type has it's respective search results mapped.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"GROUP\\\": [\\\"API-Gateway-Administrators\\\",\\r\\n\\t\\\"API-Gateway-Providers\\\",\\r\\n\\t\\\"Administrators\\\",\\r\\n\\t\\\"Anonymous\\\",\\r\\n\\t\\\"Developers\\\",\\r\\n\\t\\\"Everybody\\\",\\r\\n\\t\\\"Replicators\\\"],\\r\\n\\t\\\"POLICY\\\": [{\\r\\n\\t\\t\\\"id\\\": \\\"GlobalLogInvocationPolicy\\\",\\r\\n\\t\\t\\\"names\\\": [{\\r\\n\\t\\t\\t\\\"value\\\": \\\"Transaction logging\\\",\\r\\n\\t\\t\\t\\\"locale\\\": \\\"English\\\"\\r\\n\\t\\t}],\\r\\n\\t\\t\\\"policyEnforcements\\\": [],\\r\\n\\t\\t\\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n\\t\\t\\\"global\\\": false,\\r\\n\\t\\t\\\"active\\\": false,\\r\\n\\t\\t\\\"systemPolicy\\\": false\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"id\\\": \\\"3808db1a-8577-41e5-af6b-dcdac470524c\\\",\\r\\n\\t\\t\\\"names\\\": [{\\r\\n\\t\\t\\t\\\"value\\\": \\\"Transport Policy\\\",\\r\\n\\t\\t\\t\\\"locale\\\": \\\"English\\\"\\r\\n\\t\\t}],\\r\\n\\t\\t\\\"policyEnforcements\\\": [],\\r\\n\\t\\t\\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n\\t\\t\\\"global\\\": false,\\r\\n\\t\\t\\\"active\\\": false,\\r\\n\\t\\t\\\"systemPolicy\\\": false\\r\\n\\t}],\\r\\n\\t\\\"ALIAS\\\": [{\\r\\n\\t\\t\\\"name\\\": \\\"Myname\\\",\\r\\n\\t\\t\\\"value\\\": \\\"API Gateway N\\\"\\r\\n\\t}],\\r\\n\\t\\\"APPLICATION\\\": [{\\r\\n\\t\\t\\\"name\\\": \\\"Application\\\",\\r\\n\\t\\t\\\"owner\\\": \\\"Administrator\\\",\\r\\n\\t\\t\\\"identifiers\\\": [],\\r\\n\\t\\t\\\"siteURLs\\\": [],\\r\\n\\t\\t\\\"subscription\\\": false\\r\\n\\t}],\\r\\n\\t\\\"API\\\": [{\\r\\n\\t\\t\\\"apiName\\\": \\\"API Gateway\\\",\\r\\n\\t\\t\\\"isActive\\\": false,\\r\\n\\t\\t\\\"policies\\\": [],\\r\\n\\t\\t\\\"publishedPortals\\\": [],\\r\\n\\t\\t\\\"systemVersion\\\": 1,\\r\\n\\t\\t\\\"id\\\": \\\"1ac48246-80eb-44c8-8901-564e025dbbde\\\"\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\t\\\"apiName\\\": \\\"API Gateway Policy Management\\\",\\r\\n\\t\\t\\\"isActive\\\": false,\\r\\n\\t\\t\\\"owner\\\": \\\"Administrator\\\",\\r\\n\\t\\t\\\"policies\\\": [],\\r\\n\\t\\t\\\"publishedPortals\\\": [],\\r\\n\\t\\t\\\"systemVersion\\\": 1,\\r\\n\\t\\t\\\"id\\\": \\\"7b2166a6-cf3c-4f72-a04b-72c110c302d2\\\"\\r\\n\\t}],\\r\\n\\t\\\"USER\\\": [\\\"Administrator\\\",\\r\\n\\t\\\"Default\\\",\\r\\n\\t\\\"Developer\\\",\\r\\n\\t\\\"Replicator\\\",\\r\\n\\t\\\"apigateway\\\"]\\r\\n}\""
								}
							]
						},
						{
							"name": "Count by Type",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"types\": [\"application\"],\r\n    \"condition\": \"and\",\r\n    \"scope\": [{\r\n        \"attributeName\": \"name\",\r\n        \"keyword\": \".*\"\r\n    }],\r\n    \"responseFields\": [\"applicationID\",\"name\", \"version\", \"description\",\"accessTokens\",\"owner\",\"isSuspended\", \"authStrategyIds\"],\r\n    \"from\": 0,\r\n    \"size\": 0,\r\n    \"sortByField\": \"name\",\r\n    \"sortOrder\": \"ASC\"\r\n}"
								},
								"url": {
									"raw": "{{baseURL}}/search/_count",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search",
										"_count"
									]
								},
								"description": "This REST call is intent to get the total number of records for the specified scope and types. If the scope is not specified it returns total number of assets for the specified type. Both /search and /search/_count shares the same payload. Except types,scope and condition other attributes are not considered during the REST API call."
							},
							"response": [
								{
									"name": "This status code indicates the count for the specified scope is success. The result will be a map of type and count for each type.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search/_count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"_count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"group\\\":12,\\r\\n\\t\\\"policy\\\":13,\\r\\n\\t\\\"user\\\":4,\\r\\n\\t\\\"api\\\":5\\r\\n}\""
								},
								{
									"name": "This status code indicates the search process is not success and failed due to some internal server error.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search/_count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"_count"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator or API Gateway provider access for search.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search/_count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"_count"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates either error occurred during the search process or user has missed some mandatory field that is required to do the search. The examples shows user missed a mandatory field \"condition\" in request body",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"types\": \"<string>\",\n    \"scope\": {\n        \"attributeName\": \"<string>\",\n        \"keyword\": \"<string>\",\n        \"orTokenKey\": \"<boolean>\",\n        \"rawFieldKey\": \"<string>\"\n    },\n    \"condition\": \"<string>\",\n    \"responseFields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"from\": \"<integer>\",\n    \"size\": \"<integer>\",\n    \"sortByField\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"teamFilter\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/search/_count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"search",
												"_count"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Mandatory field condition is missing in the input request body\\\"\\r\\n}\""
								}
							]
						},
						{
							"name": "Count based on any Fields",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n        \"TRANSACTION_EVENTS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"apiId\",\n            \"keyword\": \"eea29d9c-e6fd-4544-b958-cc63ec2a28e7\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/search/_count",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search",
										"_count"
									]
								},
								"description": "Count query enables you to count total number of different types of events in API Gateway.\r\n\r\nOne can count events based on any fields in the events. Previously it was limited to few fields. Now it is enhanced to support all fields.\r\n\r\nFields:\r\n1. API Id\r\n2. API Name\r\n3. API Version\r\n4. Status code\r\n5. Operation Name\r\n6. Total time\r\n7. Total data size\r\nand so on."
							},
							"response": []
						},
						{
							"name": "Search with selected response field(s)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n        \"TRANSACTION_EVENTS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"apiId\",\n            \"keyword\": \"eea29d9c-e6fd-4544-b958-cc63ec2a28e7\"\n        }\n    ],\n    \"responseFields\": [\n        \"apiId\",\n        \"apiName\",\n        \"applicationName\",\n        \"applicationId\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/search",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search"
									]
								},
								"description": "With this support now the client can dictate what response they want in return from the server."
							},
							"response": []
						},
						{
							"name": "Search with multiple fields",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n        \"TRANSACTION_EVENTS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"apiId\",\n            \"keyword\": \"eea29d9c-e6fd-4544-b958-cc63ec2a28e7\"\n        },\n        {\n            \"attributeName\": \"apiName\",\n            \"keyword\": \"TE.*\"\n        }\n    ],\n    \"condition\": \"OR\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/search",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search"
									]
								},
								"description": "Search events with multiple fields based on condition.\r\n\r\nApplicable condition\r\n1. OR\r\n2. AND"
							},
							"response": []
						},
						{
							"name": "Search with date range",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n        \"TRANSACTION_EVENTS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"creationDate\",\n            \"range\": {\n                \"from\": \"2020-05-01\",\n                \"to\": \"2020-05-31\"\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/search",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search"
									]
								},
								"description": "Search events with date range.\r\n\r\nIf both from and to date provided it will fetch the details within that date.\r\n\r\nIf from date is provided it will take to date as today.\r\n\r\nIf to date is provided it will take from date from the beginning."
							},
							"response": []
						},
						{
							"name": "Search with range",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n        \"TRANSACTION_EVENTS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"totalTime\",\n            \"range\": {\n                \"from\": 1,\n                \"to\": 1000\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/search",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search"
									]
								},
								"description": "Search events with range.\r\n\r\nIf both from and to value is provided it will fetch the details within that range.\r\n\r\nIf from value is provided it will take to value as max.\r\n\r\nIf to value is provided it will take from value as 1."
							},
							"response": []
						},
						{
							"name": "Search with time series",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n        \"TRANSACTION_EVENTS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"creationDate\",\n            \"range\": {\n                \"since\": \"1w\"\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/search/_count",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search",
										"_count"
									]
								},
								"description": "Search events based on time series.\r\n\r\nApplicable values are\r\n1. s - seconds\r\n2. m - minutes\r\n3. h - hours\r\n4. d - days\r\n5. w - weeks"
							},
							"response": []
						},
						{
							"name": "Search and group events based on field(s)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n        \"TRANSACTION_EVENTS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"creationDate\",\n            \"range\": {\n                \"since\": \"4w\"\n            }\n        }\n    ],\n    \"aggregations\": [\n        {\n            \"fields\": \"apiName,apiVersion\",\n            \"type\": \"group\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/search/_aggregations",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search",
										"_aggregations"
									]
								},
								"description": "Search and group events with one or more fields."
							},
							"response": []
						},
						{
							"name": "Search and aggregate based on metrics",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n        \"TRANSACTION_EVENTS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"creationDate\",\n            \"range\": {\n                \"since\": \"4w\"\n            }\n        }\n    ],\n    \"aggregations\": [\n        {\n            \"metricsType\": \"min\",\n            \"fields\": \"totalTime\",\n            \"type\": \"metrics\",\n            \"name\": \"Min Total Time\"\n        },\n        {\n            \"metricsType\": \"max\",\n            \"fields\": \"totalTime\",\n            \"type\": \"metrics\",\n            \"name\": \"Max Total Time\"\n        },\n        {\n            \"metricsType\": \"avg\",\n            \"fields\": \"totalTime\",\n            \"type\": \"metrics\",\n            \"name\": \"Avg Total Time\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/search/_aggregations",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search",
										"_aggregations"
									]
								},
								"description": "Search and aggregate events based on the metrics."
							},
							"response": []
						},
						{
							"name": "Search and aggregate based on timeseries",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"types\": [\n        \"TRANSACTION_EVENTS\"\n    ],\n    \"scope\": [\n        {\n            \"attributeName\": \"creationDate\",\n            \"range\": {\n                \"since\": \"4w\"\n            }\n        }\n    ],\n    \"aggregations\": [\n        {\n            \"interval\": \"month\",\n            \"fields\": \"creationDate\",\n            \"type\": \"timeseries\",\n            \"name\": \"Month Wise Data\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/search/_aggregations",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"search",
										"_aggregations"
									]
								},
								"description": "Search and aggregate events based on the time series data."
							},
							"response": []
						}
					]
				},
				{
					"name": "Service Management",
					"item": [
						{
							"name": "APIs",
							"item": [
								{
									"name": "Versions",
									"item": [
										{
											"name": "Get Versions of API by ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/apis/:apiId/versions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
															"description": "(Required) API Id for the API to retrieve the versions"
														}
													]
												},
												"description": "Retrieve all the versions of the API"
											},
											"response": [
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the apiId specified is not found in the API Gateway",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns the API versions",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"apiResponse\\\": {\\r\\n        \\\"api\\\": {\\r\\n            \\\"apiDefinition\\\": {\\r\\n                \\\"type\\\": \\\"rest\\\",\\r\\n                \\\"info\\\": {\\r\\n                    \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n                    \\\"version\\\": \\\"1.0\\\",\\r\\n                    \\\"title\\\": \\\"ChuckNorrisAPI\\\"\\r\\n                },\\r\\n                \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n                \\\"basePath\\\": \\\"/jokes\\\",\\r\\n                \\\"schemes\\\": [\\r\\n                    \\\"https\\\"\\r\\n                ],\\r\\n                \\\"security\\\": [],\\r\\n                \\\"paths\\\": {\\r\\n                    \\\"/random\\\": {\\r\\n                        \\\"get\\\": {\\r\\n                            \\\"summary\\\": \\\"GET\\\",\\r\\n                            \\\"description\\\": \\\"\\\",\\r\\n                            \\\"operationId\\\": \\\"GET\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {},\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"enabled\\\": true\\r\\n                    }\\r\\n                },\\r\\n                \\\"securityDefinitions\\\": {},\\r\\n                \\\"definitions\\\": {},\\r\\n                \\\"baseUriParameters\\\": [],\\r\\n                \\\"externalDocs\\\": [],\\r\\n                \\\"servers\\\": [\\r\\n                    {\\r\\n                        \\\"url\\\": \\\"https://api.chucknorris.io/jokes\\\"\\r\\n                    }\\r\\n                ],\\r\\n                \\\"components\\\": {\\r\\n                    \\\"schemas\\\": {}\\r\\n                }\\r\\n            },\\r\\n            \\\"nativeEndpoint\\\": [\\r\\n                {\\r\\n                    \\\"passSecurityHeaders\\\": true,\\r\\n                    \\\"uri\\\": \\\"https://api.chucknorris.io/jokes\\\",\\r\\n                    \\\"connectionTimeoutDuration\\\": 0,\\r\\n                    \\\"alias\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"apiName\\\": \\\"ChuckNorris\\\",\\r\\n            \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n            \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n            \\\"maturityState\\\": \\\"Beta\\\",\\r\\n            \\\"isActive\\\": false,\\r\\n            \\\"type\\\": \\\"REST\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"policies\\\": [\\r\\n                \\\"08afbfa9-78e1-4c23-bb19-c0012464047e\\\"\\r\\n            ],\\r\\n            \\\"scopes\\\": [],\\r\\n            \\\"publishedPortals\\\": [],\\r\\n            \\\"creationDate\\\": \\\"2018-09-03 11:56:21 GMT\\\",\\r\\n            \\\"systemVersion\\\": 1,\\r\\n            \\\"id\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n        },\\r\\n        \\\"responseStatus\\\": \\\"SUCCESS\\\",\\r\\n        \\\"versions\\\": [\\r\\n            {\\r\\n                \\\"versionNumber\\\": \\\"1.0\\\",\\r\\n                \\\"apiId\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n            }\\r\\n        ]\\r\\n    }\\r\\n}\""
												}
											]
										},
										{
											"name": "Create Version",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"newApiVersion\": \"2.0\",\n    \"retainApplications\": \"true\"\n}"
												},
												"url": {
													"raw": "{{baseURL}}/apis/:apiId/versions",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"apis",
														":apiId",
														"versions"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
															"description": "(Required) API Id for the API to be versioned"
														}
													]
												},
												"description": "Create a new version of an API and retain applications if required"
											},
											"response": [
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"newApiVersion\": \"<string>\",\n    \"retainApplications\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"newApiVersion\": \"<string>\",\n    \"retainApplications\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code returns when the specified api is not the latest version or if the newApiVersion is empty",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"newApiVersion\": \"<string>\",\n    \"retainApplications\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Return the newly created version of the API",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"newApiVersion\": \"<string>\",\n    \"retainApplications\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"versions"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"apiResponse\\\": {\\r\\n        \\\"api\\\": {\\r\\n            \\\"apiDefinition\\\": {\\r\\n                \\\"type\\\": \\\"rest\\\",\\r\\n                \\\"info\\\": {\\r\\n                    \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n                    \\\"version\\\": \\\"1.0\\\",\\r\\n                    \\\"title\\\": \\\"ChuckNorrisAPI\\\"\\r\\n                },\\r\\n                \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n                \\\"basePath\\\": \\\"/jokes\\\",\\r\\n                \\\"schemes\\\": [\\r\\n                    \\\"https\\\"\\r\\n                ],\\r\\n                \\\"security\\\": [],\\r\\n                \\\"paths\\\": {\\r\\n                    \\\"/random\\\": {\\r\\n                        \\\"get\\\": {\\r\\n                            \\\"summary\\\": \\\"GET\\\",\\r\\n                            \\\"description\\\": \\\"\\\",\\r\\n                            \\\"operationId\\\": \\\"GET\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {},\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"enabled\\\": true\\r\\n                    }\\r\\n                },\\r\\n                \\\"securityDefinitions\\\": {},\\r\\n                \\\"definitions\\\": {},\\r\\n                \\\"baseUriParameters\\\": [],\\r\\n                \\\"externalDocs\\\": [],\\r\\n                \\\"servers\\\": [\\r\\n                    {\\r\\n                        \\\"url\\\": \\\"https://api.chucknorris.io/jokes\\\"\\r\\n                    }\\r\\n                ],\\r\\n                \\\"components\\\": {\\r\\n                    \\\"schemas\\\": {}\\r\\n                }\\r\\n            },\\r\\n            \\\"nativeEndpoint\\\": [\\r\\n                {\\r\\n                    \\\"passSecurityHeaders\\\": true,\\r\\n                    \\\"uri\\\": \\\"https://api.chucknorris.io/jokes\\\",\\r\\n                    \\\"connectionTimeoutDuration\\\": 0,\\r\\n                    \\\"alias\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"apiName\\\": \\\"ChuckNorris\\\",\\r\\n            \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n            \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n            \\\"maturityState\\\": \\\"Beta\\\",\\r\\n            \\\"isActive\\\": false,\\r\\n            \\\"type\\\": \\\"REST\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"policies\\\": [\\r\\n                \\\"08afbfa9-78e1-4c23-bb19-c0012464047e\\\"\\r\\n            ],\\r\\n            \\\"scopes\\\": [],\\r\\n            \\\"publishedPortals\\\": [],\\r\\n            \\\"creationDate\\\": \\\"2018-09-03 11:56:21 GMT\\\",\\r\\n            \\\"systemVersion\\\": 1,\\r\\n            \\\"id\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n        },\\r\\n        \\\"responseStatus\\\": \\\"SUCCESS\\\",\\r\\n        \\\"versions\\\": [\\r\\n            {\\r\\n                \\\"versionNumber\\\": \\\"1.0\\\",\\r\\n                \\\"apiId\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n            }\\r\\n        ]\\r\\n    }\\r\\n}\""
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Mocking",
									"item": [
										{
											"name": "Enable API Mocking",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/apis/:apiId/mock/enable?retainDefaultMockResponses=false",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"apis",
														":apiId",
														"mock",
														"enable"
													],
													"query": [
														{
															"key": "retainDefaultMockResponses",
															"value": "false",
															"description": "Flag to retain generated mocked responses. When this is set to true, default mocked responses will be retained. If it's set to false, new default mocked responses will be generated using the examples, schema in the API"
														}
													],
													"variable": [
														{
															"key": "apiId",
															"value": "3c575e49-73d5-4ae8-a3a5-552544e5a4a0",
															"description": "(Required) API Id for the API to be activated"
														}
													]
												},
												"description": "In API Gateway, you can mock an API implementation. API Gateway lets you mock an API by simulating the native service. API Mocking is useful feature in API first approach, where in the provider may choose to expose the mocked API to the consumers when the actual API doesn't exist or isn't complete. \n In API Gateway, when you enable mocking for an API, a default mock response is created for each combination of resource, operation, status code and content-type based on the example and schema set in the API definition. As an API Provider, you can add or modify the default mock responses.\n\nYou can specify conditions at the operation level and configure IS services at the API level for a mocked API in the update API operation. At runtime, when the mocked API is invoked instead of calling the native service, API Gateway returns the mocked response to the consumer based on the below priorities:\n1. If any of the conditions for the invoked operation satisfies, API Gateway returns the associated mocked response.\n2. If no condition is specified or none of the condition for the invoked operation is satisfied, then API Gateway will return \na. the response from an IS service, if an IS service is configured b. default mocked response, if no IS services are configured"
											},
											"response": [
												{
													"name": "This status code shows when the API is already in activated state or when invalid json or xml is provided in the example part of the operation",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/mock/enable?retainDefaultMockResponses=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"mock",
																"enable"
															],
															"query": [
																{
																	"key": "retainDefaultMockResponses",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/mock/enable?retainDefaultMockResponses=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"mock",
																"enable"
															],
															"query": [
																{
																	"key": "retainDefaultMockResponses",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the apiId specified is not found in the API Gateway",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/mock/enable?retainDefaultMockResponses=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"mock",
																"enable"
															],
															"query": [
																{
																	"key": "retainDefaultMockResponses",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns the API object after successfully enabling mocking of an API",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/mock/enable?retainDefaultMockResponses=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"mock",
																"enable"
															],
															"query": [
																{
																	"key": "retainDefaultMockResponses",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"apiResponse\\\": {\\r\\n        \\\"api\\\": {\\r\\n            \\\"apiDefinition\\\": {\\r\\n                \\\"type\\\": \\\"rest\\\",\\r\\n                \\\"info\\\": {\\r\\n                    \\\"description\\\": \\\"API to demonstrate mocking functionality in international developers day\\\",\\r\\n                    \\\"version\\\": \\\"v1\\\",\\r\\n                    \\\"title\\\": \\\"API_MOCKING\\\"\\r\\n                },\\r\\n                \\\"host\\\": \\\"localhost\\\",\\r\\n                \\\"schemes\\\": [\\r\\n                    \\\"http\\\"\\r\\n                ],\\r\\n                \\\"consumes\\\": [\\r\\n                    \\\"application/json\\\"\\r\\n                ],\\r\\n                \\\"security\\\": [],\\r\\n                \\\"paths\\\": {\\r\\n                    \\\"/conditionBasedMockedResponse\\\": {\\r\\n                        \\\"post\\\": {\\r\\n                            \\\"summary\\\": \\\"Configure condition and mocked response\\\",\\r\\n                            \\\"operationId\\\": \\\"conditionBasedMockedResponse\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"text/plain\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"description\\\": \\\"200 response\\\",\\r\\n                                    \\\"content\\\": {\\r\\n                                        \\\"text/plain\\\": {\\r\\n                                            \\\"example\\\": \\\"No condition evaluates to true. \\\\nSo API-Gateway sent this default response.\\\"\\r\\n                                        }\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"mockedResponses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"responseBody\\\": {\\r\\n                                        \\\"text/plain\\\": \\\"No condition evaluates to true. \\\\nSo API-Gateway sent this default response.\\\"\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"parameters\\\": [],\\r\\n                        \\\"displayName\\\": \\\"/conditionBasedMockedResponse\\\",\\r\\n                        \\\"enabled\\\": true\\r\\n                    },\\r\\n                    \\\"/customESBMockedResponse\\\": {\\r\\n                        \\\"post\\\": {\\r\\n                            \\\"summary\\\": \\\"Configure custom ESB mocked response\\\",\\r\\n                            \\\"operationId\\\": \\\"customESBMockedResponse\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"description\\\": \\\"200 response\\\"\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"mockedResponses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"responseBody\\\": {\\r\\n                                        \\\"application/json\\\": \\\"\\\"\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"parameters\\\": [],\\r\\n                        \\\"displayName\\\": \\\"/customESBMockedResponse\\\",\\r\\n                        \\\"enabled\\\": true\\r\\n                    },\\r\\n                    \\\"/dynamicMockedResponse\\\": {\\r\\n                        \\\"post\\\": {\\r\\n                            \\\"summary\\\": \\\"Dynamic mocked response set\\\",\\r\\n                            \\\"operationId\\\": \\\"dynamicMockedResponse\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"description\\\": \\\"200 response\\\"\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"mockedResponses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"responseBody\\\": {\\r\\n                                        \\\"application/json\\\": \\\"\\\"\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"parameters\\\": [],\\r\\n                        \\\"displayName\\\": \\\"/dynamicMockedResponse\\\",\\r\\n                        \\\"enabled\\\": true\\r\\n                    },\\r\\n                    \\\"/staticMockedResponse\\\": {\\r\\n                        \\\"post\\\": {\\r\\n                            \\\"summary\\\": \\\"Default mocked response from example\\\",\\r\\n                            \\\"operationId\\\": \\\"generateFromExample\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\",\\r\\n                                \\\"application/xml\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"description\\\": \\\"200 response generated from example\\\",\\r\\n                                    \\\"content\\\": {\\r\\n                                        \\\"application/json\\\": {\\r\\n                                            \\\"example\\\": \\\"{\\\\\\\"resource\\\\\\\" : \\\\\\\"/generateFromExample\\\\\\\",\\\\\\\"description\\\\\\\" : \\\\\\\"Default mocked response from example for status code 200\\\\\\\"}\\\"\\r\\n                                        },\\r\\n                                        \\\"application/xml\\\": {\\r\\n                                            \\\"example\\\": \\\"<root><resource>/generateFromExample</resource><description>Default mocked response from example for status code 200</description></root>\\\"\\r\\n                                        }\\r\\n                                    }\\r\\n                                },\\r\\n                                \\\"201\\\": {\\r\\n                                    \\\"description\\\": \\\"201 response generated from schema\\\",\\r\\n                                    \\\"content\\\": {\\r\\n                                        \\\"application/json\\\": {\\r\\n                                            \\\"schema\\\": {\\r\\n                                                \\\"$ref\\\": \\\"#/components/schemas/Pet\\\"\\r\\n                                            }\\r\\n                                        },\\r\\n                                        \\\"application/xml\\\": {\\r\\n                                            \\\"schema\\\": {\\r\\n                                                \\\"$ref\\\": \\\"#/components/schemas/Pet\\\"\\r\\n                                            }\\r\\n                                        }\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"mockedResponses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"responseBody\\\": {\\r\\n                                        \\\"application/json\\\": \\\"{\\\\\\\"resource\\\\\\\" : \\\\\\\"/generateFromExample\\\\\\\",\\\\\\\"description\\\\\\\" : \\\\\\\"Default mocked response from example for status code 200\\\\\\\"}\\\",\\r\\n                                        \\\"application/xml\\\": \\\"<root><resource>/generateFromExample</resource><description>Default mocked response from example for status code 200</description></root>\\\"\\r\\n                                    }\\r\\n                                },\\r\\n                                \\\"201\\\": {\\r\\n                                    \\\"responseBody\\\": {\\r\\n                                        \\\"application/json\\\": \\\"{\\\\\\\"birthday\\\\\\\":2059397944,\\\\\\\"name\\\\\\\":\\\\\\\"\\\\\\\"}\\\",\\r\\n                                        \\\"application/xml\\\": \\\"<birthday>921604684</birthday><name/>\\\"\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"parameters\\\": [],\\r\\n                        \\\"displayName\\\": \\\"/staticMockedResponse\\\",\\r\\n                        \\\"enabled\\\": true\\r\\n                    }\\r\\n                },\\r\\n                \\\"securityDefinitions\\\": {},\\r\\n                \\\"definitions\\\": {},\\r\\n                \\\"baseUriParameters\\\": [],\\r\\n                \\\"externalDocs\\\": [],\\r\\n                \\\"servers\\\": [\\r\\n                    {\\r\\n                        \\\"url\\\": \\\"http://localhost\\\"\\r\\n                    }\\r\\n                ],\\r\\n                \\\"components\\\": {\\r\\n                    \\\"schemas\\\": {\\r\\n                        \\\"Pet\\\": {\\r\\n                            \\\"required\\\": [\\r\\n                                \\\"name\\\"\\r\\n                            ],\\r\\n                            \\\"type\\\": \\\"object\\\",\\r\\n                            \\\"properties\\\": {\\r\\n                                \\\"birthday\\\": {\\r\\n                                    \\\"type\\\": \\\"integer\\\",\\r\\n                                    \\\"format\\\": \\\"int32\\\"\\r\\n                                },\\r\\n                                \\\"name\\\": {\\r\\n                                    \\\"type\\\": \\\"string\\\"\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            },\\r\\n            \\\"nativeEndpoint\\\": [\\r\\n                {\\r\\n                    \\\"passSecurityHeaders\\\": true,\\r\\n                    \\\"uri\\\": \\\"http://localhost\\\",\\r\\n                    \\\"connectionTimeoutDuration\\\": 0,\\r\\n                    \\\"alias\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"apiName\\\": \\\"APIMocking\\\",\\r\\n            \\\"apiVersion\\\": \\\"v1\\\",\\r\\n            \\\"apiDescription\\\": \\\"API to demonstrate mocking functionality in international developers day\\\",\\r\\n            \\\"maturityState\\\": \\\"Beta\\\",\\r\\n            \\\"isActive\\\": false,\\r\\n            \\\"type\\\": \\\"REST\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"policies\\\": [\\r\\n                \\\"19773e29-2838-4efc-aa04-793b48f4d22b\\\"\\r\\n            ],\\r\\n            \\\"scopes\\\": [],\\r\\n            \\\"publishedPortals\\\": [],\\r\\n            \\\"creationDate\\\": \\\"2018-11-01 13:44:58 GMT\\\",\\r\\n            \\\"systemVersion\\\": 1,\\r\\n            \\\"mockService\\\": {\\r\\n                \\\"enableMock\\\": true\\r\\n            },\\r\\n            \\\"id\\\": \\\"afd8eb5e-bba8-447b-8e28-76aac23ba074\\\"\\r\\n        },\\r\\n        \\\"responseStatus\\\": \\\"SUCCESS\\\",\\r\\n        \\\"versions\\\": [\\r\\n            {\\r\\n                \\\"versionNumber\\\": \\\"v1\\\",\\r\\n                \\\"apiId\\\": \\\"afd8eb5e-bba8-447b-8e28-76aac23ba074\\\"\\r\\n            }\\r\\n        ]\\r\\n    }\\r\\n}\""
												}
											]
										},
										{
											"name": "Disable API Mocking",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/apis/:apiId/mock/disable",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"apis",
														":apiId",
														"mock",
														"disable"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "3c575e49-73d5-4ae8-a3a5-552544e5a4a0",
															"description": "(Required) API Id for the API to be deactivated"
														}
													]
												},
												"description": "Once API is disabled from mocking capability, at runtime all the API invocations are redirected to the native service instead of sending the mocked response"
											},
											"response": [
												{
													"name": "Returns the API object after successful disabling mocking of an API",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/mock/disable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"mock",
																"disable"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n    \\\"apiResponse\\\": {\\r\\n        \\\"api\\\": {\\r\\n            \\\"apiDefinition\\\": {\\r\\n                \\\"type\\\": \\\"rest\\\",\\r\\n                \\\"info\\\": {\\r\\n                    \\\"description\\\": \\\"API to demonstrate mocking functionality in international developers day\\\",\\r\\n                    \\\"version\\\": \\\"v1\\\",\\r\\n                    \\\"title\\\": \\\"API_MOCKING\\\"\\r\\n                },\\r\\n                \\\"host\\\": \\\"localhost\\\",\\r\\n                \\\"schemes\\\": [\\r\\n                    \\\"http\\\"\\r\\n                ],\\r\\n                \\\"consumes\\\": [\\r\\n                    \\\"application/json\\\"\\r\\n                ],\\r\\n                \\\"security\\\": [],\\r\\n                \\\"paths\\\": {\\r\\n                    \\\"/conditionBasedMockedResponse\\\": {\\r\\n                        \\\"post\\\": {\\r\\n                            \\\"summary\\\": \\\"Configure condition and mocked response\\\",\\r\\n                            \\\"operationId\\\": \\\"conditionBasedMockedResponse\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"text/plain\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"description\\\": \\\"200 response\\\",\\r\\n                                    \\\"content\\\": {\\r\\n                                        \\\"text/plain\\\": {\\r\\n                                            \\\"example\\\": \\\"No condition evaluates to true. \\\\nSo API-Gateway sent this default response.\\\"\\r\\n                                        }\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"mockedResponses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"responseBody\\\": {\\r\\n                                        \\\"text/plain\\\": \\\"No condition evaluates to true. \\\\nSo API-Gateway sent this default response.\\\"\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"parameters\\\": [],\\r\\n                        \\\"displayName\\\": \\\"/conditionBasedMockedResponse\\\",\\r\\n                        \\\"enabled\\\": true\\r\\n                    },\\r\\n                    \\\"/customESBMockedResponse\\\": {\\r\\n                        \\\"post\\\": {\\r\\n                            \\\"summary\\\": \\\"Configure custom ESB mocked response\\\",\\r\\n                            \\\"operationId\\\": \\\"customESBMockedResponse\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"description\\\": \\\"200 response\\\"\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"mockedResponses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"responseBody\\\": {\\r\\n                                        \\\"application/json\\\": \\\"\\\"\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"parameters\\\": [],\\r\\n                        \\\"displayName\\\": \\\"/customESBMockedResponse\\\",\\r\\n                        \\\"enabled\\\": true\\r\\n                    },\\r\\n                    \\\"/dynamicMockedResponse\\\": {\\r\\n                        \\\"post\\\": {\\r\\n                            \\\"summary\\\": \\\"Dynamic mocked response set\\\",\\r\\n                            \\\"operationId\\\": \\\"dynamicMockedResponse\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"description\\\": \\\"200 response\\\"\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"mockedResponses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"responseBody\\\": {\\r\\n                                        \\\"application/json\\\": \\\"\\\"\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"parameters\\\": [],\\r\\n                        \\\"displayName\\\": \\\"/dynamicMockedResponse\\\",\\r\\n                        \\\"enabled\\\": true\\r\\n                    },\\r\\n                    \\\"/staticMockedResponse\\\": {\\r\\n                        \\\"post\\\": {\\r\\n                            \\\"summary\\\": \\\"Default mocked response from example\\\",\\r\\n                            \\\"operationId\\\": \\\"generateFromExample\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\",\\r\\n                                \\\"application/xml\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"description\\\": \\\"200 response generated from example\\\",\\r\\n                                    \\\"content\\\": {\\r\\n                                        \\\"application/json\\\": {\\r\\n                                            \\\"example\\\": \\\"{\\\\\\\"resource\\\\\\\" : \\\\\\\"/generateFromExample\\\\\\\",\\\\\\\"description\\\\\\\" : \\\\\\\"Default mocked response from example for status code 200\\\\\\\"}\\\"\\r\\n                                        },\\r\\n                                        \\\"application/xml\\\": {\\r\\n                                            \\\"example\\\": \\\"<root><resource>/generateFromExample</resource><description>Default mocked response from example for status code 200</description></root>\\\"\\r\\n                                        }\\r\\n                                    }\\r\\n                                },\\r\\n                                \\\"201\\\": {\\r\\n                                    \\\"description\\\": \\\"201 response generated from schema\\\",\\r\\n                                    \\\"content\\\": {\\r\\n                                        \\\"application/json\\\": {\\r\\n                                            \\\"schema\\\": {\\r\\n                                                \\\"$ref\\\": \\\"#/components/schemas/Pet\\\"\\r\\n                                            }\\r\\n                                        },\\r\\n                                        \\\"application/xml\\\": {\\r\\n                                            \\\"schema\\\": {\\r\\n                                                \\\"$ref\\\": \\\"#/components/schemas/Pet\\\"\\r\\n                                            }\\r\\n                                        }\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"mockedResponses\\\": {\\r\\n                                \\\"200\\\": {\\r\\n                                    \\\"responseBody\\\": {\\r\\n                                        \\\"application/json\\\": \\\"{\\\\\\\"resource\\\\\\\" : \\\\\\\"/generateFromExample\\\\\\\",\\\\\\\"description\\\\\\\" : \\\\\\\"Default mocked response from example for status code 200\\\\\\\"}\\\",\\r\\n                                        \\\"application/xml\\\": \\\"<root><resource>/generateFromExample</resource><description>Default mocked response from example for status code 200</description></root>\\\"\\r\\n                                    }\\r\\n                                },\\r\\n                                \\\"201\\\": {\\r\\n                                    \\\"responseBody\\\": {\\r\\n                                        \\\"application/json\\\": \\\"{\\\\\\\"birthday\\\\\\\":2059397944,\\\\\\\"name\\\\\\\":\\\\\\\"\\\\\\\"}\\\",\\r\\n                                        \\\"application/xml\\\": \\\"<birthday>921604684</birthday><name/>\\\"\\r\\n                                    }\\r\\n                                }\\r\\n                            },\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"parameters\\\": [],\\r\\n                        \\\"displayName\\\": \\\"/staticMockedResponse\\\",\\r\\n                        \\\"enabled\\\": true\\r\\n                    }\\r\\n                },\\r\\n                \\\"securityDefinitions\\\": {},\\r\\n                \\\"definitions\\\": {},\\r\\n                \\\"baseUriParameters\\\": [],\\r\\n                \\\"externalDocs\\\": [],\\r\\n                \\\"servers\\\": [\\r\\n                    {\\r\\n                        \\\"url\\\": \\\"http://localhost\\\"\\r\\n                    }\\r\\n                ],\\r\\n                \\\"components\\\": {\\r\\n                    \\\"schemas\\\": {\\r\\n                        \\\"Pet\\\": {\\r\\n                            \\\"required\\\": [\\r\\n                                \\\"name\\\"\\r\\n                            ],\\r\\n                            \\\"type\\\": \\\"object\\\",\\r\\n                            \\\"properties\\\": {\\r\\n                                \\\"birthday\\\": {\\r\\n                                    \\\"type\\\": \\\"integer\\\",\\r\\n                                    \\\"format\\\": \\\"int32\\\"\\r\\n                                },\\r\\n                                \\\"name\\\": {\\r\\n                                    \\\"type\\\": \\\"string\\\"\\r\\n                                }\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            },\\r\\n            \\\"nativeEndpoint\\\": [\\r\\n                {\\r\\n                    \\\"passSecurityHeaders\\\": true,\\r\\n                    \\\"uri\\\": \\\"http://localhost\\\",\\r\\n                    \\\"connectionTimeoutDuration\\\": 0,\\r\\n                    \\\"alias\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"apiName\\\": \\\"APIMocking\\\",\\r\\n            \\\"apiVersion\\\": \\\"v1\\\",\\r\\n            \\\"apiDescription\\\": \\\"API to demonstrate mocking functionality in international developers day\\\",\\r\\n            \\\"maturityState\\\": \\\"Beta\\\",\\r\\n            \\\"isActive\\\": false,\\r\\n            \\\"type\\\": \\\"REST\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"policies\\\": [\\r\\n                \\\"19773e29-2838-4efc-aa04-793b48f4d22b\\\"\\r\\n            ],\\r\\n            \\\"scopes\\\": [],\\r\\n            \\\"publishedPortals\\\": [],\\r\\n            \\\"creationDate\\\": \\\"2018-11-01 13:44:58 GMT\\\",\\r\\n            \\\"systemVersion\\\": 1,\\r\\n            \\\"mockService\\\": {\\r\\n                \\\"enableMock\\\": false\\r\\n            },\\r\\n            \\\"id\\\": \\\"afd8eb5e-bba8-447b-8e28-76aac23ba074\\\"\\r\\n        },\\r\\n        \\\"responseStatus\\\": \\\"SUCCESS\\\",\\r\\n        \\\"versions\\\": [\\r\\n            {\\r\\n                \\\"versionNumber\\\": \\\"v1\\\",\\r\\n                \\\"apiId\\\": \\\"afd8eb5e-bba8-447b-8e28-76aac23ba074\\\"\\r\\n            }\\r\\n        ]\\r\\n    }\\r\\n}\""
												},
												{
													"name": "This status code indicates that the apiId specified is not found in the API Gateway",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/mock/disable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"mock",
																"disable"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code shows when the API is already in activated state or in mocked state",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/mock/disable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"mock",
																"disable"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/mock/disable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"mock",
																"disable"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Scopes",
									"item": [
										{
											"name": "Get Scopes of API by API Id",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/apis/:apiId/scopes",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"apis",
														":apiId",
														"scopes"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "3c575e49-73d5-4ae8-a3a5-552544e5a4a0",
															"description": "(Required) API Id for the API to retrieve the versions"
														}
													]
												},
												"description": "An API Scope is a collection of resources or operations in an API. Users can create multiple scopes for a single API. Policies can be attached to an API level or scope level. This method retrieves the scopes of an API.\n\nYou can create, modify or delete the scopes in the update API operation using PUT /api/{apiId}"
											},
											"response": [
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/scopes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"scopes"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns API scopes",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/scopes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"scopes"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"scopeReferences\\\": [\\r\\n    {\\r\\n      \\\"references\\\": [\\r\\n        {\\r\\n          \\\"resourcePath\\\": \\\"/random\\\",\\r\\n          \\\"supportedOperations\\\": []\\r\\n        }\\r\\n      ],\\r\\n      \\\"scope\\\": {\\r\\n        \\\"name\\\": \\\"Get_Scopes\\\",\\r\\n        \\\"description\\\": \\\"Dummy description of the scope\\\",\\r\\n        \\\"policies\\\": [\\r\\n          \\\"db1a42f4-e038-4a1b-82f4-8fee6fbd5687\\\"\\r\\n        ]\\r\\n      }\\r\\n    }\\r\\n  ]\\r\\n}\""
												},
												{
													"name": "This status code indicates that the apiId specified is not found in the API Gateway",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/scopes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"scopes"
															],
															"variable": [
																{
																	"key": "apiId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get Scope of API By API Id and Scope Name",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseURL}}/apis/:apiId/scopes/:scopeName",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"apis",
														":apiId",
														"scopes",
														":scopeName"
													],
													"variable": [
														{
															"key": "apiId",
															"value": "3c575e49-73d5-4ae8-a3a5-552544e5a4a0",
															"description": "(Required) API Id for the API to retrieve the versions"
														},
														{
															"key": "scopeName",
															"value": "Pet Scope",
															"description": "(Required) Name of the scope"
														}
													]
												},
												"description": "Retrieve scopes of an API based on the scope name"
											},
											"response": [
												{
													"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/scopes/:scopeName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"scopes",
																":scopeName"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "scopeName"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "This status code indicates that the apiId specified is not found in the API Gateway or scopeName is not found in the list of scopes",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/scopes/:scopeName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"scopes",
																":scopeName"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "scopeName"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns API scopes",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/apis/:apiId/scopes/:scopeName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"apis",
																":apiId",
																"scopes",
																":scopeName"
															],
															"variable": [
																{
																	"key": "apiId"
																},
																{
																	"key": "scopeName"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\r\\n  \\\"scopeReferences\\\": [\\r\\n    {\\r\\n      \\\"references\\\": [\\r\\n        {\\r\\n          \\\"resourcePath\\\": \\\"/random\\\",\\r\\n          \\\"supportedOperations\\\": []\\r\\n        }\\r\\n      ],\\r\\n      \\\"scope\\\": {\\r\\n        \\\"name\\\": \\\"Get_Scopes\\\",\\r\\n        \\\"description\\\": \\\"Dummy description of the scope\\\",\\r\\n        \\\"policies\\\": [\\r\\n          \\\"db1a42f4-e038-4a1b-82f4-8fee6fbd5687\\\"\\r\\n        ]\\r\\n      }\\r\\n    }\\r\\n  ]\\r\\n}\""
												}
											]
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Get API Details by Id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis/:apiId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "3c575e49-73d5-4ae8-a3a5-552544e5a4a0",
													"description": "(Required) API Id for the API to be retrieved"
												}
											]
										},
										"description": "Retrieve an API based on the API id."
									},
									"response": [
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId?format=<string>&url=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId"
													],
													"query": [
														{
															"key": "format",
															"value": "<string>"
														},
														{
															"key": "url",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId?format=<string>&url=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId"
													],
													"query": [
														{
															"key": "format",
															"value": "<string>"
														},
														{
															"key": "url",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "If the format is swagger, returns the swagger content in json and raml returns the raml content in yaml. If the format is openapi, returns the open api content in json. If the format is odata, you get a zip file holding the OData metadata and service document.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId?format=<string>&url=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId"
													],
													"query": [
														{
															"key": "format",
															"value": "<string>"
														},
														{
															"key": "url",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"apiResponse\\\": {\\r\\n        \\\"api\\\": {\\r\\n            \\\"apiDefinition\\\": {\\r\\n                \\\"type\\\": \\\"rest\\\",\\r\\n                \\\"info\\\": {\\r\\n                    \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n                    \\\"version\\\": \\\"1.0\\\",\\r\\n                    \\\"title\\\": \\\"ChuckNorrisAPI\\\"\\r\\n                },\\r\\n                \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n                \\\"basePath\\\": \\\"/jokes\\\",\\r\\n                \\\"schemes\\\": [\\r\\n                    \\\"https\\\"\\r\\n                ],\\r\\n                \\\"security\\\": [],\\r\\n                \\\"paths\\\": {\\r\\n                    \\\"/random\\\": {\\r\\n                        \\\"get\\\": {\\r\\n                            \\\"summary\\\": \\\"GET\\\",\\r\\n                            \\\"description\\\": \\\"\\\",\\r\\n                            \\\"operationId\\\": \\\"GET\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {},\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"enabled\\\": true\\r\\n                    }\\r\\n                },\\r\\n                \\\"securityDefinitions\\\": {},\\r\\n                \\\"definitions\\\": {},\\r\\n                \\\"baseUriParameters\\\": [],\\r\\n                \\\"externalDocs\\\": [],\\r\\n                \\\"servers\\\": [\\r\\n                    {\\r\\n                        \\\"url\\\": \\\"https://api.chucknorris.io/jokes\\\"\\r\\n                    }\\r\\n                ],\\r\\n                \\\"components\\\": {\\r\\n                    \\\"schemas\\\": {}\\r\\n                }\\r\\n            },\\r\\n            \\\"nativeEndpoint\\\": [\\r\\n                {\\r\\n                    \\\"passSecurityHeaders\\\": true,\\r\\n                    \\\"uri\\\": \\\"https://api.chucknorris.io/jokes\\\",\\r\\n                    \\\"connectionTimeoutDuration\\\": 0,\\r\\n                    \\\"alias\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"apiName\\\": \\\"ChuckNorris\\\",\\r\\n            \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n            \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n            \\\"maturityState\\\": \\\"Beta\\\",\\r\\n            \\\"isActive\\\": false,\\r\\n            \\\"type\\\": \\\"REST\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"policies\\\": [\\r\\n                \\\"08afbfa9-78e1-4c23-bb19-c0012464047e\\\"\\r\\n            ],\\r\\n            \\\"scopes\\\": [],\\r\\n            \\\"publishedPortals\\\": [],\\r\\n            \\\"creationDate\\\": \\\"2018-09-03 11:56:21 GMT\\\",\\r\\n            \\\"systemVersion\\\": 1,\\r\\n            \\\"id\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n        },\\r\\n        \\\"responseStatus\\\": \\\"SUCCESS\\\",\\r\\n        \\\"versions\\\": [\\r\\n            {\\r\\n                \\\"versionNumber\\\": \\\"1.0\\\",\\r\\n                \\\"apiId\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n       \\r\\n       }\\r\\n        ],\\r\\n        \\\"teams\\\": [\\r\\n            {\\r\\n                \\\"id\\\": \\\"Administrators\\\",\\r\\n                \\\"name\\\": \\\"Administrators\\\",\\r\\n                \\\"canDelete\\\": \\\"false\\\"\\r\\n            },\\r\\n            {\\r\\n                \\\"id\\\": \\\"Default\\\",\\r\\n                \\\"name\\\": \\\"Default\\\",\\r\\n                \\\"canDelete\\\": \\\"true\\\"\\r\\n            }\\r\\n        ]    }\\r\\n}\""
										}
									]
								},
								{
									"name": "Delete API by Id",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis/:apiId?forceDelete=true",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"query": [
												{
													"key": "forceDelete",
													"value": "true",
													"description": "Flag for force delete. Required when API is associated with some applications"
												}
											],
											"variable": [
												{
													"key": "apiId",
													"value": "3c575e49-73d5-4ae8-a3a5-552544e5a4a0",
													"description": "(Required) API Id for the API to be deleted"
												}
											]
										},
										"description": "Delete the inactive API"
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId?forceDelete=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId"
													],
													"query": [
														{
															"key": "forceDelete",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the apiId along with the error when unsuccessful",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId?forceDelete=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId"
													],
													"query": [
														{
															"key": "forceDelete",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<string>\",\n \"apiName\": \"<string>\",\n \"apiVersion\": \"<string>\",\n \"type\": \"<string>\",\n \"publishedPortals\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"systemVersion\": \"<integer>\",\n \"teams\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"source\": \"<string>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"source\": \"<string>\"\n  }\n ],\n \"active\": \"<boolean>\",\n \"apiId\": \"<string>\",\n \"errorReason\": \"<string>\",\n \"responseStatus\": \"<string>\"\n}"
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId?forceDelete=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId"
													],
													"query": [
														{
															"key": "forceDelete",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This response code returns when the deleted API is published to API portal or in active state",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId?forceDelete=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId"
													],
													"query": [
														{
															"key": "forceDelete",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId?forceDelete=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId"
													],
													"query": [
														{
															"key": "forceDelete",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Activate API",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis/:apiId/activate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId",
												"activate"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id for the API to be activated"
												}
											]
										},
										"description": "Activate an API so that API is exposed to consumers"
									},
									"response": [
										{
											"name": "This status code shows when the API is already in activated state or when no operations/resources are present or none are enabled",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/activate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"activate"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/activate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"activate"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the API object after successful activation",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/activate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"activate"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"apiResponse\\\": {\\r\\n        \\\"api\\\": {\\r\\n            \\\"apiDefinition\\\": {\\r\\n                \\\"type\\\": \\\"rest\\\",\\r\\n                \\\"info\\\": {\\r\\n                    \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n                    \\\"version\\\": \\\"1.0\\\",\\r\\n                    \\\"title\\\": \\\"ChuckNorrisAPI\\\"\\r\\n                },\\r\\n                \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n                \\\"basePath\\\": \\\"/jokes\\\",\\r\\n                \\\"schemes\\\": [\\r\\n                    \\\"https\\\"\\r\\n                ],\\r\\n                \\\"security\\\": [],\\r\\n                \\\"paths\\\": {\\r\\n                    \\\"/random\\\": {\\r\\n                        \\\"get\\\": {\\r\\n                            \\\"summary\\\": \\\"GET\\\",\\r\\n                            \\\"description\\\": \\\"\\\",\\r\\n                            \\\"operationId\\\": \\\"GET\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {},\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"enabled\\\": true\\r\\n                    }\\r\\n                },\\r\\n                \\\"securityDefinitions\\\": {},\\r\\n                \\\"definitions\\\": {},\\r\\n                \\\"baseUriParameters\\\": [],\\r\\n                \\\"externalDocs\\\": [],\\r\\n                \\\"servers\\\": [\\r\\n                    {\\r\\n                        \\\"url\\\": \\\"https://api.chucknorris.io/jokes\\\"\\r\\n                    }\\r\\n                ],\\r\\n                \\\"components\\\": {\\r\\n                    \\\"schemas\\\": {}\\r\\n                }\\r\\n            },\\r\\n            \\\"nativeEndpoint\\\": [\\r\\n                {\\r\\n                    \\\"passSecurityHeaders\\\": true,\\r\\n                    \\\"uri\\\": \\\"https://api.chucknorris.io/jokes\\\",\\r\\n                    \\\"connectionTimeoutDuration\\\": 0,\\r\\n                    \\\"alias\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"apiName\\\": \\\"ChuckNorris\\\",\\r\\n            \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n            \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n            \\\"maturityState\\\": \\\"Beta\\\",\\r\\n            \\\"isActive\\\": false,\\r\\n            \\\"type\\\": \\\"REST\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"policies\\\": [\\r\\n                \\\"08afbfa9-78e1-4c23-bb19-c0012464047e\\\"\\r\\n            ],\\r\\n            \\\"scopes\\\": [],\\r\\n            \\\"publishedPortals\\\": [],\\r\\n            \\\"creationDate\\\": \\\"2018-09-03 11:56:21 GMT\\\",\\r\\n            \\\"systemVersion\\\": 1,\\r\\n            \\\"id\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n        },\\r\\n        \\\"responseStatus\\\": \\\"SUCCESS\\\",\\r\\n        \\\"versions\\\": [\\r\\n            {\\r\\n                \\\"versionNumber\\\": \\\"1.0\\\",\\r\\n                \\\"apiId\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n            }\\r\\n        ]\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/activate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"activate"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deactivate API",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis/:apiId/deactivate",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId",
												"deactivate"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id for the API to be deactivated"
												}
											]
										},
										"description": "Deactivate an API so that API is not exposed to consumers"
									},
									"response": [
										{
											"name": "Returns the API object after successful deactivation",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/deactivate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"deactivate"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"apiResponse\\\": {\\r\\n        \\\"api\\\": {\\r\\n            \\\"apiDefinition\\\": {\\r\\n                \\\"type\\\": \\\"rest\\\",\\r\\n                \\\"info\\\": {\\r\\n                    \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n                    \\\"version\\\": \\\"1.0\\\",\\r\\n                    \\\"title\\\": \\\"ChuckNorrisAPI\\\"\\r\\n                },\\r\\n                \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n                \\\"basePath\\\": \\\"/jokes\\\",\\r\\n                \\\"schemes\\\": [\\r\\n                    \\\"https\\\"\\r\\n                ],\\r\\n                \\\"security\\\": [],\\r\\n                \\\"paths\\\": {\\r\\n                    \\\"/random\\\": {\\r\\n                        \\\"get\\\": {\\r\\n                            \\\"summary\\\": \\\"GET\\\",\\r\\n                            \\\"description\\\": \\\"\\\",\\r\\n                            \\\"operationId\\\": \\\"GET\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {},\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"enabled\\\": true\\r\\n                    }\\r\\n                },\\r\\n                \\\"securityDefinitions\\\": {},\\r\\n                \\\"definitions\\\": {},\\r\\n                \\\"baseUriParameters\\\": [],\\r\\n                \\\"externalDocs\\\": [],\\r\\n                \\\"servers\\\": [\\r\\n                    {\\r\\n                        \\\"url\\\": \\\"https://api.chucknorris.io/jokes\\\"\\r\\n                    }\\r\\n                ],\\r\\n                \\\"components\\\": {\\r\\n                    \\\"schemas\\\": {}\\r\\n                }\\r\\n            },\\r\\n            \\\"nativeEndpoint\\\": [\\r\\n                {\\r\\n                    \\\"passSecurityHeaders\\\": true,\\r\\n                    \\\"uri\\\": \\\"https://api.chucknorris.io/jokes\\\",\\r\\n                    \\\"connectionTimeoutDuration\\\": 0,\\r\\n                    \\\"alias\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"apiName\\\": \\\"ChuckNorris\\\",\\r\\n            \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n            \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n            \\\"maturityState\\\": \\\"Beta\\\",\\r\\n            \\\"isActive\\\": false,\\r\\n            \\\"type\\\": \\\"REST\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"policies\\\": [\\r\\n                \\\"08afbfa9-78e1-4c23-bb19-c0012464047e\\\"\\r\\n            ],\\r\\n            \\\"scopes\\\": [],\\r\\n            \\\"publishedPortals\\\": [],\\r\\n            \\\"creationDate\\\": \\\"2018-09-03 11:56:21 GMT\\\",\\r\\n            \\\"systemVersion\\\": 1,\\r\\n            \\\"id\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n        },\\r\\n        \\\"responseStatus\\\": \\\"SUCCESS\\\",\\r\\n        \\\"versions\\\": [\\r\\n            {\\r\\n                \\\"versionNumber\\\": \\\"1.0\\\",\\r\\n                \\\"apiId\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n            }\\r\\n        ]\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code shows when the API is already in de-activated state",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/deactivate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"deactivate"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/deactivate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"deactivate"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/deactivate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"deactivate"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Publish API",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"communities\": [\n        \"3bdf8005-5685-3ef5-b132-de4681963fb6\"\n    ],\n    \"endpoints\": [\n        \"http://SAG-1YVHZY2:5555/gateway/Petstore/1.0.5\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseURL}}/apis/:apiId/publish?portalGatewayId=d663e093-b39a-4330-93b9-fcb68d1a2c3d",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId",
												"publish"
											],
											"query": [
												{
													"key": "portalGatewayId",
													"value": "d663e093-b39a-4330-93b9-fcb68d1a2c3d"
												}
											],
											"variable": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id for the API to be published"
												}
											]
										},
										"description": "This REST operation is used to publish API to the registered API Portal"
									},
									"response": [
										{
											"name": "Returns the API object after successful publish",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"portalGatewayId\": \"<string>\",\n    \"communities\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"endpoints\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"publish"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n  \\\"apiResponse\\\": {\\r\\n    \\\"api\\\": {\\r\\n      \\\"apiDefinition\\\": {\\r\\n        \\\"type\\\": \\\"rest\\\",\\r\\n        \\\"info\\\": {\\r\\n          \\\"vendorExtensions\\\": {},\\r\\n          \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n          \\\"version\\\": \\\"1.0\\\",\\r\\n          \\\"title\\\": \\\"ChuckNorrisAPI\\\"\\r\\n        },\\r\\n        \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n        \\\"basePath\\\": \\\"/jokes\\\",\\r\\n        \\\"schemes\\\": [\\r\\n          \\\"https\\\"\\r\\n        ],\\r\\n        \\\"paths\\\": {\\r\\n          \\\"/random\\\": {\\r\\n            \\\"get\\\": {\\r\\n              \\\"summary\\\": \\\"GET\\\",\\r\\n              \\\"description\\\": \\\"\\\",\\r\\n              \\\"operationId\\\": \\\"GET\\\",\\r\\n              \\\"produces\\\": [\\r\\n                \\\"application/json\\\"\\r\\n              ],\\r\\n              \\\"parameters\\\": [],\\r\\n              \\\"responses\\\": {},\\r\\n              \\\"enabled\\\": true\\r\\n            },\\r\\n            \\\"enabled\\\": true\\r\\n          }\\r\\n        },\\r\\n        \\\"definitions\\\": {}\\r\\n      },\\r\\n      \\\"nativeEndpoint\\\": [\\r\\n        {\\r\\n          \\\"passSecurityHeaders\\\": true,\\r\\n          \\\"uri\\\": \\\"https://api.chucknorris.io/jokes\\\",\\r\\n          \\\"connectionTimeoutDuration\\\": 0,\\r\\n          \\\"alias\\\": false\\r\\n        }\\r\\n      ],\\r\\n      \\\"apiName\\\": \\\"ChuckNorrisAPI\\\",\\r\\n      \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n      \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n      \\\"maturityState\\\": \\\"Beta\\\",\\r\\n      \\\"isActive\\\": false,\\r\\n      \\\"type\\\": \\\"REST\\\",\\r\\n      \\\"owner\\\": \\\"Administrator\\\",\\r\\n      \\\"policies\\\": [\\r\\n        \\\"879068cd-8628-4f2a-b903-4e6613ca12ba\\\"\\r\\n      ],\\r\\n      \\\"referencedFiles\\\": {\\r\\n        \\\"ChuckNorrisAPI.json\\\": \\\"{\\\\r\\\\n  \\\\\\\"swagger\\\\\\\": \\\\\\\"2.0\\\\\\\",\\\\r\\\\n  \\\\\\\"info\\\\\\\": {\\\\r\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\\\\\",\\\\r\\\\n    \\\\\\\"title\\\\\\\": \\\\\\\"ChuckNorrisAPI\\\\\\\",\\\\r\\\\n    \\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\"\\\\r\\\\n  },\\\\r\\\\n  \\\\\\\"host\\\\\\\": \\\\\\\"api.chucknorris.io\\\\\\\",\\\\r\\\\n  \\\\\\\"basePath\\\\\\\": \\\\\\\"/jokes\\\\\\\",\\\\r\\\\n  \\\\\\\"schemes\\\\\\\": [\\\\r\\\\n    \\\\\\\"https\\\\\\\"\\\\r\\\\n  ],\\\\r\\\\n  \\\\\\\"paths\\\\\\\": {\\\\r\\\\n    \\\\\\\"/random\\\\\\\": {\\\\r\\\\n      \\\\\\\"get\\\\\\\": {\\\\r\\\\n        \\\\\\\"summary\\\\\\\": \\\\\\\"GET\\\\\\\",\\\\r\\\\n        \\\\\\\"deprecated\\\\\\\": false,\\\\r\\\\n        \\\\\\\"produces\\\\\\\": [\\\\r\\\\n          \\\\\\\"application/json\\\\\\\"\\\\r\\\\n        ],\\\\r\\\\n        \\\\\\\"description\\\\\\\": \\\\\\\"\\\\\\\",\\\\r\\\\n        \\\\\\\"operationId\\\\\\\": \\\\\\\"GET\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\"\\r\\n      },\\r\\n      \\\"scopes\\\": [],\\r\\n      \\\"publishedPortals\\\": [],\\r\\n      \\\"creationDate\\\": \\\"2017-03-13 09:38:30 GMT\\\",\\r\\n      \\\"systemVersion\\\": 1,\\r\\n      \\\"id\\\": \\\"25fb937a-8360-41ab-8be5-987b14fe631d\\\",\\r\\n      \\\"oauth2ScopeName\\\": \\\"25fb937a-8360-41ab-8be5-987b14fe631d\\\"\\r\\n    },\\r\\n    \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n  }\\r\\n}\""
										},
										{
											"name": "This status code shows when the user missed the mandatory portalGatewayId or invalid portalGatewayId in the request body",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"portalGatewayId\": \"<string>\",\n    \"communities\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"endpoints\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"publish"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"portalGatewayId\": \"<string>\",\n    \"communities\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"endpoints\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"publish"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"portalGatewayId\": \"<string>\",\n    \"communities\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"endpoints\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"publish"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Unpublish API",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis/:apiId/unpublish?portalGatewayId=d663e093-b39a-4330-93b9-fcb68d1a2c3d&forceUnpublish=true",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId",
												"unpublish"
											],
											"query": [
												{
													"key": "portalGatewayId",
													"value": "d663e093-b39a-4330-93b9-fcb68d1a2c3d"
												},
												{
													"key": "forceUnpublish",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id for the API to be unpublished"
												}
											]
										},
										"description": "Unpublish API from the registered API Portal"
									},
									"response": [
										{
											"name": "This status code shows when the user missed the mandatory portalGatewayId or invalid portalGatewayId in the request body",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/unpublish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"unpublish"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/unpublish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"unpublish"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/unpublish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"unpublish"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the API object after successful unpublish",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/unpublish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"unpublish"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n  \\\"apiResponse\\\": {\\r\\n    \\\"api\\\": {\\r\\n      \\\"apiDefinition\\\": {\\r\\n        \\\"type\\\": \\\"rest\\\",\\r\\n        \\\"info\\\": {\\r\\n          \\\"vendorExtensions\\\": {},\\r\\n          \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n          \\\"version\\\": \\\"1.0\\\",\\r\\n          \\\"title\\\": \\\"ChuckNorrisAPI\\\"\\r\\n        },\\r\\n        \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n        \\\"basePath\\\": \\\"/jokes\\\",\\r\\n        \\\"schemes\\\": [\\r\\n          \\\"https\\\"\\r\\n        ],\\r\\n        \\\"paths\\\": {\\r\\n          \\\"/random\\\": {\\r\\n            \\\"get\\\": {\\r\\n              \\\"summary\\\": \\\"GET\\\",\\r\\n              \\\"description\\\": \\\"\\\",\\r\\n              \\\"operationId\\\": \\\"GET\\\",\\r\\n              \\\"produces\\\": [\\r\\n                \\\"application/json\\\"\\r\\n              ],\\r\\n              \\\"parameters\\\": [],\\r\\n              \\\"responses\\\": {},\\r\\n              \\\"enabled\\\": true\\r\\n            },\\r\\n            \\\"enabled\\\": true\\r\\n          }\\r\\n        },\\r\\n        \\\"definitions\\\": {}\\r\\n      },\\r\\n      \\\"nativeEndpoint\\\": [\\r\\n        {\\r\\n          \\\"passSecurityHeaders\\\": true,\\r\\n          \\\"uri\\\": \\\"https://api.chucknorris.io/jokes\\\",\\r\\n          \\\"connectionTimeoutDuration\\\": 0,\\r\\n          \\\"alias\\\": false\\r\\n        }\\r\\n      ],\\r\\n      \\\"apiName\\\": \\\"ChuckNorrisAPI\\\",\\r\\n      \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n      \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n      \\\"maturityState\\\": \\\"Beta\\\",\\r\\n      \\\"isActive\\\": false,\\r\\n      \\\"type\\\": \\\"REST\\\",\\r\\n      \\\"owner\\\": \\\"Administrator\\\",\\r\\n      \\\"policies\\\": [\\r\\n        \\\"879068cd-8628-4f2a-b903-4e6613ca12ba\\\"\\r\\n      ],\\r\\n      \\\"referencedFiles\\\": {\\r\\n        \\\"ChuckNorrisAPI.json\\\": \\\"{\\\\r\\\\n  \\\\\\\"swagger\\\\\\\": \\\\\\\"2.0\\\\\\\",\\\\r\\\\n  \\\\\\\"info\\\\\\\": {\\\\r\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\\\\\",\\\\r\\\\n    \\\\\\\"title\\\\\\\": \\\\\\\"ChuckNorrisAPI\\\\\\\",\\\\r\\\\n    \\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\"\\\\r\\\\n  },\\\\r\\\\n  \\\\\\\"host\\\\\\\": \\\\\\\"api.chucknorris.io\\\\\\\",\\\\r\\\\n  \\\\\\\"basePath\\\\\\\": \\\\\\\"/jokes\\\\\\\",\\\\r\\\\n  \\\\\\\"schemes\\\\\\\": [\\\\r\\\\n    \\\\\\\"https\\\\\\\"\\\\r\\\\n  ],\\\\r\\\\n  \\\\\\\"paths\\\\\\\": {\\\\r\\\\n    \\\\\\\"/random\\\\\\\": {\\\\r\\\\n      \\\\\\\"get\\\\\\\": {\\\\r\\\\n        \\\\\\\"summary\\\\\\\": \\\\\\\"GET\\\\\\\",\\\\r\\\\n        \\\\\\\"deprecated\\\\\\\": false,\\\\r\\\\n        \\\\\\\"produces\\\\\\\": [\\\\r\\\\n          \\\\\\\"application/json\\\\\\\"\\\\r\\\\n        ],\\\\r\\\\n        \\\\\\\"description\\\\\\\": \\\\\\\"\\\\\\\",\\\\r\\\\n        \\\\\\\"operationId\\\\\\\": \\\\\\\"GET\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\"\\r\\n      },\\r\\n      \\\"scopes\\\": [],\\r\\n      \\\"publishedPortals\\\": [],\\r\\n      \\\"creationDate\\\": \\\"2017-03-13 09:38:30 GMT\\\",\\r\\n      \\\"systemVersion\\\": 1,\\r\\n      \\\"id\\\": \\\"25fb937a-8360-41ab-8be5-987b14fe631d\\\",\\r\\n      \\\"oauth2ScopeName\\\": \\\"25fb937a-8360-41ab-8be5-987b14fe631d\\\"\\r\\n    },\\r\\n    \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n  }\\r\\n}\""
										}
									]
								},
								{
									"name": "Notify API Implementation",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis/:apiId/implementation?nativeBaseURL=http://petstore.swagger.io/v2&overwriteAlias=false&maturityState=Beta",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId",
												"implementation"
											],
											"query": [
												{
													"key": "nativeBaseURL",
													"value": "http://petstore.swagger.io/v2",
													"description": "Base URL of the native API"
												},
												{
													"key": "overwriteAlias",
													"value": "false",
													"description": "Flag to replace the endpoint alias that is used in the routing policy of the API with the given value of 'nativeBaseURL' parameter."
												},
												{
													"key": "maturityState",
													"value": "Beta",
													"description": "Value of the 'maturity state' attribute of the API. The 'maturity state' of the API can be set to its one of possible value (from its defines values in extended settings configuration) to depict the completion its implementation"
												}
											],
											"variable": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id for the API to be updated"
												}
											]
										},
										"description": "An API Provider tool can use this operation to update the API in APIGateway after completion of its implementation in their end"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/implementation?nativeBaseURL=<string>&overwriteAlias=<boolean>&maturityState=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"implementation"
													],
													"query": [
														{
															"key": "nativeBaseURL",
															"value": "<string>"
														},
														{
															"key": "overwriteAlias",
															"value": "<boolean>"
														},
														{
															"key": "maturityState",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code shows when the user missed the mandatory fields like type, file/url/apiDefinition in the request or provide a invalid request body",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/implementation?nativeBaseURL=<string>&overwriteAlias=<boolean>&maturityState=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"implementation"
													],
													"query": [
														{
															"key": "nativeBaseURL",
															"value": "<string>"
														},
														{
															"key": "overwriteAlias",
															"value": "<boolean>"
														},
														{
															"key": "maturityState",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/implementation?nativeBaseURL=<string>&overwriteAlias=<boolean>&maturityState=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"implementation"
													],
													"query": [
														{
															"key": "nativeBaseURL",
															"value": "<string>"
														},
														{
															"key": "overwriteAlias",
															"value": "<boolean>"
														},
														{
															"key": "maturityState",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the updated API object",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/implementation?nativeBaseURL=<string>&overwriteAlias=<boolean>&maturityState=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"implementation"
													],
													"query": [
														{
															"key": "nativeBaseURL",
															"value": "<string>"
														},
														{
															"key": "overwriteAlias",
															"value": "<boolean>"
														},
														{
															"key": "maturityState",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"apiId\": \"<string>\",\n \"api\": {\n  \"apiDefinition\": {\n   \"type\": \"<string>\",\n   \"description\": \"<string>\",\n   \"title\": \"<string>\",\n   \"version\": \"<string>\",\n   \"uri\": [\n    \"<string>\"\n   ],\n   \"serviceRegistryDisplayName\": \"<string>\"\n  },\n  \"nativeEndpoint\": [\n   {\n    \"optimizationTechnique\": \"<string>\",\n    \"passSecurityHeaders\": \"<boolean>\",\n    \"uri\": \"<string>\",\n    \"connectionTimeoutDuration\": \"<integer>\",\n    \"alias\": \"<boolean>\"\n   }\n  ],\n  \"apiName\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"apiEndpointPrefix\": \"<string>\",\n  \"apiDescription\": \"<string>\",\n  \"maturityState\": \"<string>\",\n  \"apiGroups\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"isActive\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"policies\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"rootFileName\": \"<string>\",\n  \"scopes\": [\n   {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"getoAuth2ScopeName\": \"<string>\",\n    \"policies\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"mashedUpAPI\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"getoAuth2ScopeName\": \"<string>\",\n    \"policies\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"mashedUpAPI\": \"<boolean>\"\n   }\n  ],\n  \"publishedPortals\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"publishedToRegistry\": \"<boolean>\",\n  \"creationDate\": \"<string>\",\n  \"lastModified\": \"<string>\",\n  \"prevVersion\": \"<string>\",\n  \"nextVersion\": \"<string>\",\n  \"systemVersion\": \"<integer>\",\n  \"provider\": \"<string>\",\n  \"centraSiteURL\": \"<string>\",\n  \"mockService\": {\n   \"enableMock\": \"<boolean>\",\n   \"runAsUser\": \"<string>\",\n   \"service\": \"<string>\"\n  },\n  \"apiDocuments\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<string>\",\n  \"oauth2ScopeName\": \"<string>\"\n },\n \"responseStatus\": \"<string>\",\n \"errorReason\": \"<string>\",\n \"gatewayEndPoints\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"microgatewayEndPoints\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"reason\": \"<object>\",\n \"pubSOAPFlavor\": \"<string>\",\n \"restrictViewAsset\": \"<boolean>\",\n \"rootFileLocation\": \"<string>\",\n \"teams\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"source\": \"<string>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\",\n   \"source\": \"<string>\"\n  }\n ],\n \"portalGatewayDataEntries\": \"<object>\"\n}"
										}
									]
								},
								{
									"name": "Get Applications associated with API",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis/:apiId/applications",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId",
												"applications"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id for the API to find the associated applications"
												}
											]
										},
										"description": "Retrieves the list of registered applications of an API"
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"applications"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the list of associated applications",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"applications"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n  \\\"applications\\\": [\\r\\n    {\\r\\n      \\\"name\\\": \\\"app1\\\",\\r\\n      \\\"description\\\": null,\\r\\n      \\\"contactEmails\\\": [],\\r\\n      \\\"identifiers\\\": [],\\r\\n      \\\"siteURLs\\\": [],\\r\\n      \\\"version\\\": \\\"1.0\\\",\\r\\n      \\\"id\\\": \\\"ae48cd69-421e-4bdf-a4d0-e86996a78f68\\\",\\r\\n      \\\"created\\\": \\\"2017-03-13 13:12:03 GMT\\\",\\r\\n      \\\"lastupdated\\\": null,\\r\\n      \\\"consumingAPIs\\\": [\\r\\n        \\\"25fb937a-8360-41ab-8be5-987b14fe631d\\\"\\r\\n      ],\\r\\n      \\\"accessTokens\\\": {\\r\\n        \\\"apiAccessKey_credentials\\\": {\\r\\n          \\\"apiAccessKey\\\": \\\"cec4b46b-3569-4f73-a561-172dd67c182a\\\",\\r\\n          \\\"expirationInterval\\\": null\\r\\n        },\\r\\n        \\\"oauth_credentials\\\": {\\r\\n          \\\"clientID\\\": \\\"40b78ed3-d171-4bd3-99db-51dd2fa71753\\\",\\r\\n          \\\"clientSecret\\\": \\\"024b9525-6526-45c8-a66c-d192442064e1\\\",\\r\\n          \\\"clientName\\\": \\\"app1-6b753c2a-0567-462d-a4ea-1b143ab7a381\\\",\\r\\n          \\\"scopes\\\": [\\r\\n            \\\"25fb937a-8360-41ab-8be5-987b14fe631d\\\"\\r\\n          ],\\r\\n          \\\"token_lifetime\\\": \\\"3600\\\",\\r\\n          \\\"token_refresh_limit\\\": \\\"0\\\",\\r\\n          \\\"redirect_uris\\\": [\\r\\n            \\\"https://placeholder_redirect_uri\\\"\\r\\n          ],\\r\\n          \\\"Type\\\": \\\"confidential\\\"\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  ]\\r\\n}\""
										},
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/applications",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"applications"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Source",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis/:apiId/source",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId",
												"source"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id for the API to download the source content"
												}
											]
										},
										"description": "Download the API definition that was used to create the API. This is applicable only for SOAP APIs."
									},
									"response": [
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/source",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"source"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the source files along with the root file name",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/source",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"source"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "multipart/mixed"
												}
											],
											"cookie": [],
											"body": "Message-ID: <296841806.5.1489555643275.JavaMail.MRIZ@MCMRIZ01>\r\nMIME-Version: 1.0\r\nContent-Type: multipart/mixed; \r\n\tboundary=\"----=_Part_4_1098332532.1489555643274\"\r\n\r\n------=_Part_4_1098332532.1489555643274\r\ncontent-type: application/zip\r\nContent-Disposition: attachment; filename=\"echoService.zip\"\r\n\r\nfile content in zip format\r\n------=_Part_4_1098332532.1489555643274\r\ncontent-type: text/plain\r\nContent-Disposition: inline; name=\"rootFileName\"\r\n\r\necho.wsdl\r\n------=_Part_4_1098332532.1489555643274--"
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/source",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"source"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code returns when the specified API is not a SOAP API",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/source",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"source"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Associated Global Policies",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis/:apiId/globalPolicies",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId",
												"globalPolicies"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id for the API to find the list of applicable global policies"
												}
											]
										},
										"description": "Retrieves the list of active global policies applicable to this API"
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/globalPolicies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"globalPolicies"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the list of global policy names",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/globalPolicies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"globalPolicies"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n  \\\"globalPolicies\\\": [\\r\\n    \\\"GlobalLogInvocationPolicy\\\"\\r\\n  ]\\r\\n}\""
										},
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/globalPolicies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"globalPolicies"
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download Provider Specification",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis/:apiId/providerspecification?format=swagger",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis",
												":apiId",
												"providerspecification"
											],
											"query": [
												{
													"key": "format",
													"value": "swagger"
												}
											],
											"variable": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id for the API to retrieve the versions"
												}
											]
										},
										"description": "Downloads the provider specification of REST and SOAP based APIs. Provider specification is nothing but, the specification file (in swagger or wsdl format) with out the concrete API Gateway endpoint and contains all resources/methods/operation irrespective of whether they are exposed to consumer"
									},
									"response": [
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/providerspecification?format=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"providerspecification"
													],
													"query": [
														{
															"key": "format",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "If the format is swagger, returns the swagger content in json. If the format is wsdl, returns the wsdl content in xml.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/providerspecification?format=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"providerspecification"
													],
													"query": [
														{
															"key": "format",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"versions\": [\n  {\n   \"versionNumber\": \"<string>\",\n   \"apiId\": \"<string>\"\n  },\n  {\n   \"versionNumber\": \"<string>\",\n   \"apiId\": \"<string>\"\n  }\n ],\n \"gatewayEndPoints\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"api\": {\n  \"apiDefinition\": {\n   \"type\": \"<string>\",\n   \"description\": \"<string>\",\n   \"title\": \"<string>\",\n   \"version\": \"<string>\",\n   \"uri\": [\n    \"<string>\"\n   ],\n   \"serviceRegistryDisplayName\": \"<string>\"\n  },\n  \"nativeEndpoint\": [\n   {\n    \"optimizationTechnique\": \"<string>\",\n    \"passSecurityHeaders\": \"<boolean>\",\n    \"uri\": \"<string>\",\n    \"connectionTimeoutDuration\": \"<integer>\",\n    \"alias\": \"<boolean>\"\n   }\n  ],\n  \"apiName\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"apiEndpointPrefix\": \"<string>\",\n  \"apiDescription\": \"<string>\",\n  \"maturityState\": \"<string>\",\n  \"apiGroups\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"isActive\": \"<boolean>\",\n  \"type\": \"<string>\",\n  \"owner\": \"<string>\",\n  \"policies\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"rootFileName\": \"<string>\",\n  \"scopes\": [\n   {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"getoAuth2ScopeName\": \"<string>\",\n    \"policies\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"mashedUpAPI\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"getoAuth2ScopeName\": \"<string>\",\n    \"policies\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"mashedUpAPI\": \"<boolean>\"\n   }\n  ],\n  \"publishedPortals\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"publishedToRegistry\": \"<boolean>\",\n  \"creationDate\": \"<string>\",\n  \"lastModified\": \"<string>\",\n  \"prevVersion\": \"<string>\",\n  \"nextVersion\": \"<string>\",\n  \"systemVersion\": \"<integer>\",\n  \"provider\": \"<string>\",\n  \"centraSiteURL\": \"<string>\",\n  \"mockService\": {\n   \"enableMock\": \"<boolean>\",\n   \"runAsUser\": \"<string>\",\n   \"service\": \"<string>\"\n  },\n  \"apiDocuments\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<string>\",\n  \"oauth2ScopeName\": \"<string>\"\n },\n \"apiId\": \"<string>\",\n \"errorReason\": \"<string>\",\n \"responseStatus\": \"<string>\"\n}"
										},
										{
											"name": "This status code indicates that the apiId specified is not found in the API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis/:apiId/providerspecification?format=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis",
														":apiId",
														"providerspecification"
													],
													"query": [
														{
															"key": "format",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "apiId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get All APIs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis"
											]
										},
										"description": "Get all APIs or subset of APIs"
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis?apiIds=<string>&from=<integer>&size=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "apiIds",
															"value": "<string>"
														},
														{
															"key": "from",
															"value": "<integer>"
														},
														{
															"key": "size",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the list of all APIs",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis?apiIds=<string>&from=<integer>&size=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "apiIds",
															"value": "<string>"
														},
														{
															"key": "from",
															"value": "<integer>"
														},
														{
															"key": "size",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n  \\\"apiResponse\\\": [\\r\\n    {\\r\\n      \\\"api\\\": {\\r\\n        \\\"apiName\\\": \\\"ChuckNorrisAPI\\\",\\r\\n        \\\"apiVersion\\\": \\\"v2\\\",\\r\\n        \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n        \\\"isActive\\\": false,\\r\\n        \\\"type\\\": \\\"REST\\\",\\r\\n        \\\"publishedPortals\\\": [],\\r\\n        \\\"systemVersion\\\": 2,\\r\\n        \\\"id\\\": \\\"46df4227-a100-486c-9580-0bf388ec6ec7\\\"\\r\\n      },\\r\\n      \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"api\\\": {\\r\\n        \\\"apiName\\\": \\\"ChuckNorrisAPI\\\",\\r\\n        \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n        \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n        \\\"isActive\\\": false,\\r\\n        \\\"type\\\": \\\"REST\\\",\\r\\n        \\\"publishedPortals\\\": [],\\r\\n        \\\"systemVersion\\\": 1,\\r\\n        \\\"id\\\": \\\"25fb937a-8360-41ab-8be5-987b14fe631d\\\"\\r\\n      },\\r\\n      \\\"responseStatus\\\": \\\"SUCCESS\\\",\\r\\n  \\\"teams\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": \\\"Administrators\\\",\\r\\n                    \\\"name\\\": \\\"Administrators\\\",\\r\\n                    \\\"canDelete\\\": \\\"false\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": \\\"Default\\\",\\r\\n                    \\\"name\\\": \\\"Default\\\",\\r\\n                    \\\"canDelete\\\": \\\"true\\\"\\r\\n                }\\r\\n            ]\\r\\n      }\\r\\n  ]\\r\\n}\""
										}
									]
								},
								{
									"name": "Create API",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "Input swagger / raml / wsdl file to be imported",
													"type": "file",
													"src": "/C:/Work/APIGatewayTrunk/tests/gatewaytests/src/test/resources/petstore.json"
												},
												{
													"key": "apiName",
													"value": "Doggie",
													"description": "Name of the API"
												},
												{
													"key": "type",
													"value": "swagger",
													"description": "Input file type (This can only be one of swagger,raml,wsdl,openapi)"
												},
												{
													"key": "apiDescription",
													"value": "description flows here",
													"description": "Description of the API"
												},
												{
													"key": "apiVersion",
													"value": "1.0",
													"description": "Version of the API"
												},
												{
													"key": "rootFileName",
													"value": "<string>",
													"description": "Name of the main file in the zip. Required only when the input file is zip format",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseURL}}/apis",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis"
											]
										},
										"description": "This REST operation is used to create an API by importing a file, url or from scratch"
									},
									"response": [
										{
											"name": "Returns the created API object",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "petstore.json",
															"description": {
																"content": "Input swagger / raml / wsdl file to be imported",
																"type": "text/plain"
															}
														},
														{
															"key": "apiName",
															"value": "Swagger Petstore",
															"description": {
																"content": "Name of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "type",
															"value": "swagger",
															"description": {
																"content": "Input file type (This can only be one of swagger,raml,wsdl,openapi)",
																"type": "text/plain"
															}
														},
														{
															"key": "apiDescription",
															"value": "This is a sample server Petstore server",
															"description": {
																"content": "Description of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "apiVersion",
															"value": "V1",
															"description": {
																"content": "Version of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "rootFileName",
															"value": "mainFile.wsdl",
															"description": {
																"content": "Name of the main file in the zip. Required only when the input file is zip format",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"apiResponse\\\": {\\r\\n        \\\"api\\\": {\\r\\n            \\\"apiDefinition\\\": {\\r\\n                \\\"type\\\": \\\"rest\\\",\\r\\n                \\\"info\\\": {\\r\\n                    \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n                    \\\"version\\\": \\\"1.0\\\",\\r\\n                    \\\"title\\\": \\\"ChuckNorrisAPI\\\"\\r\\n                },\\r\\n                \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n                \\\"basePath\\\": \\\"/jokes\\\",\\r\\n                \\\"schemes\\\": [\\r\\n                    \\\"https\\\"\\r\\n                ],\\r\\n                \\\"security\\\": [],\\r\\n                \\\"paths\\\": {\\r\\n                    \\\"/random\\\": {\\r\\n                        \\\"get\\\": {\\r\\n                            \\\"summary\\\": \\\"GET\\\",\\r\\n                            \\\"description\\\": \\\"\\\",\\r\\n                            \\\"operationId\\\": \\\"GET\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {},\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"enabled\\\": true\\r\\n                    }\\r\\n                },\\r\\n                \\\"securityDefinitions\\\": {},\\r\\n                \\\"definitions\\\": {},\\r\\n                \\\"baseUriParameters\\\": [],\\r\\n                \\\"externalDocs\\\": [],\\r\\n                \\\"servers\\\": [\\r\\n                    {\\r\\n                        \\\"url\\\": \\\"https://api.chucknorris.io/jokes\\\"\\r\\n                    }\\r\\n                ],\\r\\n                \\\"components\\\": {\\r\\n                    \\\"schemas\\\": {}\\r\\n                }\\r\\n            },\\r\\n            \\\"nativeEndpoint\\\": [\\r\\n                {\\r\\n                    \\\"passSecurityHeaders\\\": true,\\r\\n                    \\\"uri\\\": \\\"https://api.chucknorris.io/jokes\\\",\\r\\n                    \\\"connectionTimeoutDuration\\\": 0,\\r\\n                    \\\"alias\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"apiName\\\": \\\"ChuckNorris\\\",\\r\\n            \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n            \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n            \\\"maturityState\\\": \\\"Beta\\\",\\r\\n            \\\"isActive\\\": false,\\r\\n            \\\"type\\\": \\\"REST\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"policies\\\": [\\r\\n                \\\"08afbfa9-78e1-4c23-bb19-c0012464047e\\\"\\r\\n            ],\\r\\n            \\\"scopes\\\": [],\\r\\n            \\\"publishedPortals\\\": [],\\r\\n            \\\"creationDate\\\": \\\"2018-09-03 11:56:21 GMT\\\",\\r\\n            \\\"systemVersion\\\": 1,\\r\\n            \\\"id\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n        },\\r\\n        \\\"responseStatus\\\": \\\"SUCCESS\\\",\\r\\n        \\\"versions\\\": [\\r\\n            {\\r\\n                \\\"versionNumber\\\": \\\"1.0\\\",\\r\\n                \\\"apiId\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n            }\\r\\n        ],\\r\\n        \\\"teams\\\": [\\r\\n            {\\r\\n                \\\"id\\\": \\\"Administrators\\\",\\r\\n                \\\"name\\\": \\\"Administrators\\\",\\r\\n                \\\"canDelete\\\": \\\"false\\\"\\r\\n            },\\r\\n            {\\r\\n                \\\"id\\\": \\\"Default\\\",\\r\\n                \\\"name\\\": \\\"Default\\\",\\r\\n                \\\"canDelete\\\": \\\"true\\\"\\r\\n            }\\r\\n        ]   }\\r\\n}\""
										},
										{
											"name": "This status code shows when the user missed the mandatory fields like type, file/url/apiDefinition in the request or provide a invalid request body",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "petstore.json",
															"description": {
																"content": "Input swagger / raml / wsdl file to be imported",
																"type": "text/plain"
															}
														},
														{
															"key": "apiName",
															"value": "Swagger Petstore",
															"description": {
																"content": "Name of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "type",
															"value": "swagger",
															"description": {
																"content": "Input file type (This can only be one of swagger,raml,wsdl,openapi)",
																"type": "text/plain"
															}
														},
														{
															"key": "apiDescription",
															"value": "This is a sample server Petstore server",
															"description": {
																"content": "Description of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "apiVersion",
															"value": "V1",
															"description": {
																"content": "Version of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "rootFileName",
															"value": "mainFile.wsdl",
															"description": {
																"content": "Name of the main file in the zip. Required only when the input file is zip format",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "petstore.json",
															"description": {
																"content": "Input swagger / raml / wsdl file to be imported",
																"type": "text/plain"
															}
														},
														{
															"key": "apiName",
															"value": "Swagger Petstore",
															"description": {
																"content": "Name of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "type",
															"value": "swagger",
															"description": {
																"content": "Input file type (This can only be one of swagger,raml,wsdl,openapi)",
																"type": "text/plain"
															}
														},
														{
															"key": "apiDescription",
															"value": "This is a sample server Petstore server",
															"description": {
																"content": "Description of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "apiVersion",
															"value": "V1",
															"description": {
																"content": "Version of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "rootFileName",
															"value": "mainFile.wsdl",
															"description": {
																"content": "Name of the main file in the zip. Required only when the input file is zip format",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update API",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"apiDefinition\": {\n        \"info\": {\n            \"description\": \"description flows here\",\n            \"version\": \"1.0\",\n            \"title\": \"Swagger Petstore\",\n            \"termsOfService\": \"http://swagger.io/terms/\",\n            \"contact\": {\n                \"email\": \"apiteam@swagger.io\"\n            },\n            \"license\": {\n                \"name\": \"Apache 2.0\",\n                \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n            }\n        },\n        \"host\": \"petstore.swagger.io\",\n        \"basePath\": \"/v2\",\n        \"tags\": [\n            {\n                \"name\": \"pet\",\n                \"description\": \"Everything about your Pets\",\n                \"externalDocs\": {\n                    \"description\": \"Find out more\",\n                    \"url\": \"http://swagger.io\"\n                }\n            },\n            {\n                \"name\": \"store\",\n                \"description\": \"Access to Petstore orders\"\n            },\n            {\n                \"name\": \"user\",\n                \"description\": \"Operations about user\",\n                \"externalDocs\": {\n                    \"description\": \"Find out more about our store\",\n                    \"url\": \"http://swagger.io\"\n                }\n            }\n        ],\n        \"schemes\": [\n            \"https\",\n            \"http\"\n        ],\n        \"security\": [],\n        \"paths\": {\n            \"/pet\": {\n                \"put\": {\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Update an existing pet\",\n                    \"description\": \"\",\n                    \"operationId\": \"updatePet\",\n                    \"consumes\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [],\n                    \"responses\": {\n                        \"400\": {\n                            \"description\": \"Invalid ID supplied\"\n                        },\n                        \"404\": {\n                            \"description\": \"Pet not found\"\n                        },\n                        \"405\": {\n                            \"description\": \"Validation exception\"\n                        }\n                    },\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"description\": \"Pet object that needs to be added to the store\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            },\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            }\n                        },\n                        \"required\": true\n                    }\n                },\n                \"post\": {\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Add a new pet to the store\",\n                    \"description\": \"\",\n                    \"operationId\": \"addPet\",\n                    \"consumes\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [],\n                    \"responses\": {\n                        \"405\": {\n                            \"description\": \"Invalid input\"\n                        }\n                    },\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"description\": \"Pet object that needs to be added to the store\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            },\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            }\n                        },\n                        \"required\": true\n                    }\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/pet/findByStatus\": {\n                \"get\": {\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Finds Pets by status\",\n                    \"description\": \"Multiple status values can be provided with comma separated strings\",\n                    \"operationId\": \"findPetsByStatus\",\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"Status values that need to be considered for filter\",\n                            \"in\": \"query\",\n                            \"name\": \"status\",\n                            \"parameterSchema\": {\n                                \"description\": \"Status values that need to be considered for filter\",\n                                \"items\": {\n                                    \"default\": \"available\",\n                                    \"enum\": [\n                                        \"available\",\n                                        \"pending\",\n                                        \"sold\"\n                                    ],\n                                    \"type\": \"string\"\n                                },\n                                \"readOnly\": false,\n                                \"type\": \"array\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"successful operation\",\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"$ref\": \"#/components/schemas/Pet\"\n                                        }\n                                    }\n                                },\n                                \"application/xml\": {\n                                    \"schema\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"$ref\": \"#/components/schemas/Pet\"\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"400\": {\n                            \"description\": \"Invalid status value\"\n                        }\n                    },\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"enabled\": true\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/pet/findByTags\": {\n                \"get\": {\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Finds Pets by tags\",\n                    \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n                    \"operationId\": \"findPetsByTags\",\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"Tags to filter by\",\n                            \"in\": \"query\",\n                            \"name\": \"tags\",\n                            \"parameterSchema\": {\n                                \"description\": \"Tags to filter by\",\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"readOnly\": false,\n                                \"type\": \"array\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"successful operation\",\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"$ref\": \"#/components/schemas/Pet\"\n                                        }\n                                    }\n                                },\n                                \"application/xml\": {\n                                    \"schema\": {\n                                        \"type\": \"array\",\n                                        \"items\": {\n                                            \"$ref\": \"#/components/schemas/Pet\"\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"400\": {\n                            \"description\": \"Invalid tag value\"\n                        }\n                    },\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"deprecated\": true,\n                    \"enabled\": true\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/pet/{petId}\": {\n                \"get\": {\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Find pet by ID\",\n                    \"description\": \"Returns a single pet\",\n                    \"operationId\": \"getPetById\",\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"ID of pet to return\",\n                            \"in\": \"path\",\n                            \"name\": \"petId\",\n                            \"parameterSchema\": {\n                                \"description\": \"ID of pet to return\",\n                                \"format\": \"int64\",\n                                \"readOnly\": false,\n                                \"type\": \"integer\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"successful operation\",\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/Pet\"\n                                    }\n                                },\n                                \"application/xml\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            }\n                        },\n                        \"400\": {\n                            \"description\": \"Invalid ID supplied\"\n                        },\n                        \"404\": {\n                            \"description\": \"Pet not found\"\n                        }\n                    },\n                    \"security\": [\n                        {\n                            \"api_key\": []\n                        }\n                    ],\n                    \"enabled\": true\n                },\n                \"post\": {\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Updates a pet in the store with form data\",\n                    \"description\": \"\",\n                    \"operationId\": \"updatePetWithForm\",\n                    \"consumes\": [\n                        \"application/x-www-form-urlencoded\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"ID of pet that needs to be updated\",\n                            \"in\": \"path\",\n                            \"name\": \"petId\",\n                            \"parameterSchema\": {\n                                \"description\": \"ID of pet that needs to be updated\",\n                                \"format\": \"int64\",\n                                \"readOnly\": false,\n                                \"type\": \"integer\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"405\": {\n                            \"description\": \"Invalid input\"\n                        }\n                    },\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"content\": {\n                            \"application/x-www-form-urlencoded\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"name\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"Updated name of the pet\",\n                                            \"readOnly\": false\n                                        },\n                                        \"status\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"Updated status of the pet\",\n                                            \"readOnly\": false\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"required\": true\n                    }\n                },\n                \"delete\": {\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Deletes a pet\",\n                    \"description\": \"\",\n                    \"operationId\": \"deletePet\",\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"in\": \"header\",\n                            \"name\": \"api_key\",\n                            \"parameterSchema\": {\n                                \"readOnly\": false,\n                                \"type\": \"string\"\n                            },\n                            \"required\": false\n                        },\n                        {\n                            \"description\": \"Pet id to delete\",\n                            \"in\": \"path\",\n                            \"name\": \"petId\",\n                            \"parameterSchema\": {\n                                \"description\": \"Pet id to delete\",\n                                \"format\": \"int64\",\n                                \"readOnly\": false,\n                                \"type\": \"integer\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"400\": {\n                            \"description\": \"Invalid ID supplied\"\n                        },\n                        \"404\": {\n                            \"description\": \"Pet not found\"\n                        }\n                    },\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"enabled\": true\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/pet/{petId}/uploadImage\": {\n                \"post\": {\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"uploads an image\",\n                    \"description\": \"\",\n                    \"operationId\": \"uploadFile\",\n                    \"consumes\": [\n                        \"multipart/form-data\"\n                    ],\n                    \"produces\": [\n                        \"application/json\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"ID of pet to update\",\n                            \"in\": \"path\",\n                            \"name\": \"petId\",\n                            \"parameterSchema\": {\n                                \"description\": \"ID of pet to update\",\n                                \"format\": \"int64\",\n                                \"readOnly\": false,\n                                \"type\": \"integer\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"successful operation\",\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/ApiResponse\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"content\": {\n                            \"multipart/form-data\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"additionalMetadata\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"Additional data to pass to server\",\n                                            \"readOnly\": false\n                                        },\n                                        \"file\": {\n                                            \"type\": \"string\",\n                                            \"description\": \"file to upload\",\n                                            \"format\": \"binary\",\n                                            \"readOnly\": false\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"required\": true\n                    }\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/store/inventory\": {\n                \"get\": {\n                    \"tags\": [\n                        \"store\"\n                    ],\n                    \"summary\": \"Returns pet inventories by status\",\n                    \"description\": \"Returns a map of status codes to quantities\",\n                    \"operationId\": \"getInventory\",\n                    \"produces\": [\n                        \"application/json\"\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"successful operation\",\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"type\": \"object\",\n                                        \"additionalProperties\": {\n                                            \"type\": \"integer\",\n                                            \"format\": \"int32\"\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"security\": [\n                        {\n                            \"api_key\": []\n                        }\n                    ],\n                    \"enabled\": true\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/store/order\": {\n                \"post\": {\n                    \"tags\": [\n                        \"store\"\n                    ],\n                    \"summary\": \"Place an order for a pet\",\n                    \"description\": \"\",\n                    \"operationId\": \"placeOrder\",\n                    \"consumes\": [\n                        \"application/json\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"successful operation\",\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/Order\"\n                                    }\n                                },\n                                \"application/xml\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/Order\"\n                                    }\n                                }\n                            }\n                        },\n                        \"400\": {\n                            \"description\": \"Invalid Order\"\n                        }\n                    },\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"description\": \"order placed for purchasing the pet\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Order\"\n                                }\n                            }\n                        },\n                        \"required\": true\n                    }\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/store/order/{orderId}\": {\n                \"get\": {\n                    \"tags\": [\n                        \"store\"\n                    ],\n                    \"summary\": \"Find purchase order by ID\",\n                    \"description\": \"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions\",\n                    \"operationId\": \"getOrderById\",\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"ID of pet that needs to be fetched\",\n                            \"in\": \"path\",\n                            \"name\": \"orderId\",\n                            \"parameterSchema\": {\n                                \"description\": \"ID of pet that needs to be fetched\",\n                                \"format\": \"int64\",\n                                \"maximum\": 10,\n                                \"minimum\": 1,\n                                \"readOnly\": false,\n                                \"type\": \"integer\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"successful operation\",\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/Order\"\n                                    }\n                                },\n                                \"application/xml\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/Order\"\n                                    }\n                                }\n                            }\n                        },\n                        \"400\": {\n                            \"description\": \"Invalid ID supplied\"\n                        },\n                        \"404\": {\n                            \"description\": \"Order not found\"\n                        }\n                    },\n                    \"enabled\": true\n                },\n                \"delete\": {\n                    \"tags\": [\n                        \"store\"\n                    ],\n                    \"summary\": \"Delete purchase order by ID\",\n                    \"description\": \"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors\",\n                    \"operationId\": \"deleteOrder\",\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"ID of the order that needs to be deleted\",\n                            \"in\": \"path\",\n                            \"name\": \"orderId\",\n                            \"parameterSchema\": {\n                                \"description\": \"ID of the order that needs to be deleted\",\n                                \"format\": \"int64\",\n                                \"minimum\": 1,\n                                \"readOnly\": false,\n                                \"type\": \"integer\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"400\": {\n                            \"description\": \"Invalid ID supplied\"\n                        },\n                        \"404\": {\n                            \"description\": \"Order not found\"\n                        }\n                    },\n                    \"enabled\": true\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/user\": {\n                \"post\": {\n                    \"tags\": [\n                        \"user\"\n                    ],\n                    \"summary\": \"Create user\",\n                    \"description\": \"This can only be done by the logged in user.\",\n                    \"operationId\": \"createUser\",\n                    \"consumes\": [\n                        \"application/json\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [],\n                    \"responses\": {\n                        \"default\": {\n                            \"description\": \"successful operation\"\n                        }\n                    },\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"description\": \"Created user object\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        },\n                        \"required\": true\n                    }\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/user/createWithArray\": {\n                \"post\": {\n                    \"tags\": [\n                        \"user\"\n                    ],\n                    \"summary\": \"Creates list of users with given input array\",\n                    \"description\": \"\",\n                    \"operationId\": \"createUsersWithArrayInput\",\n                    \"consumes\": [\n                        \"application/json\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [],\n                    \"responses\": {\n                        \"default\": {\n                            \"description\": \"successful operation\"\n                        }\n                    },\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"description\": \"List of user object\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        },\n                        \"required\": true\n                    }\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/user/createWithList\": {\n                \"post\": {\n                    \"tags\": [\n                        \"user\"\n                    ],\n                    \"summary\": \"Creates list of users with given input array\",\n                    \"description\": \"\",\n                    \"operationId\": \"createUsersWithListInput\",\n                    \"consumes\": [\n                        \"application/json\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [],\n                    \"responses\": {\n                        \"default\": {\n                            \"description\": \"successful operation\"\n                        }\n                    },\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"description\": \"List of user object\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        },\n                        \"required\": true\n                    }\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/user/login\": {\n                \"get\": {\n                    \"tags\": [\n                        \"user\"\n                    ],\n                    \"summary\": \"Logs user into the system\",\n                    \"description\": \"\",\n                    \"operationId\": \"loginUser\",\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"The user name for login\",\n                            \"in\": \"query\",\n                            \"name\": \"username\",\n                            \"parameterSchema\": {\n                                \"description\": \"The user name for login\",\n                                \"readOnly\": false,\n                                \"type\": \"string\"\n                            },\n                            \"required\": true\n                        },\n                        {\n                            \"description\": \"The password for login in clear text\",\n                            \"in\": \"query\",\n                            \"name\": \"password\",\n                            \"parameterSchema\": {\n                                \"description\": \"The password for login in clear text\",\n                                \"readOnly\": false,\n                                \"type\": \"string\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"successful operation\",\n                            \"headersV3\": {\n                                \"X-Expires-After\": {\n                                    \"in\": \"header\",\n                                    \"description\": \"date in UTC when token expires\",\n                                    \"required\": false,\n                                    \"parameterSchema\": {\n                                        \"type\": \"string\",\n                                        \"format\": \"date-time\"\n                                    }\n                                },\n                                \"X-Rate-Limit\": {\n                                    \"in\": \"header\",\n                                    \"description\": \"calls per hour allowed by the user\",\n                                    \"required\": false,\n                                    \"parameterSchema\": {\n                                        \"type\": \"integer\",\n                                        \"format\": \"int32\"\n                                    }\n                                }\n                            },\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"application/xml\": {\n                                    \"schema\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        },\n                        \"400\": {\n                            \"description\": \"Invalid username/password supplied\"\n                        }\n                    },\n                    \"enabled\": true\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/user/logout\": {\n                \"get\": {\n                    \"tags\": [\n                        \"user\"\n                    ],\n                    \"summary\": \"Logs out current logged in user session\",\n                    \"description\": \"\",\n                    \"operationId\": \"logoutUser\",\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"responses\": {\n                        \"default\": {\n                            \"description\": \"successful operation\"\n                        }\n                    },\n                    \"enabled\": true\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            },\n            \"/user/{username}\": {\n                \"get\": {\n                    \"tags\": [\n                        \"user\"\n                    ],\n                    \"summary\": \"Get user by user name\",\n                    \"description\": \"\",\n                    \"operationId\": \"getUserByName\",\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n                            \"in\": \"path\",\n                            \"name\": \"username\",\n                            \"parameterSchema\": {\n                                \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n                                \"readOnly\": false,\n                                \"type\": \"string\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"200\": {\n                            \"description\": \"successful operation\",\n                            \"content\": {\n                                \"application/json\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                },\n                                \"application/xml\": {\n                                    \"schema\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    }\n                                }\n                            }\n                        },\n                        \"400\": {\n                            \"description\": \"Invalid username supplied\"\n                        },\n                        \"404\": {\n                            \"description\": \"User not found\"\n                        }\n                    },\n                    \"enabled\": true\n                },\n                \"put\": {\n                    \"tags\": [\n                        \"user\"\n                    ],\n                    \"summary\": \"Updated user\",\n                    \"description\": \"This can only be done by the logged in user.\",\n                    \"operationId\": \"updateUser\",\n                    \"consumes\": [\n                        \"application/json\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"name that need to be updated\",\n                            \"in\": \"path\",\n                            \"name\": \"username\",\n                            \"parameterSchema\": {\n                                \"description\": \"name that need to be updated\",\n                                \"readOnly\": false,\n                                \"type\": \"string\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"400\": {\n                            \"description\": \"Invalid user supplied\"\n                        },\n                        \"404\": {\n                            \"description\": \"User not found\"\n                        }\n                    },\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"description\": \"Updated user object\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        },\n                        \"required\": true\n                    }\n                },\n                \"delete\": {\n                    \"tags\": [\n                        \"user\"\n                    ],\n                    \"summary\": \"Delete user\",\n                    \"description\": \"This can only be done by the logged in user.\",\n                    \"operationId\": \"deleteUser\",\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"parameters\": [\n                        {\n                            \"description\": \"The name that needs to be deleted\",\n                            \"in\": \"path\",\n                            \"name\": \"username\",\n                            \"parameterSchema\": {\n                                \"description\": \"The name that needs to be deleted\",\n                                \"readOnly\": false,\n                                \"type\": \"string\"\n                            },\n                            \"required\": true\n                        }\n                    ],\n                    \"responses\": {\n                        \"400\": {\n                            \"description\": \"Invalid username supplied\"\n                        },\n                        \"404\": {\n                            \"description\": \"User not found\"\n                        }\n                    },\n                    \"enabled\": true\n                },\n                \"parameters\": [],\n                \"enabled\": true\n            }\n        },\n        \"securityDefinitions\": {\n            \"api_key\": {\n                \"in\": \"header\",\n                \"name\": \"api_key\",\n                \"type\": \"apiKey\"\n            },\n            \"petstore_auth\": {\n                \"authorizationUrl\": \"https://petstore.swagger.io/oauth/authorize\",\n                \"flow\": \"implicit\",\n                \"scopes\": {\n                    \"read:pets\": \"read your pets\",\n                    \"write:pets\": \"modify pets in your account\"\n                },\n                \"type\": \"oauth2\"\n            }\n        },\n        \"definitions\": {},\n        \"baseUriParameters\": [],\n        \"externalDocs\": [\n            {\n                \"description\": \"Find out more about Swagger\",\n                \"url\": \"http://swagger.io\"\n            }\n        ],\n        \"servers\": [\n            {\n                \"url\": \"https://petstore.swagger.io/v2\"\n            },\n            {\n                \"url\": \"http://petstore.swagger.io/v2\"\n            }\n        ],\n        \"components\": {\n            \"schemas\": {\n                \"ApiResponse\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"code\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"message\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"Category\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"xml\": {\n                        \"name\": \"Category\"\n                    }\n                },\n                \"Order\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"complete\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"petId\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"quantity\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        },\n                        \"shipDate\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                        },\n                        \"status\": {\n                            \"type\": \"string\",\n                            \"description\": \"Order Status\",\n                            \"enum\": [\n                                \"placed\",\n                                \"approved\",\n                                \"delivered\"\n                            ]\n                        }\n                    },\n                    \"xml\": {\n                        \"name\": \"Order\"\n                    }\n                },\n                \"Pet\": {\n                    \"required\": [\n                        \"photoUrls\",\n                        \"name\"\n                    ],\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"category\": {\n                            \"$ref\": \"#/components/schemas/Category\"\n                        },\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\",\n                            \"example\": \"doggie\"\n                        },\n                        \"photoUrls\": {\n                            \"type\": \"array\",\n                            \"xml\": {\n                                \"wrapped\": true\n                            },\n                            \"items\": {\n                                \"type\": \"string\",\n                                \"xml\": {\n                                    \"name\": \"photoUrl\"\n                                }\n                            }\n                        },\n                        \"status\": {\n                            \"type\": \"string\",\n                            \"description\": \"pet status in the store\",\n                            \"enum\": [\n                                \"available\",\n                                \"pending\",\n                                \"sold\"\n                            ]\n                        },\n                        \"tags\": {\n                            \"type\": \"array\",\n                            \"xml\": {\n                                \"wrapped\": true\n                            },\n                            \"items\": {\n                                \"$ref\": \"#/components/schemas/Tag\",\n                                \"xml\": {\n                                    \"name\": \"tag\"\n                                }\n                            }\n                        }\n                    },\n                    \"xml\": {\n                        \"name\": \"Pet\"\n                    }\n                },\n                \"Tag\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"xml\": {\n                        \"name\": \"Tag\"\n                    }\n                },\n                \"User\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"email\": {\n                            \"type\": \"string\"\n                        },\n                        \"firstName\": {\n                            \"type\": \"string\"\n                        },\n                        \"id\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"lastName\": {\n                            \"type\": \"string\"\n                        },\n                        \"password\": {\n                            \"type\": \"string\"\n                        },\n                        \"phone\": {\n                            \"type\": \"string\"\n                        },\n                        \"userStatus\": {\n                            \"type\": \"integer\",\n                            \"description\": \"User Status\",\n                            \"format\": \"int32\"\n                        },\n                        \"username\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"xml\": {\n                        \"name\": \"User\"\n                    }\n                }\n            }\n        },\n        \"type\": \"rest\"\n    },\n    \"nativeEndpoint\": [\n        {\n            \"passSecurityHeaders\": true,\n            \"uri\": \"http://petstore.swagger.io/v2\",\n            \"connectionTimeoutDuration\": 0,\n            \"alias\": false\n        },\n        {\n            \"passSecurityHeaders\": true,\n            \"uri\": \"https://petstore.swagger.io/v2\",\n            \"connectionTimeoutDuration\": 0,\n            \"alias\": false\n        }\n    ],\n    \"apiName\": \"Petstore\",\n    \"apiVersion\": \"1.0\",\n    \"apiDescription\": \"description flows here\",\n    \"maturityState\": \"Beta\",\n    \"isActive\": true,\n    \"type\": \"REST\",\n    \"owner\": \"Administrator\",\n    \"policies\": [\n        \"7a64f49d-4651-4140-aa78-66920cc44864\"\n    ],\n    \"scopes\": [],\n    \"publishedPortals\": [],\n    \"creationDate\": \"2020-04-28 05:09:56 GMT\",\n    \"systemVersion\": 1,\n    \"id\": \"befd30d2-cff8-4c1a-be0c-5ee3534e74ef\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/apis",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis"
											]
										},
										"description": "Get the API details by ID using our rest service and update the api with the needed changes."
									},
									"response": [
										{
											"name": "This status code shows when the user missed the mandatory fields like type, file/url/apiDefinition in the request or provide a invalid request body",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "petstore.json",
															"description": {
																"content": "Input swagger / raml / wsdl file to be imported",
																"type": "text/plain"
															}
														},
														{
															"key": "apiName",
															"value": "Swagger Petstore",
															"description": {
																"content": "Name of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "type",
															"value": "swagger",
															"description": {
																"content": "Input file type (This can only be one of swagger,raml,wsdl,openapi)",
																"type": "text/plain"
															}
														},
														{
															"key": "apiDescription",
															"value": "This is a sample server Petstore server",
															"description": {
																"content": "Description of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "apiVersion",
															"value": "V1",
															"description": {
																"content": "Version of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "rootFileName",
															"value": "mainFile.wsdl",
															"description": {
																"content": "Name of the main file in the zip. Required only when the input file is zip format",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the created API object",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "petstore.json",
															"description": {
																"content": "Input swagger / raml / wsdl file to be imported",
																"type": "text/plain"
															}
														},
														{
															"key": "apiName",
															"value": "Swagger Petstore",
															"description": {
																"content": "Name of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "type",
															"value": "swagger",
															"description": {
																"content": "Input file type (This can only be one of swagger,raml,wsdl,openapi)",
																"type": "text/plain"
															}
														},
														{
															"key": "apiDescription",
															"value": "This is a sample server Petstore server",
															"description": {
																"content": "Description of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "apiVersion",
															"value": "V1",
															"description": {
																"content": "Version of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "rootFileName",
															"value": "mainFile.wsdl",
															"description": {
																"content": "Name of the main file in the zip. Required only when the input file is zip format",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"apiResponse\\\": {\\r\\n        \\\"api\\\": {\\r\\n            \\\"apiDefinition\\\": {\\r\\n                \\\"type\\\": \\\"rest\\\",\\r\\n                \\\"info\\\": {\\r\\n                    \\\"description\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n                    \\\"version\\\": \\\"1.0\\\",\\r\\n                    \\\"title\\\": \\\"ChuckNorrisAPI\\\"\\r\\n                },\\r\\n                \\\"host\\\": \\\"api.chucknorris.io\\\",\\r\\n                \\\"basePath\\\": \\\"/jokes\\\",\\r\\n                \\\"schemes\\\": [\\r\\n                    \\\"https\\\"\\r\\n                ],\\r\\n                \\\"security\\\": [],\\r\\n                \\\"paths\\\": {\\r\\n                    \\\"/random\\\": {\\r\\n                        \\\"get\\\": {\\r\\n                            \\\"summary\\\": \\\"GET\\\",\\r\\n                            \\\"description\\\": \\\"\\\",\\r\\n                            \\\"operationId\\\": \\\"GET\\\",\\r\\n                            \\\"produces\\\": [\\r\\n                                \\\"application/json\\\"\\r\\n                            ],\\r\\n                            \\\"responses\\\": {},\\r\\n                            \\\"enabled\\\": true\\r\\n                        },\\r\\n                        \\\"enabled\\\": true\\r\\n                    }\\r\\n                },\\r\\n                \\\"securityDefinitions\\\": {},\\r\\n                \\\"definitions\\\": {},\\r\\n                \\\"baseUriParameters\\\": [],\\r\\n                \\\"externalDocs\\\": [],\\r\\n                \\\"servers\\\": [\\r\\n                    {\\r\\n                        \\\"url\\\": \\\"https://api.chucknorris.io/jokes\\\"\\r\\n                    }\\r\\n                ],\\r\\n                \\\"components\\\": {\\r\\n                    \\\"schemas\\\": {}\\r\\n                }\\r\\n            },\\r\\n            \\\"nativeEndpoint\\\": [\\r\\n                {\\r\\n                    \\\"passSecurityHeaders\\\": true,\\r\\n                    \\\"uri\\\": \\\"https://api.chucknorris.io/jokes\\\",\\r\\n                    \\\"connectionTimeoutDuration\\\": 0,\\r\\n                    \\\"alias\\\": false\\r\\n                }\\r\\n            ],\\r\\n            \\\"apiName\\\": \\\"ChuckNorris\\\",\\r\\n            \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n            \\\"apiDescription\\\": \\\"Chuck Norris facts are satirical factoids about martial artist and actor Chuck Norris that have become an Internet phenomenon and as a result have become widespread in popular culture. The 'facts' are normally absurd hyperbolic claims about Norris' toughness, attitude, virility, sophistication, and masculinity.\\\",\\r\\n            \\\"maturityState\\\": \\\"Beta\\\",\\r\\n            \\\"isActive\\\": false,\\r\\n            \\\"type\\\": \\\"REST\\\",\\r\\n            \\\"owner\\\": \\\"Administrator\\\",\\r\\n            \\\"policies\\\": [\\r\\n                \\\"08afbfa9-78e1-4c23-bb19-c0012464047e\\\"\\r\\n            ],\\r\\n            \\\"scopes\\\": [],\\r\\n            \\\"publishedPortals\\\": [],\\r\\n            \\\"creationDate\\\": \\\"2018-09-03 11:56:21 GMT\\\",\\r\\n            \\\"systemVersion\\\": 1,\\r\\n            \\\"id\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n        },\\r\\n        \\\"responseStatus\\\": \\\"SUCCESS\\\",\\r\\n        \\\"versions\\\": [\\r\\n            {\\r\\n                \\\"versionNumber\\\": \\\"1.0\\\",\\r\\n                \\\"apiId\\\": \\\"badc18e6-446f-4aa3-96cd-33e46bd40fb5\\\"\\r\\n            }\\r\\n        ],\\r\\n        \\\"teams\\\": [\\r\\n            {\\r\\n                \\\"id\\\": \\\"Administrators\\\",\\r\\n                \\\"name\\\": \\\"Administrators\\\",\\r\\n                \\\"canDelete\\\": \\\"false\\\"\\r\\n            },\\r\\n            {\\r\\n                \\\"id\\\": \\\"Default\\\",\\r\\n                \\\"name\\\": \\\"Default\\\",\\r\\n                \\\"canDelete\\\": \\\"true\\\"\\r\\n            }\\r\\n        ]   }\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "petstore.json",
															"description": {
																"content": "Input swagger / raml / wsdl file to be imported",
																"type": "text/plain"
															}
														},
														{
															"key": "apiName",
															"value": "Swagger Petstore",
															"description": {
																"content": "Name of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "type",
															"value": "swagger",
															"description": {
																"content": "Input file type (This can only be one of swagger,raml,wsdl,openapi)",
																"type": "text/plain"
															}
														},
														{
															"key": "apiDescription",
															"value": "This is a sample server Petstore server",
															"description": {
																"content": "Description of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "apiVersion",
															"value": "V1",
															"description": {
																"content": "Version of the API",
																"type": "text/plain"
															}
														},
														{
															"key": "rootFileName",
															"value": "mainFile.wsdl",
															"description": {
																"content": "Name of the main file in the zip. Required only when the input file is zip format",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/apis",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete APIs",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/apis?apiIds=2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0,2c843837-cc6c-4ba1-aaf3-b10f8e9adbe7&forceDelete=true",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"apis"
											],
											"query": [
												{
													"key": "apiIds",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0,2c843837-cc6c-4ba1-aaf3-b10f8e9adbe7",
													"description": "(Required) API Ids for the APIs to be deleted. Multiple API ids combined by comma"
												},
												{
													"key": "forceDelete",
													"value": "true",
													"description": "Flag for force delete. Required when API is associated with some applications"
												}
											]
										},
										"description": "Delete the inactive APIs"
									},
									"response": [
										{
											"name": "This response code returns when the mandatory parameter apiIds is missing in the query parameter",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis?apiIds=<string>&forceDelete=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "apiIds",
															"value": "<string>"
														},
														{
															"key": "forceDelete",
															"value": "true"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis?apiIds=<string>&forceDelete=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "apiIds",
															"value": "<string>"
														},
														{
															"key": "forceDelete",
															"value": "true"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the apiId along with the error when unsuccessful",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis?apiIds=<string>&forceDelete=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "apiIds",
															"value": "<string>"
														},
														{
															"key": "forceDelete",
															"value": "true"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<string>\",\n  \"apiName\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"type\": \"<string>\",\n  \"publishedPortals\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"systemVersion\": \"<integer>\",\n  \"teams\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"source\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"source\": \"<string>\"\n   }\n  ],\n  \"active\": \"<boolean>\",\n  \"apiId\": \"<string>\",\n  \"errorReason\": \"<string>\",\n  \"responseStatus\": \"<string>\"\n },\n {\n  \"id\": \"<string>\",\n  \"apiName\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"type\": \"<string>\",\n  \"publishedPortals\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"systemVersion\": \"<integer>\",\n  \"teams\": [\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"source\": \"<string>\"\n   },\n   {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"source\": \"<string>\"\n   }\n  ],\n  \"active\": \"<boolean>\",\n  \"apiId\": \"<string>\",\n  \"errorReason\": \"<string>\",\n  \"responseStatus\": \"<string>\"\n }\n]"
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/apis?apiIds=<string>&forceDelete=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"apis"
													],
													"query": [
														{
															"key": "apiIds",
															"value": "<string>"
														},
														{
															"key": "forceDelete",
															"value": "true"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Service Registry",
							"item": [
								{
									"name": "Unpublish From Service Registry",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"unpublishInfo\": {\n        \"serviceRegistryIds\": [\n            \"EurekaDefault\"\n        ],\n        \"apiId\": \"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseURL}}/serviceRegistry/unpublish",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"serviceRegistry",
												"unpublish"
											]
										},
										"description": "Unpublish one or more APIs from one or more service registries.\n\nUnpublish one or more APIs using the below payload.\n\n\n{\n\t\"unpublishInfos\": [\n\t\t{\n\t\t\t\"serviceRegistryIds\": [\n\t\t\t\t\"EurekaDefault\"\n\t\t\t],\n\t\t\t\"apiId\": \"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\"\n\t\t},\n\t\t{\n\t\t\t\"serviceRegistryIds\": [\n\t\t\t\t\"EurekaDefault\"\n\t\t\t],\n\t\t\t\"apiId\": \"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\"\n\t\t}\n\t]\n}"
									},
									"response": [
										{
											"name": "Returns the service registry unpublish response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"unpublishInfo\": {\n        \"apiId\": \"<string>\",\n        \"serviceRegistryIds\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"unpublishInfos\": [\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryIds\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryIds\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/serviceRegistry/unpublish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"serviceRegistry",
														"unpublish"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n  \\\"unpublishResponse\\\": {\\r\\n    \\\"apiId\\\": \\\"afe8b72e-e1a5-47c6-9b43-e7f12858c091\\\",\\r\\n    \\\"apiName\\\": \\\"CalcService\\\",\\r\\n    \\\"apiVersion\\\": \\\"10.3\\\",\\r\\n    \\\"serviceRegistryUnpublishResponses\\\": [\\r\\n      {\\r\\n        \\\"serviceRegistryId\\\": \\\"aec973cd-1e4c-4a93-93a4-950e32d39156\\\",\\r\\n        \\\"serviceRegistryName\\\": \\\"MyServiceConsul\\\",\\r\\n        \\\"success\\\": true,\\r\\n        \\\"description\\\": \\\" Unpublish successful\\\"\\r\\n      }\\r\\n    ]\\r\\n  }\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"unpublishInfo\": {\n        \"apiId\": \"<string>\",\n        \"serviceRegistryIds\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"unpublishInfos\": [\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryIds\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryIds\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/serviceRegistry/unpublish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"serviceRegistry",
														"unpublish"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Service Registry Publish Info",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/serviceRegistry/publish?apiId=2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"serviceRegistry",
												"publish"
											],
											"query": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id of the API for which ServiceRegistryPublishInfo is to be fetched"
												}
											]
										},
										"description": "Retrieve the service registry publish information for the API"
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/serviceRegistry/publish?apiId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"serviceRegistry",
														"publish"
													],
													"query": [
														{
															"key": "apiId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that Publish Info for the apiId specified is not found in API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/serviceRegistry/publish?apiId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"serviceRegistry",
														"publish"
													],
													"query": [
														{
															"key": "apiId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the service registry publish info for the API",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/serviceRegistry/publish?apiId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"serviceRegistry",
														"publish"
													],
													"query": [
														{
															"key": "apiId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n  \\\"publishInfo\\\": {\\r\\n    \\\"apiId\\\": \\\"afe8b72e-e1a5-47c6-9b43-e7f12858c091\\\",\\r\\n    \\\"serviceRegistryPublishInfo\\\": [\\r\\n      {\\r\\n        \\\"serviceRegistryId\\\": \\\"aec973cd-1e4c-4a93-93a4-950e32d39156\\\",\\r\\n        \\\"status\\\": \\\"PUBLISHED\\\",\\r\\n        \\\"name\\\": \\\"MyServiceConsul\\\",\\r\\n        \\\"gatewayEndpoints\\\": [\\r\\n          {\\r\\n            \\\"gatewayEndpoint\\\": \\\"http://localhost:5555/ws/calc/1\\\",\\r\\n            \\\"status\\\": \\\"PUBLISHED\\\"\\r\\n          },\\r\\n          {\\r\\n            \\\"gatewayEndpoint\\\": \\\"http://localhost:1111/ws/calc/1\\\",\\r\\n            \\\"status\\\": \\\"NEW\\\"\\r\\n          }\\r\\n        ]\\r\\n      }\\r\\n    ]\\r\\n  }\\r\\n}\""
										}
									]
								},
								{
									"name": "Publish To Service Registry",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"publishInfo\": {\n\t\t\"serviceRegistryPublishInfo\": [\n\t\t\t{\n\t\t\t\t\"gatewayEndpoints\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"gatewayEndpoint\": \"http://SAG-1YVHZY2:5555/gateway/Petstore/1.0.5\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"serviceRegistryId\": \"EurekaDefault\"\n\t\t\t}\n\t\t],\n\t\t\"apiId\": \"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\"\n\t}\n}"
										},
										"url": {
											"raw": "{{baseURL}}/serviceRegistry/publish",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"serviceRegistry",
												"publish"
											]
										},
										"description": "Publish one or more APIs to one or more service registries.\n\nPublish more than one APIs with the given payload\n\n{\n\t\"publishInfos\": [\n\t\t{\n\t\t\t\"serviceRegistryPublishInfo\": [\n\t\t\t\t{\n\t\t\t\t\t\"gatewayEndpoints\": [],\n\t\t\t\t\t\"serviceRegistryId\": \"EurekaDefault\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"apiId\": \"d3371bdb-457a-4248-8034-7887ac8b42de\"\n\t\t},\n\t\t{\n\t\t\t\"serviceRegistryPublishInfo\": [\n\t\t\t\t{\n\t\t\t\t\t\"gatewayEndpoints\": [],\n\t\t\t\t\t\"serviceRegistryId\": \"EurekaDefault\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"apiId\": \"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\"\n\t\t}\n\t]\n}"
									},
									"response": [
										{
											"name": "Returns the status of the publish operations given in the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publishInfo\": {\n        \"apiId\": \"<string>\",\n        \"serviceRegistryPublishInfo\": [\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            },\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            }\n        ],\n        \"integrationServerPublishInfo\": [\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            },\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            }\n        ]\n    },\n    \"publishInfos\": [\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/serviceRegistry/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"serviceRegistry",
														"publish"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n  \\\"publishResponse\\\": {\\r\\n    \\\"apiId\\\": \\\"afe8b72e-e1a5-47c6-9b43-e7f12858c091\\\",\\r\\n    \\\"apiName\\\": \\\"CalcService\\\",\\r\\n    \\\"apiVersion\\\": \\\"10.3\\\",\\r\\n    \\\"serviceRegistryPublishResponses\\\": [\\r\\n      {\\r\\n        \\\"serviceRegistryId\\\": \\\"aec973cd-1e4c-4a93-93a4-950e32d39156\\\",\\r\\n        \\\"serviceRegistryName\\\": \\\"MyServiceConsul\\\",\\r\\n        \\\"status\\\": \\\"PUBLISHED\\\",\\r\\n        \\\"gatewayEndpoints\\\": [\\r\\n          {\\r\\n            \\\"gatewayEndpoint\\\": \\\"http://localhost:5555/ws/calc/1\\\",\\r\\n            \\\"status\\\": \\\"PUBLISHED\\\",\\r\\n          }\\r\\n        ],\\r\\n        \\\"success\\\": true,\\r\\n        \\\"description\\\": \\\"Publish successful\\\"\\r\\n      }\\r\\n    ]\\r\\n  }\\r\\n}\""
										},
										{
											"name": "This status code indicates an invalid request body",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publishInfo\": {\n        \"apiId\": \"<string>\",\n        \"serviceRegistryPublishInfo\": [\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            },\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            }\n        ],\n        \"integrationServerPublishInfo\": [\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            },\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            }\n        ]\n    },\n    \"publishInfos\": [\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/serviceRegistry/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"serviceRegistry",
														"publish"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publishInfo\": {\n        \"apiId\": \"<string>\",\n        \"serviceRegistryPublishInfo\": [\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            },\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            }\n        ],\n        \"integrationServerPublishInfo\": [\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            },\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            }\n        ]\n    },\n    \"publishInfos\": [\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/serviceRegistry/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"serviceRegistry",
														"publish"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that API with given apiId is not found in API Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publishInfo\": {\n        \"apiId\": \"<string>\",\n        \"serviceRegistryPublishInfo\": [\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            },\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            }\n        ],\n        \"integrationServerPublishInfo\": [\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            },\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            }\n        ]\n    },\n    \"publishInfos\": [\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/serviceRegistry/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"serviceRegistry",
														"publish"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Integration Server",
							"item": [
								{
									"name": "Get Integration Server Publish Info",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/integrationServer/publish?apiId=2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"integrationServer",
												"publish"
											],
											"query": [
												{
													"key": "apiId",
													"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
													"description": "(Required) API Id of the API for which IntegrationServerPublishInfo is to be fetched"
												}
											]
										},
										"description": "Retrieve the integration server publish information for the API. Only REST and SOAP APIs are supported."
									},
									"response": [
										{
											"name": "This status code indicates that Publish Info for the apiId specified is not found in API Gateway",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/integrationServer/publish?apiId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrationServer",
														"publish"
													],
													"query": [
														{
															"key": "apiId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/integrationServer/publish?apiId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrationServer",
														"publish"
													],
													"query": [
														{
															"key": "apiId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns the integration server publish info for the API",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/integrationServer/publish?apiId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrationServer",
														"publish"
													],
													"query": [
														{
															"key": "apiId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"publishInfo\": {\n  \"apiId\": \"<string>\",\n  \"serviceRegistryPublishInfo\": [\n   {\n    \"serviceRegistryId\": \"<string>\",\n    \"status\": \"<string>\",\n    \"name\": \"<string>\",\n    \"gatewayEndpoints\": [\n     {\n      \"gatewayEndpoint\": \"<string>\",\n      \"status\": \"<string>\"\n     }\n    ]\n   },\n   {\n    \"serviceRegistryId\": \"<string>\",\n    \"status\": \"<string>\",\n    \"name\": \"<string>\",\n    \"gatewayEndpoints\": [\n     {\n      \"gatewayEndpoint\": \"<string>\",\n      \"status\": \"<string>\"\n     }\n    ]\n   }\n  ],\n  \"integrationServerPublishInfo\": [\n   {\n    \"integrationServerId\": \"<string>\",\n    \"packageName\": \"<string>\",\n    \"folderName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"integrationServerName\": \"<string>\"\n   },\n   {\n    \"integrationServerId\": \"<string>\",\n    \"packageName\": \"<string>\",\n    \"folderName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"integrationServerName\": \"<string>\"\n   }\n  ]\n }\n}"
										}
									]
								},
								{
									"name": "Publish To Integration Server",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"publishInfo\": {\n\t\t\"integrationServerPublishInfo\": [\n\t\t\t{\n\t\t\t\t\"packageAndFolders\": [],\n\t\t\t\t\"integrationServerId\": \"0ad4ee2e-956b-49e0-b7a4-a6a2ea45b034\",\n\t\t\t\t\"integrationServerName\": \"gora\",\n\t\t\t\t\"folderName\": \"test\",\n\t\t\t\t\"packageName\": \"test\",\n\t\t\t\t\"updateNativeEndpointsOfAPI\": true,\n\t\t\t\t\"importSwaggerBasedOnTags\": true,\n\t\t\t\t\"contentModelComplianceForWSDL\": \"None\",\n\t\t\t\t\"enableMTOM\": false,\n\t\t\t\t\"enforceWSICompliance\": false,\n\t\t\t\t\"validateSchemaWithXerces\": true\n\t\t\t}\n\t\t],\n\t\t\"apiId\": \"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\"\n\t}\n}"
										},
										"url": {
											"raw": "{{baseURL}}/integrationServer/publish",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"integrationServer",
												"publish"
											]
										},
										"description": "Publish one or more APIs to one or more integration servers. Only REST and SOAP APIs are supported.\n\nPublish multiple apis to Integration Server:\n{\n\t\"publishInfos\": [\n\t\t{\n\t\t\t\"integrationServerPublishInfo\": [\n\t\t\t\t{\n\t\t\t\t\t\"packageAndFolders\": [],\n\t\t\t\t\t\"integrationServerId\": \"0ad4ee2e-956b-49e0-b7a4-a6a2ea45b034\",\n\t\t\t\t\t\"integrationServerName\": \"gora\",\n\t\t\t\t\t\"folderName\": \"test\",\n\t\t\t\t\t\"packageName\": \"test\",\n\t\t\t\t\t\"updateNativeEndpointsOfAPI\": true,\n\t\t\t\t\t\"importSwaggerBasedOnTags\": true,\n\t\t\t\t\t\"contentModelComplianceForWSDL\": \"None\",\n\t\t\t\t\t\"enableMTOM\": false,\n\t\t\t\t\t\"enforceWSICompliance\": false,\n\t\t\t\t\t\"validateSchemaWithXerces\": true\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"apiId\": \"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\"\n\t\t},\n\t\t{\n\t\t\t\"integrationServerPublishInfo\": [\n\t\t\t\t{\n\t\t\t\t\t\"packageAndFolders\": [],\n\t\t\t\t\t\"integrationServerId\": \"0ad4ee2e-956b-49e0-b7a4-a6a2ea45b034\",\n\t\t\t\t\t\"integrationServerName\": \"gora\",\n\t\t\t\t\t\"folderName\": \"test\",\n\t\t\t\t\t\"packageName\": \"test\",\n\t\t\t\t\t\"updateNativeEndpointsOfAPI\": true,\n\t\t\t\t\t\"importSwaggerBasedOnTags\": true,\n\t\t\t\t\t\"contentModelComplianceForWSDL\": \"None\",\n\t\t\t\t\t\"enableMTOM\": false,\n\t\t\t\t\t\"enforceWSICompliance\": false,\n\t\t\t\t\t\"validateSchemaWithXerces\": true\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"apiId\": \"d3371bdb-457a-4248-8034-7887ac8b42de\"\n\t\t}\n\t]\n}"
									},
									"response": [
										{
											"name": "Returns the status of the publish operations given in the request.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publishInfo\": {\n        \"apiId\": \"<string>\",\n        \"serviceRegistryPublishInfo\": [\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            },\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            }\n        ],\n        \"integrationServerPublishInfo\": [\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            },\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            }\n        ]\n    },\n    \"publishInfos\": [\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/integrationServer/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrationServer",
														"publish"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"publishResponse\": {\n  \"apiId\": \"<string>\",\n  \"apiName\": \"<string>\",\n  \"apiVersion\": \"<string>\",\n  \"serviceRegistryPublishResponses\": [\n   {\n    \"serviceRegistryId\": \"<string>\",\n    \"serviceRegistryName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"gatewayEndpoints\": [\n     {\n      \"gatewayEndpoint\": \"<string>\",\n      \"status\": \"<string>\"\n     }\n    ],\n    \"success\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"failureReason\": \"<string>\"\n   },\n   {\n    \"serviceRegistryId\": \"<string>\",\n    \"serviceRegistryName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"gatewayEndpoints\": [\n     {\n      \"gatewayEndpoint\": \"<string>\",\n      \"status\": \"<string>\"\n     }\n    ],\n    \"success\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"failureReason\": \"<string>\"\n   }\n  ],\n  \"integrationServerPublishResponses\": [\n   {\n    \"integrationServerId\": \"<string>\",\n    \"integrationServerName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"success\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"failureReason\": \"<string>\"\n   },\n   {\n    \"integrationServerId\": \"<string>\",\n    \"integrationServerName\": \"<string>\",\n    \"status\": \"<string>\",\n    \"success\": \"<boolean>\",\n    \"description\": \"<string>\",\n    \"failureReason\": \"<string>\"\n   }\n  ]\n },\n \"publishResponses\": [\n  {\n   \"apiId\": \"<string>\",\n   \"apiName\": \"<string>\",\n   \"apiVersion\": \"<string>\",\n   \"serviceRegistryPublishResponses\": [\n    {\n     \"serviceRegistryId\": \"<string>\",\n     \"serviceRegistryName\": \"<string>\",\n     \"status\": \"<string>\",\n     \"gatewayEndpoints\": [\n      {\n       \"gatewayEndpoint\": \"<string>\",\n       \"status\": \"<string>\"\n      }\n     ],\n     \"success\": \"<boolean>\",\n     \"description\": \"<string>\",\n     \"failureReason\": \"<string>\"\n    },\n    {\n     \"serviceRegistryId\": \"<string>\",\n     \"serviceRegistryName\": \"<string>\",\n     \"status\": \"<string>\",\n     \"gatewayEndpoints\": [\n      {\n       \"gatewayEndpoint\": \"<string>\",\n       \"status\": \"<string>\"\n      }\n     ],\n     \"success\": \"<boolean>\",\n     \"description\": \"<string>\",\n     \"failureReason\": \"<string>\"\n    }\n   ],\n   \"integrationServerPublishResponses\": [\n    {\n     \"integrationServerId\": \"<string>\",\n     \"integrationServerName\": \"<string>\",\n     \"status\": \"<string>\",\n     \"success\": \"<boolean>\",\n     \"description\": \"<string>\",\n     \"failureReason\": \"<string>\"\n    },\n    {\n     \"integrationServerId\": \"<string>\",\n     \"integrationServerName\": \"<string>\",\n     \"status\": \"<string>\",\n     \"success\": \"<boolean>\",\n     \"description\": \"<string>\",\n     \"failureReason\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"apiId\": \"<string>\",\n   \"apiName\": \"<string>\",\n   \"apiVersion\": \"<string>\",\n   \"serviceRegistryPublishResponses\": [\n    {\n     \"serviceRegistryId\": \"<string>\",\n     \"serviceRegistryName\": \"<string>\",\n     \"status\": \"<string>\",\n     \"gatewayEndpoints\": [\n      {\n       \"gatewayEndpoint\": \"<string>\",\n       \"status\": \"<string>\"\n      }\n     ],\n     \"success\": \"<boolean>\",\n     \"description\": \"<string>\",\n     \"failureReason\": \"<string>\"\n    },\n    {\n     \"serviceRegistryId\": \"<string>\",\n     \"serviceRegistryName\": \"<string>\",\n     \"status\": \"<string>\",\n     \"gatewayEndpoints\": [\n      {\n       \"gatewayEndpoint\": \"<string>\",\n       \"status\": \"<string>\"\n      }\n     ],\n     \"success\": \"<boolean>\",\n     \"description\": \"<string>\",\n     \"failureReason\": \"<string>\"\n    }\n   ],\n   \"integrationServerPublishResponses\": [\n    {\n     \"integrationServerId\": \"<string>\",\n     \"integrationServerName\": \"<string>\",\n     \"status\": \"<string>\",\n     \"success\": \"<boolean>\",\n     \"description\": \"<string>\",\n     \"failureReason\": \"<string>\"\n    },\n    {\n     \"integrationServerId\": \"<string>\",\n     \"integrationServerName\": \"<string>\",\n     \"status\": \"<string>\",\n     \"success\": \"<boolean>\",\n     \"description\": \"<string>\",\n     \"failureReason\": \"<string>\"\n    }\n   ]\n  }\n ]\n}"
										},
										{
											"name": "Untitled Response",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publishInfo\": {\n        \"apiId\": \"<string>\",\n        \"serviceRegistryPublishInfo\": [\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            },\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            }\n        ],\n        \"integrationServerPublishInfo\": [\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            },\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            }\n        ]\n    },\n    \"publishInfos\": [\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/integrationServer/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrationServer",
														"publish"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that API with given apiId is not found in API Gateway",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publishInfo\": {\n        \"apiId\": \"<string>\",\n        \"serviceRegistryPublishInfo\": [\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            },\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            }\n        ],\n        \"integrationServerPublishInfo\": [\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            },\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            }\n        ]\n    },\n    \"publishInfos\": [\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/integrationServer/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrationServer",
														"publish"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates an invalid request body",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"publishInfo\": {\n        \"apiId\": \"<string>\",\n        \"serviceRegistryPublishInfo\": [\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            },\n            {\n                \"serviceRegistryId\": \"<string>\",\n                \"status\": \"<string>\",\n                \"name\": \"<string>\",\n                \"gatewayEndpoints\": [\n                    {\n                        \"gatewayEndpoint\": \"<string>\",\n                        \"status\": \"<string>\"\n                    }\n                ]\n            }\n        ],\n        \"integrationServerPublishInfo\": [\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            },\n            {\n                \"integrationServerId\": \"<string>\",\n                \"packageName\": \"<string>\",\n                \"folderName\": \"<string>\",\n                \"status\": \"<string>\",\n                \"integrationServerName\": \"<string>\"\n            }\n        ]\n    },\n    \"publishInfos\": [\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"apiId\": \"<string>\",\n            \"serviceRegistryPublishInfo\": [\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                },\n                {\n                    \"serviceRegistryId\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"name\": \"<string>\",\n                    \"gatewayEndpoints\": [\n                        {\n                            \"gatewayEndpoint\": \"<string>\",\n                            \"status\": \"<string>\"\n                        }\n                    ]\n                }\n            ],\n            \"integrationServerPublishInfo\": [\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                },\n                {\n                    \"integrationServerId\": \"<string>\",\n                    \"packageName\": \"<string>\",\n                    \"folderName\": \"<string>\",\n                    \"status\": \"<string>\",\n                    \"integrationServerName\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/integrationServer/publish",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrationServer",
														"publish"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Server Information",
					"item": [
						{
							"name": "Get Server Information",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/is/serverinfo",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"is",
										"serverinfo"
									]
								}
							},
							"response": [
								{
									"name": "Returns API Gateway server Information ",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/is/serverinfo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"is",
												"serverinfo"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"systemInfo\": {\n  \"CPU.type\": \"<string>\",\n  \"Hostname\": \"<string>\",\n  \"OS.Service.Pack\": \"<string>\",\n  \"HW.memory[GB]\": \"<string>\",\n  \"OS.Name\": \"<string>\",\n  \"OS.Release\": \"<string>\",\n  \"CPU.cores\": \"<string>\"\n },\n \"LicenseDetails\": [\n  {\n   \"Sales Information\": {\n    \"Serial Number\": \"<string>\",\n    \"License Key\": \"<string>\",\n    \"Customer ID\": \"<string>\",\n    \"Customer Name\": \"<string>\",\n    \"ContractDetails\": \"<string>\",\n    \"ContractPosNumber\": \"<string>\",\n    \"License Type Details\": \"<string>\",\n    \"AutoCallHome\": \"<string>\"\n   },\n   \"productInformation\": {\n    \"Expiration Date\": \"<string>\",\n    \"Operating System\": \"<string>\",\n    \"Product Code\": \"<string>\",\n    \"Product ID\": \"<string>\",\n    \"Product Name\": \"<string>\",\n    \"Product Version\": \"<string>\",\n    \"Usage\": \"<string>\",\n    \"RenewalDate\": \"<string>\",\n    \"HigherLevPosNr\": \"<string>\",\n    \"HigherLevProdCode\": \"<string>\",\n    \"HigherLevProdName\": \"<string>\"\n   },\n   \"integrationServer\": {\n    \"Product Code\": \"<string>\",\n    \"Product Version\": \"<string>\",\n    \"Concurrent Sessions\": \"<string>\",\n    \"Clustering\": \"<string>\",\n    \"Publish / Subscribe\": \"<string>\",\n    \"Adapter Runtime\": \"<string>\",\n    \"Remote Invoke\": \"<string>\",\n    \"Guaranteed Delivery\": \"<string>\",\n    \"Security Auditing\": \"<string>\",\n    \"Distributed Cache\": \"<string>\",\n    \"Enterprise Gateway\": \"<string>\"\n   },\n   \"licenseInformation\": {\n    \"Price Unit\": \"<string>\",\n    \"Price Quantity\": \"<string>\",\n    \"TypeOfInstallation\": \"<string>\",\n    \"LicenseType\": \"<string>\",\n    \"ExtendedRights\": \"<string>\",\n    \"LicenseVersion\": \"<string>\",\n    \"Metering\": \"<string>\"\n   },\n   \"API Gateway\": {\n    \"Policy Management - Threat Protection\": \"<string>\",\n    \"Policy Management - Gateway\": \"<string>\",\n    \"Application Management\": \"<string>\",\n    \"APIManagement\": \"<string>\"\n   }\n  },\n  {\n   \"Sales Information\": {\n    \"Serial Number\": \"<string>\",\n    \"License Key\": \"<string>\",\n    \"Customer ID\": \"<string>\",\n    \"Customer Name\": \"<string>\",\n    \"ContractDetails\": \"<string>\",\n    \"ContractPosNumber\": \"<string>\",\n    \"License Type Details\": \"<string>\",\n    \"AutoCallHome\": \"<string>\"\n   },\n   \"productInformation\": {\n    \"Expiration Date\": \"<string>\",\n    \"Operating System\": \"<string>\",\n    \"Product Code\": \"<string>\",\n    \"Product ID\": \"<string>\",\n    \"Product Name\": \"<string>\",\n    \"Product Version\": \"<string>\",\n    \"Usage\": \"<string>\",\n    \"RenewalDate\": \"<string>\",\n    \"HigherLevPosNr\": \"<string>\",\n    \"HigherLevProdCode\": \"<string>\",\n    \"HigherLevProdName\": \"<string>\"\n   },\n   \"integrationServer\": {\n    \"Product Code\": \"<string>\",\n    \"Product Version\": \"<string>\",\n    \"Concurrent Sessions\": \"<string>\",\n    \"Clustering\": \"<string>\",\n    \"Publish / Subscribe\": \"<string>\",\n    \"Adapter Runtime\": \"<string>\",\n    \"Remote Invoke\": \"<string>\",\n    \"Guaranteed Delivery\": \"<string>\",\n    \"Security Auditing\": \"<string>\",\n    \"Distributed Cache\": \"<string>\",\n    \"Enterprise Gateway\": \"<string>\"\n   },\n   \"licenseInformation\": {\n    \"Price Unit\": \"<string>\",\n    \"Price Quantity\": \"<string>\",\n    \"TypeOfInstallation\": \"<string>\",\n    \"LicenseType\": \"<string>\",\n    \"ExtendedRights\": \"<string>\",\n    \"LicenseVersion\": \"<string>\",\n    \"Metering\": \"<string>\"\n   },\n   \"API Gateway\": {\n    \"Policy Management - Threat Protection\": \"<string>\",\n    \"Policy Management - Gateway\": \"<string>\",\n    \"Application Management\": \"<string>\",\n    \"APIManagement\": \"<string>\"\n   }\n  }\n ],\n \"package\": \"<string>\",\n \"services\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"allSvcsMinusStarts\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"allSvcsMinusShuts\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"loadok\": \"<string>\",\n \"loaderr\": \"<string>\",\n \"loadwarning\": \"<string>\",\n \"startupServices\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"shutdownServices\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"version\": \"<string>\",\n \"build\": \"<string>\",\n \"description\": \"<string>\",\n \"patch_nums\": \"<object>\",\n \"jvm_version\": \"<string>\",\n \"publisher\": \"<string>\",\n \"time\": \"<object>\",\n \"listACL\": \"<string>\",\n \"message\": \"<string>\",\n \"code\": \"<string>\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Transaction Data Service",
					"item": [
						{
							"name": "Get Transactions Data",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/transactionalEvents/_search?apiName=Petstore&apiVersion=1.0&apiId=9e9212b5-e347-4bb0-8b68-a5a67bf40785&applicationName=Petstore_Application&applicationId=ed12d783-ef97-4b57-a0b5-7ca06805e8af&packageName=Gold Package&packageId=f3bb7723-75b1-48e4-9542-1b655d0493d4&planName=Silver Plan&planId=d8515eaf-9636-4a07-a355-238e9f7a6b00&from=0&size=1&fromDate=2020-05-05&toDate=2020-05-10",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"transactionalEvents",
										"_search"
									],
									"query": [
										{
											"key": "apiName",
											"value": "Petstore",
											"description": "The name of the API  for which the invocation details is required.The exact name must be provided or regular expressions can be used like API_.*"
										},
										{
											"key": "apiVersion",
											"value": "1.0",
											"description": "The version of the API"
										},
										{
											"key": "apiId",
											"value": "9e9212b5-e347-4bb0-8b68-a5a67bf40785",
											"description": "The system generated id for an API.The id of an can be retrieved from the API details screen"
										},
										{
											"key": "applicationName",
											"value": "Petstore_Application",
											"description": "The name of the Application for which the invocation details is required.The exact name must be provided or regular expressions can be used like APP_.*"
										},
										{
											"key": "applicationId",
											"value": "ed12d783-ef97-4b57-a0b5-7ca06805e8af",
											"description": "The system generated id for an Application.The id of an can be retrieved from the Application details screen"
										},
										{
											"key": "packageName",
											"value": "Gold Package",
											"description": "The name of the Package for which the invocation details is required.The exact name must be provided or regular expressions can be used like Package_.*"
										},
										{
											"key": "packageId",
											"value": "f3bb7723-75b1-48e4-9542-1b655d0493d4",
											"description": "The system generated id for a Package.The id of an can be retrieved from the Package details screen"
										},
										{
											"key": "planName",
											"value": "Silver Plan",
											"description": "The name of the Plan  for which the invocation details is required.The exact name must be provided or regular expressions can be used like Plan_.*"
										},
										{
											"key": "planId",
											"value": "d8515eaf-9636-4a07-a355-238e9f7a6b00",
											"description": "The system generated id for a Plan.The id of an can be retrieved from the Plan details screen"
										},
										{
											"key": "from",
											"value": "0",
											"description": "This parameter specifies the index from which the data has to be retrieved from the store. It is mainly used during pagination where the data is retrieved in batches"
										},
										{
											"key": "size",
											"value": "1",
											"description": "This parameter specifies the number of records that should be present in the response. This can be combined with the parameter - from to get the records in batches during pagination."
										},
										{
											"key": "fromDate",
											"value": "2020-05-05",
											"description": "(Required) This is the date from which the invocation details has to be retrieved for the matching filter criteria.It is a mandatory parameter and it should be of the format YYYY-MM-DD. Regular expression support is not available for this parameter"
										},
										{
											"key": "toDate",
											"value": "2020-05-10",
											"description": "(Required) This is the date to which the invocation details has to be retrieved for the matching filter criteria.It is a mandatory parameter and it should be of the format YYYY-MM-DD. Regular expression support is not available for this parameter"
										}
									]
								},
								"description": "This method can be used to retrieve the transaction events for a given API/Application/Plan/Package for a specific period of time. Multiple request parameters of this method provide options to specify the request criteria to match the expected result and most of these input parameters supports regular expression in their values. Along with the mandatory parameters - fromDate and toDate, any one of the other filter criteria should be passed in the request."
							},
							"response": [
								{
									"name": "One optional parameter along with fromDate and toData is required",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/transactionalEvents/_search?apiName=<string>&apiVersion=<string>&apiId=<string>&applicationName=<string>&applicationId=<string>&packageName=<string>&packageId=<string>&planName=<string>&planId=<string>&from=<integer>&size=<integer>&fromDate=<date>&toDate=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalEvents",
												"_search"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												},
												{
													"key": "apiId",
													"value": "<string>"
												},
												{
													"key": "applicationName",
													"value": "<string>"
												},
												{
													"key": "applicationId",
													"value": "<string>"
												},
												{
													"key": "packageName",
													"value": "<string>"
												},
												{
													"key": "packageId",
													"value": "<string>"
												},
												{
													"key": "planName",
													"value": "<string>"
												},
												{
													"key": "planId",
													"value": "<string>"
												},
												{
													"key": "from",
													"value": "<integer>"
												},
												{
													"key": "size",
													"value": "<integer>"
												},
												{
													"key": "fromDate",
													"value": "<date>"
												},
												{
													"key": "toDate",
													"value": "<date>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{ \\\"errorDetails\\\": \\\" Insufficient parameters. At least one parameter in addition to the creation date range must be provided.\\\"}\""
								},
								{
									"name": "This response indicates that invalid credentials have been provided for the request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/transactionalEvents/_search?apiName=<string>&apiVersion=<string>&apiId=<string>&applicationName=<string>&applicationId=<string>&packageName=<string>&packageId=<string>&planName=<string>&planId=<string>&from=<integer>&size=<integer>&fromDate=<date>&toDate=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalEvents",
												"_search"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												},
												{
													"key": "apiId",
													"value": "<string>"
												},
												{
													"key": "applicationName",
													"value": "<string>"
												},
												{
													"key": "applicationId",
													"value": "<string>"
												},
												{
													"key": "packageName",
													"value": "<string>"
												},
												{
													"key": "packageId",
													"value": "<string>"
												},
												{
													"key": "planName",
													"value": "<string>"
												},
												{
													"key": "planId",
													"value": "<string>"
												},
												{
													"key": "from",
													"value": "<integer>"
												},
												{
													"key": "size",
													"value": "<integer>"
												},
												{
													"key": "fromDate",
													"value": "<date>"
												},
												{
													"key": "toDate",
													"value": "<date>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Array of transactional events.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/transactionalEvents/_search?apiName=<string>&apiVersion=<string>&apiId=<string>&applicationName=<string>&applicationId=<string>&packageName=<string>&packageId=<string>&planName=<string>&planId=<string>&from=<integer>&size=<integer>&fromDate=<date>&toDate=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalEvents",
												"_search"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												},
												{
													"key": "apiId",
													"value": "<string>"
												},
												{
													"key": "applicationName",
													"value": "<string>"
												},
												{
													"key": "applicationId",
													"value": "<string>"
												},
												{
													"key": "packageName",
													"value": "<string>"
												},
												{
													"key": "packageId",
													"value": "<string>"
												},
												{
													"key": "planName",
													"value": "<string>"
												},
												{
													"key": "planId",
													"value": "<string>"
												},
												{
													"key": "from",
													"value": "<integer>"
												},
												{
													"key": "size",
													"value": "<integer>"
												},
												{
													"key": "fromDate",
													"value": "<date>"
												},
												{
													"key": "toDate",
													"value": "<date>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"transaction\\\": [\\r\\n    {\\r\\n      \\\"creationDate\\\": 1487229288461,\\r\\n      \\\"apiName\\\": \\\"PetStoreTest\\\",\\r\\n      \\\"apiVersion\\\": \\\"1.0.0\\\",\\r\\n      \\\"apiId\\\": \\\"73c40484-678a-4fb0-a56c-21119869e5f4\\\",\\r\\n      \\\"totalTime\\\": 1386,\\r\\n      \\\"providerTime\\\": 1336,\\r\\n      \\\"applicationName\\\": \\\"testApp\\\",\\r\\n      \\\"applicationId\\\": \\\"10727b01-e13a-4c5d-b39e-c5c336101e21\\\",\\r\\n      \\\"status\\\": \\\"SUCCESS\\\",\\r\\n      \\\"totalDataSize\\\": 1341,\\r\\n      \\\"responseCode\\\": \\\"200\\\",\\r\\n      \\\"operationName\\\": \\\"/pet\\\",\\r\\n      \\\"httpMethod\\\": \\\"post\\\",\\r\\n      \\\"packageName\\\": \\\"TestPackage\\\",\\r\\n      \\\"packageId\\\": \\\"7aafd5c8-3ea4-454f-ae78-d9ffc328672a\\\",\\r\\n      \\\"planName\\\": \\\"TestPlan\\\",\\r\\n      \\\"planId\\\": \\\"70369925-27f9-4c8a-b078-ca057516735e\\\"\\r\\n    }\\r\\n  ]\\r\\n}\""
								}
							]
						},
						{
							"name": "Get Transactions Data Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/transactionalEvents/_count?apiName=Petstore&apiVersion=1.0&apiId=9e9212b5-e347-4bb0-8b68-a5a67bf40785&applicationName=Petstore_Application&applicationId=ed12d783-ef97-4b57-a0b5-7ca06805e8af&packageName=Gold Package&packageId=f3bb7723-75b1-48e4-9542-1b655d0493d4&planName=Silver Plan&planId=d8515eaf-9636-4a07-a355-238e9f7a6b00&from=0&size=1&fromDate=2020-05-05&toDate=2020-05-10",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"transactionalEvents",
										"_count"
									],
									"query": [
										{
											"key": "apiName",
											"value": "Petstore",
											"description": "The name of the API  for which the invocation count is required.The exact name must be provided or regular expressions can be used like API_.*"
										},
										{
											"key": "apiVersion",
											"value": "1.0",
											"description": "The version of the API"
										},
										{
											"key": "apiId",
											"value": "9e9212b5-e347-4bb0-8b68-a5a67bf40785",
											"description": "The system generated id for an API.The id of an can be retrieved from the API details screen"
										},
										{
											"key": "applicationName",
											"value": "Petstore_Application",
											"description": "The name of the Application for which the invocation count is required.The exact name must be provided or regular expressions can be used like APP_.*"
										},
										{
											"key": "applicationId",
											"value": "ed12d783-ef97-4b57-a0b5-7ca06805e8af",
											"description": "The system generated id for an Application.The id of an can be retrieved from the Application details screen"
										},
										{
											"key": "packageName",
											"value": "Gold Package",
											"description": "The name of the Package for which the invocation count is required.The exact name must be provided or regular expressions can be used like Package_.*"
										},
										{
											"key": "packageId",
											"value": "f3bb7723-75b1-48e4-9542-1b655d0493d4",
											"description": "The system generated id for a Package.The id of an can be retrieved from the Package details screen"
										},
										{
											"key": "planName",
											"value": "Silver Plan",
											"description": "The name of the Plan  for which the invocation count is required.The exact name must be provided or regular expressions can be used like Plan_.*"
										},
										{
											"key": "planId",
											"value": "d8515eaf-9636-4a07-a355-238e9f7a6b00",
											"description": "The system generated id for a Plan.The id of an can be retrieved from the Plan details screen"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "size",
											"value": "1"
										},
										{
											"key": "fromDate",
											"value": "2020-05-05",
											"description": "(Required) This is the date from which the count has to be retrieved for the matching filter criteria.It is a mandatory parameter and it should be of the format YYYY-MM-DD. Regular expression support is not available for this parameter"
										},
										{
											"key": "toDate",
											"value": "2020-05-10",
											"description": "(Required) This is the date to which the count has to be retrieved for the matching filter criteria.It is a mandatory parameter and it should be of the format YYYY-MM-DD. Regular expression support is not available for this parameter"
										}
									]
								},
								"description": "This method can be used to retrieve the number of transaction events for a given API/Application/Plan/Package for a specific period of time. Multiple request parameters of this method provide options to specify the request criteria to match the expected result and most of these input parameters supports regular expression in their values. Along with the mandatory parameters - fromDate and toDate, any one of the other filter criteria should be passed in the request."
							},
							"response": [
								{
									"name": "Array of transactional events count grouped by apiId and api version.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/transactionalEvents/_count?apiName=<string>&apiVersion=<string>&apiId=<string>&applicationName=<string>&applicationId=<string>&packageName=<string>&packageId=<string>&planName=<string>&planId=<string>&fromDate=<date>&toDate=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalEvents",
												"_count"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												},
												{
													"key": "apiId",
													"value": "<string>"
												},
												{
													"key": "applicationName",
													"value": "<string>"
												},
												{
													"key": "applicationId",
													"value": "<string>"
												},
												{
													"key": "packageName",
													"value": "<string>"
												},
												{
													"key": "packageId",
													"value": "<string>"
												},
												{
													"key": "planName",
													"value": "<string>"
												},
												{
													"key": "planId",
													"value": "<string>"
												},
												{
													"key": "fromDate",
													"value": "<date>"
												},
												{
													"key": "toDate",
													"value": "<date>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"count\\\": [\\r\\n    {\\r\\n      \\\"apiName\\\": \\\"PetStoreTest\\\",\\r\\n      \\\"apiVersion\\\": \\\"1.0.0\\\",\\r\\n      \\\"count\\\": 2\\r\\n    }\\r\\n  ]\\r\\n}\""
								},
								{
									"name": "This response indicates that invalid credentials have been provided for the request.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/transactionalEvents/_count?apiName=<string>&apiVersion=<string>&apiId=<string>&applicationName=<string>&applicationId=<string>&packageName=<string>&packageId=<string>&planName=<string>&planId=<string>&fromDate=<date>&toDate=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalEvents",
												"_count"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												},
												{
													"key": "apiId",
													"value": "<string>"
												},
												{
													"key": "applicationName",
													"value": "<string>"
												},
												{
													"key": "applicationId",
													"value": "<string>"
												},
												{
													"key": "packageName",
													"value": "<string>"
												},
												{
													"key": "packageId",
													"value": "<string>"
												},
												{
													"key": "planName",
													"value": "<string>"
												},
												{
													"key": "planId",
													"value": "<string>"
												},
												{
													"key": "fromDate",
													"value": "<date>"
												},
												{
													"key": "toDate",
													"value": "<date>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "One optional parameter along with fromDate and toDate is mandatory",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/transactionalEvents/_count?apiName=<string>&apiVersion=<string>&apiId=<string>&applicationName=<string>&applicationId=<string>&packageName=<string>&packageId=<string>&planName=<string>&planId=<string>&fromDate=<date>&toDate=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalEvents",
												"_count"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												},
												{
													"key": "apiId",
													"value": "<string>"
												},
												{
													"key": "applicationName",
													"value": "<string>"
												},
												{
													"key": "applicationId",
													"value": "<string>"
												},
												{
													"key": "packageName",
													"value": "<string>"
												},
												{
													"key": "packageId",
													"value": "<string>"
												},
												{
													"key": "planName",
													"value": "<string>"
												},
												{
													"key": "planId",
													"value": "<string>"
												},
												{
													"key": "fromDate",
													"value": "<date>"
												},
												{
													"key": "toDate",
													"value": "<date>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{ \\\"errorDetails\\\": \\\" Insufficient parameters. At least one parameter in addition to the creation date range must be provided.\\\"}\""
								}
							]
						}
					],
					"description": "Explanation:\n\nSearch the transactions data using multiple parameter combinatins like\n1. API\n2. Application\n3. Package\n4. Plan",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "User Management",
					"item": [
						{
							"name": "Users",
							"item": [
								{
									"name": "Get All Users",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										},
										"description": "The method retrieves list of all users in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that the list of users is successfully retrieved.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"users\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"Administrator\\\",\\r\\n            \\\"loginId\\\": \\\"Administrator\\\",\\r\\n            \\\"firstName\\\": \\\"Administrator\\\",\\r\\n            \\\"password\\\": \\\"********************************\\\",\\r\\n            \\\"type\\\": \\\"local\\\",\\r\\n            \\\"allowDigestAuth\\\": false,\\r\\n            \\\"active\\\": true,\\r\\n            \\\"systemDefined\\\": true,\\r\\n            \\\"language\\\": \\\"en\\\",\\r\\n             \\\"emailAddresses\\\": []\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"15fbeeb2-745c-4988-b7b6-61f359ecbfc8\\\",\\r\\n            \\\"loginId\\\": \\\"testUser\\\",\\r\\n            \\\"firstName\\\": \\\"User\\\",\\r\\n            \\\"lastName\\\": \\\"Test\\\",\\r\\n            \\\"password\\\": \\\"********************************\\\",\\r\\n            \\\"type\\\": \\\"local\\\",\\r\\n            \\\"allowDigestAuth\\\": false,\\r\\n            \\\"active\\\": true,\\r\\n            \\\"systemDefined\\\": false,\\r\\n            \\\"language\\\": \\\"ja\\\",\\r\\n            \\\"emailAddresses\\\": [\\r\\n                \\\"noreply@softwareag.com\\\"\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\\r\\n\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create User",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Gokul Raj\",\n    \"lastName\": \"Shanmugam\",\n    \"loginId\": \"GatewayUser\",\n    \"emailAddresses\": [\n        \"gora@softwareag.com\"\n    ],\n    \"password\": \"manage\",\n    \"allowDigestAuth\": false\n}"
										},
										"url": {
											"raw": "{{baseURL}}/users",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users"
											]
										},
										"description": "The method creates an user in API Gateway. The API request body must contain the payload for the user."
									},
									"response": [
										{
											"name": "This status code indicates that the user has been successfully created in API Gateway, and the newly created user is available in the response body.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"loginId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowDigestAuth\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"language\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n            \\\"id\\\": \\\"15fbeeb2-745c-4988-b7b6-61f359ecbfc8\\\",\\r\\n            \\\"loginId\\\": \\\"testUser\\\",\\r\\n            \\\"firstName\\\": \\\"User\\\",\\r\\n            \\\"lastName\\\": \\\"Test\\\",\\r\\n            \\\"password\\\": \\\"********************************\\\",\\r\\n            \\\"type\\\": \\\"local\\\",\\r\\n            \\\"allowDigestAuth\\\": false,\\r\\n            \\\"active\\\": true,\\r\\n            \\\"language\\\": \\\"en\\\",\\r\\n            \\\"emailAddresses\\\": [\\r\\n                \\\"noreply@softwareag.com\\\"\\r\\n            ]\\r\\n        }\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"loginId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowDigestAuth\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"language\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that an user with the given loginId already exists in API Gateway or the request body is not correct.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"loginId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowDigestAuth\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"language\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get User by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/users/:userId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "d120a8a4-7d54-4cae-aab4-758e7f39f6b2",
													"description": "(Required) The path parameter specifies the id of an user whose details are to be retrieved."
												}
											]
										},
										"description": "The method retrieves the details of an user in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that an user with the given id could not be found in API Gateway.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\" User with id: 15fbeeb2-745c-4988-b7b6-61f359ecbfc8 does not exist.\\\"\\r\\n}\""
										},
										{
											"name": "This status code indicates that the details of the user is successfully retrieved.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"users\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"15fbeeb2-745c-4988-b7b6-61f359ecbfc8\\\",\\r\\n            \\\"loginId\\\": \\\"testUser\\\",\\r\\n            \\\"firstName\\\": \\\"User\\\",\\r\\n            \\\"lastName\\\": \\\"Test\\\",\\r\\n            \\\"password\\\": \\\"********************************\\\",\\r\\n            \\\"type\\\": \\\"local\\\",\\r\\n            \\\"allowDigestAuth\\\": false,\\r\\n            \\\"active\\\": true,\\r\\n            \\\"emailAddresses\\\": [\\r\\n                \\\"noreply@softwareag.com\\\"\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update User",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"d5233ce1-2b50-4c24-aec3-6dcc60a98876\",\r\n    \"loginId\": \"GatewayUser\",\r\n    \"firstName\": \"Admin\",\r\n    \"lastName\": \"Sales\",\r\n    \"language\": \"\",\r\n    \"password\": \"manage\",\r\n    \"type\": \"local\",\r\n    \"allowDigestAuth\": true,\r\n    \"active\": true,\r\n    \"emailAddresses\": [\r\n        \"gora@softwareag.com\"\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{baseURL}}/users/:userId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "d5233ce1-2b50-4c24-aec3-6dcc60a98876",
													"description": "(Required) The path parameter specifies the id of an user whose detail is to be updated in API Gateway."
												}
											]
										},
										"description": "The method updates the details of a specified user in API Gateway. The API request body must contain the payload for the updated user."
									},
									"response": [
										{
											"name": "This status code indicates that the user has been successfully updated in API Gateway, and the updated user is available in the response body.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"loginId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowDigestAuth\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"language\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n  \\\"id\\\": \\\"15fbeeb2-745c-4988-b7b6-61f359ecbfc8\\\",\\r\\n            \\\"loginId\\\": \\\"testUser\\\",\\r\\n            \\\"firstName\\\": \\\"User\\\",\\r\\n            \\\"lastName\\\": \\\"Test\\\",\\r\\n            \\\"password\\\": \\\"test\\\",\\r\\n            \\\"type\\\": \\\"local\\\",\\r\\n            \\\"allowDigestAuth\\\": false,\\r\\n            \\\"emailAddresses\\\": [\\r\\n                \\\"noreply@softwareag.com\\\"\\r\\n            ]\\r\\n        }\""
										},
										{
											"name": "This status code indicates that the request body is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"loginId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowDigestAuth\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"language\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"loginId\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddresses\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"allowDigestAuth\": \"<boolean>\",\n    \"active\": \"<boolean>\",\n    \"language\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete User",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/users/:userId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "d120a8a4-7d54-4cae-aab4-758e7f39f6b2",
													"description": "(Required) This parameter specifies the ID of an application that is to be deleted in API Gateway."
												}
											]
										},
										"description": "This HTTP request deletes the specified application in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the specified user has been successfully deleted from API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that an user with the given id could not be found in API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\" User with id: 732c4526-db9a-4ef9-9782-edda1a6aa9bc does not exist.\\\"\\r\\n}\""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Groups",
							"item": [
								{
									"name": "Get All Groups",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/groups",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"groups"
											]
										},
										"description": "The method retrieves list of all groups in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that the list of groups is successfully retrieved.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"groups\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"Administrators\\\",\\r\\n            \\\"name\\\": \\\"Administrators\\\",\\r\\n            \\\"description\\\": \\\"Users added to this group can perform similar local administrative tasks.\\\",\\r\\n            \\\"type\\\": \\\"local\\\",\\r\\n            \\\"systemDefined\\\": true,\\r\\n            \\\"userIds\\\": [\\r\\n                \\\"Administrator\\\"\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"API-Gateway-Administrators\\\",\\r\\n            \\\"name\\\": \\\"API-Gateway-Administrators\\\",\\r\\n            \\\"description\\\": \\\"Users added to this group can perform similar API Gateway Administrative tasks.\\\",\\r\\n            \\\"type\\\": \\\"local\\\",\\r\\n            \\\"systemDefined\\\": true,\\r\\n            \\\"userIds\\\": [\\r\\n                \\\"Administrator\\\"\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"API-Gateway-Providers\\\",\\r\\n            \\\"name\\\": \\\"API-Gateway-Providers\\\",\\r\\n            \\\"description\\\": \\\"Users added to this group can perform similar API Gateway Providers tasks.\\\",\\r\\n            \\\"type\\\": \\\"local\\\",\\r\\n            \\\"systemDefined\\\": true,\\r\\n            \\\"userIds\\\": []\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\",\\r\\n            \\\"name\\\": \\\"TestGrp\\\",\\r\\n            \\\"description\\\": \\\"\\\",\\r\\n            \\\"type\\\": \\\"local\\\",\\r\\n            \\\"systemDefined\\\": false,\\r\\n            \\\"userIds\\\": [\\r\\n                \\\"69aa914e-fbfc-4c74-87f1-2d48f589e115\\\"\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Group",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"userIds\": [\n        \"d5233ce1-2b50-4c24-aec3-6dcc60a98876\"\n    ],\n    \"name\": \"GatewayGroup\",\n    \"description\": \"description flows here\"\n}"
										},
										"url": {
											"raw": "{{baseURL}}/groups",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"groups"
											]
										},
										"description": "The method creates a group in API Gateway. The API request body must contain the payload for the group."
									},
									"response": [
										{
											"name": "This status code indicates that a group with the given name already exists in API Gateway or the request body is not correct.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"userIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"userIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the group has been successfully created in API Gateway, and the newly created group is available in the response body.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"userIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n\\t\\\"id\\\": \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\",\\r\\n\\t\\\"name\\\": \\\"TestGrp\\\",\\r\\n\\t\\\"description\\\": \\\"Group has all QA Members\\\",\\r\\n\\t\\\"type\\\": \\\"local\\\",\\r\\n\\t\\\"userIds\\\": [\\r\\n\\t\\t\\\"69aa914e-fbfc-4c74-87f1-2d48f589e115\\\"\\r\\n\\t]\\r\\n}\""
										}
									]
								},
								{
									"name": "Get Group details by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/groups/:groupId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "af738f07-f32a-4101-9cc4-e697bec4a9d9",
													"description": "(Required) The path parameter specifies the id of a group whose details are to be retrieved."
												}
											]
										},
										"description": "The method retrieves the details of a group in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that the details of the group is successfully retrieved.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/groups/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"groups\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\",\\r\\n            \\\"name\\\": \\\"TestGrp\\\",\\r\\n            \\\"description\\\": \\\"Group has all QA Members\\\",\\r\\n            \\\"type\\\": \\\"local\\\",\\r\\n            \\\"userIds\\\": [\\r\\n                \\\"69aa914e-fbfc-4c74-87f1-2d48f589e115\\\"\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\""
										},
										{
											"name": "This status code indicates that either group didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/groups/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that a group with the given id could not be found in API Gateway.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/groups/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\" Group with id: 15fbeeb2-745c-4988-b7b6-61f359ecbfc8 does not exist.\\\"\\r\\n}\""
										}
									]
								},
								{
									"name": "Update Group",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"af738f07-f32a-4101-9cc4-e697bec4a9d9\",\n    \"userIds\": [\n        \"d5233ce1-2b50-4c24-aec3-6dcc60a98876\"\n    ],\n    \"name\": \"GatewayGroup\",\n    \"description\": \"description flows here\"\n}"
										},
										"url": {
											"raw": "{{baseURL}}/groups/:groupId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "af738f07-f32a-4101-9cc4-e697bec4a9d9",
													"description": "(Required) The path parameter specifies the id of a group whose detail is to be updated in API Gateway."
												}
											]
										},
										"description": "The method updates the details of a specified group in API Gateway. The API request body must contain the payload for the updated group."
									},
									"response": [
										{
											"name": "This status code indicates that the request body is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"userIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"userIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the group has been successfully updated in API Gateway, and the updated group is available in the response body.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"userIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/groups/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n\\t\\\"id\\\": \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\",\\r\\n\\t\\\"name\\\": \\\"TestGrp\\\",\\r\\n\\t\\\"description\\\": \\\"Group has all QA Members\\\",\\r\\n\\t\\\"type\\\": \\\"local\\\",\\r\\n\\t\\\"userIds\\\": [\\r\\n\\t\\t\\\"69aa914e-fbfc-4c74-87f1-2d48f589e115\\\"\\r\\n\\t]\\r\\n}\""
										}
									]
								},
								{
									"name": "Delete Group",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/groups/:groupId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"groups",
												":groupId"
											],
											"variable": [
												{
													"key": "groupId",
													"value": "af738f07-f32a-4101-9cc4-e697bec4a9d9",
													"description": "(Required) The path parameter specifies the id of a group that is to be deleted from API Gateway."
												}
											]
										},
										"description": "The method deletes a group from API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that group with the given id could not be found in API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/groups/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\" Group with id: 732c4526-db9a-4ef9-9782-edda1a6aa9bc does not exist.\\\"\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/groups/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the specified group has been successfully deleted from API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/groups/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":groupId"
													],
													"variable": [
														{
															"key": "groupId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Access Profiles",
							"item": [
								{
									"name": "Get All Access Profiles",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/accessProfiles",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"accessProfiles"
											]
										},
										"description": "The method retrieves list of all teams in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/accessProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the list of teams is successfully retrieved.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/accessProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"accessProfiles\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"Administrators\\\",\\r\\n            \\\"name\\\": \\\"Administrators\\\",\\r\\n            \\\"description\\\": \\\"Groups associated to this team are allowed to perform all the administration related tasks. \\\",\\r\\n            \\\"systemDefined\\\": true,\\r\\n            \\\"privilege\\\": \\\"1111111111111111111111111111111111111111111111111111111111111111\\\",\\r\\n            \\\"groupIds\\\": [\\r\\n                \\\"Administrators\\\",\\r\\n                \\\"API-Gateway-Administrators\\\"\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"API-Gateway-Providers\\\",\\r\\n            \\\"name\\\": \\\"API-Gateway-Providers\\\",\\r\\n            \\\"description\\\": \\\"Groups associated to this team are allowed to access an asset based on the functional privileges assigned to this team.\\\",\\r\\n            \\\"systemDefined\\\": true,\\r\\n            \\\"privilege\\\": \\\"111100101101100000001\\\",\\r\\n            \\\"groupIds\\\": [\\r\\n                \\\"API-Gateway-Providers\\\"\\r\\n            ]\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"8b6f2e10-1d82-4813-b927-4c1cf4a4d029\\\",\\r\\n            \\\"name\\\": \\\"TestProfile\\\",\\r\\n            \\\"description\\\": \\\"Test\\\",\\r\\n            \\\"systemDefined\\\": false,\\r\\n            \\\"privilege\\\": \\\"101110000001100000110101\\\",\\r\\n            \\\"groupIds\\\": [\\r\\n                \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\"\\r\\n            ],\\r\\n            \\\"teamAdmin\\\": {\\r\\n                \\\"userIds\\\": [\\r\\n                    \\\"user1\\\"\\r\\n                ],\\r\\n                \\\"groupIds\\\": [\\r\\n                    \\\"group1\\\"\\r\\n                ]\\r\\n            }\\r\\n\\r\\n        }\\r\\n    ]\\r\\n}\""
										}
									]
								},
								{
									"name": "Create Access Profile",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"groupIds\": [\n        \"API-Gateway-Providers\"\n    ],\n    \"groups\": [],\n    \"privilege\": \"111111111111111111111111111\",\n    \"name\": \"GatewayTeam\",\n    \"description\": \"description flows here\",\n    \"teamAdmin\": {\n        \"userIds\": [\n            \"d5233ce1-2b50-4c24-aec3-6dcc60a98876\"\n        ],\n        \"groupIds\": [\n            \"af738f07-f32a-4101-9cc4-e697bec4a9d9\"\n        ],\n        \"users\": [],\n        \"groups\": []\n    }\n}"
										},
										"url": {
											"raw": "{{baseURL}}/accessProfiles",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"accessProfiles"
											]
										},
										"description": "The method creates a team in API Gateway. The API request body must contain the payload for the team. Each bit infers the applicability of the functional privilege permission. Value 1 implies permission granted for that functional privilege. Value  0 implies denied permission. Function Privileges and its positions from left most bit to the right most bit. 1.Manage APIs2.Activate / Deactivate APIs3.Manage applications4.Manage aliases5.Manage global policies6.Activate / Deactivate global policies7.Manage policy templates8.Manage threat protection configurations9.Manage packages and plans10.Activate / Deactivate packages11.Publish to API Portal12.Import assets13.Export assets14.View administration configurations15.Manage general administration configurations16.Manage security configurations17.Manage destination configurations18.Manage system settings19.Manage user administration20.Manage purge and restore runtime events21.Execute service result cache APIs22.Manage Promotion23.Publish API to Service Registry24.Manage Service Registries"
									},
									"response": [
										{
											"name": "This status code indicates that the team has been successfully created in API Gateway, and the newly created team is available in the response body.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"privilege\": {\n        \"empty\": \"<boolean>\"\n    },\n    \"groupIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"teamAdmin\": {\n        \"userIds\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"groupIds\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/accessProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"id\\\": \\\"8b6f2e10-1d82-4813-b927-4c1cf4a4d029\\\",\\r\\n    \\\"name\\\": \\\"TestProfile\\\",\\r\\n    \\\"description\\\": \\\"Test\\\",\\r\\n    \\\"privilege\\\": \\\"101110000001100000110101\\\",\\r\\n    \\\"groupIds\\\": [\\r\\n        \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\"\\r\\n    ],\\r\\n    \\\"teamAdmin\\\": {\\r\\n        \\\"userIds\\\": [\\r\\n    \\\"Administrator\\\"\\r\\n        ],\\r\\n        \\\"groupIds\\\": [\\r\\n    \\\"Administrators\\\"\\r\\n        ]\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"privilege\": {\n        \"empty\": \"<boolean>\"\n    },\n    \"groupIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"teamAdmin\": {\n        \"userIds\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"groupIds\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/accessProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that a team with the given name already exists in API Gateway or the request body is not correct.",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"privilege\": {\n        \"empty\": \"<boolean>\"\n    },\n    \"groupIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"teamAdmin\": {\n        \"userIds\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"groupIds\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/accessProfiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Access Profile details by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/accessProfiles/:accessProfileId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"accessProfiles",
												":accessProfileId"
											],
											"variable": [
												{
													"key": "accessProfileId",
													"value": "d20206ad-dc30-43f6-9f04-b92f9a31139c",
													"description": "(Required) The path parameter specifies the id of a team whose details are to be retrieved."
												}
											]
										},
										"description": "The method retrieves the details of a team in API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/accessProfiles/:accessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles",
														":accessProfileId"
													],
													"variable": [
														{
															"key": "accessProfileId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the details of the team is successfully retrieved.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/accessProfiles/:accessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles",
														":accessProfileId"
													],
													"variable": [
														{
															"key": "accessProfileId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"id\\\": \\\"8b6f2e10-1d82-4813-b927-4c1cf4a4d029\\\",\\r\\n    \\\"name\\\": \\\"TestProfile\\\",\\r\\n    \\\"description\\\": \\\"Test\\\",\\r\\n    \\\"systemDefined\\\": false,\\r\\n    \\\"privilege\\\": \\\"1011100000011000001\\\",\\r\\n    \\\"groupIds\\\": [\\r\\n        \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\"\\r\\n    ],\\r\\n    \\\"teamAdmin\\\": {\\r\\n        \\\"userIds\\\": [\\r\\n            \\\"Administrator\\\"\\r\\n        ],\\r\\n        \\\"groupIds\\\": [\\r\\n            \\\"Administrators\\\"\\r\\n        ]\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code indicates that a team with the given id could not be found in API Gateway.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/accessProfiles/:accessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles",
														":accessProfileId"
													],
													"variable": [
														{
															"key": "accessProfileId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\" AccessProfile with id: 15fbeeb2-745c-4988-b7b6-61f359ecbfc8 does not exist.\\\"\\r\\n}\""
										}
									]
								},
								{
									"name": "Update Access Profile",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"d20206ad-dc30-43f6-9f04-b92f9a31139c\",\n    \"groupIds\": [\n        \"API-Gateway-Providers\"\n    ],\n    \"groups\": [],\n    \"privilege\": \"111111111111111111111111111\",\n    \"name\": \"GatewayTeam\",\n    \"description\": \"description flows here\",\n    \"teamAdmin\": {\n        \"userIds\": [\n            \"d5233ce1-2b50-4c24-aec3-6dcc60a98876\"\n        ],\n        \"groupIds\": [\n            \"af738f07-f32a-4101-9cc4-e697bec4a9d9\"\n        ],\n        \"users\": [],\n        \"groups\": []\n    }\n}"
										},
										"url": {
											"raw": "{{baseURL}}/accessProfiles/:accessProfileId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"accessProfiles",
												":accessProfileId"
											],
											"variable": [
												{
													"key": "accessProfileId",
													"value": "d20206ad-dc30-43f6-9f04-b92f9a31139c",
													"description": "(Required) The path parameter specifies the id of a team whose detail is to be updated in API Gateway."
												}
											]
										},
										"description": "The method updates the details of a specified team in API Gateway. The API request body must contain the payload for the updated accessProfile."
									},
									"response": [
										{
											"name": "This status code indicates that the team has been successfully updated in API Gateway, and the updated team is available in the response body.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"privilege\": {\n        \"empty\": \"<boolean>\"\n    },\n    \"groupIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"teamAdmin\": {\n        \"userIds\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"groupIds\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/accessProfiles/:accessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles",
														":accessProfileId"
													],
													"variable": [
														{
															"key": "accessProfileId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"id\\\": \\\"8b6f2e10-1d82-4813-b927-4c1cf4a4d029\\\",\\r\\n    \\\"name\\\": \\\"TestProfile\\\",\\r\\n    \\\"description\\\": \\\"Test\\\",\\r\\n    \\\"systemDefined\\\": false,\\r\\n    \\\"privilege\\\": \\\"1011100000011000001\\\",\\r\\n    \\\"groupIds\\\": [\\r\\n        \\\"be9147a8-6e53-4472-b1bd-16337a84d314\\\"\\r\\n    ],\\r\\n    \\\"teamAdmin\\\": {\\r\\n        \\\"userIds\\\": [\\r\\n            \\\"Administrator\\\"\\r\\n        ],\\r\\n        \\\"groupIds\\\": [\\r\\n            \\\"Administrators\\\"\\r\\n        ]\\r\\n    }\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"privilege\": {\n        \"empty\": \"<boolean>\"\n    },\n    \"groupIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"teamAdmin\": {\n        \"userIds\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"groupIds\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/accessProfiles/:accessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles",
														":accessProfileId"
													],
													"variable": [
														{
															"key": "accessProfileId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the request body is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"privilege\": {\n        \"empty\": \"<boolean>\"\n    },\n    \"groupIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"teamAdmin\": {\n        \"userIds\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"groupIds\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/accessProfiles/:accessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles",
														":accessProfileId"
													],
													"variable": [
														{
															"key": "accessProfileId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Access Profile",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/accessProfiles/:accessProfileId",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"accessProfiles",
												":accessProfileId"
											],
											"variable": [
												{
													"key": "accessProfileId",
													"value": "d20206ad-dc30-43f6-9f04-b92f9a31139c",
													"description": "(Required) This parameter specifies the ID of a team that is to be deleted in API Gateway."
												}
											]
										},
										"description": "The method deletes a team from API Gateway."
									},
									"response": [
										{
											"name": "This status code indicates that the specified team has been successfully deleted from API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/accessProfiles/:accessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles",
														":accessProfileId"
													],
													"variable": [
														{
															"key": "accessProfileId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that team with the given id could not be found in API Gateway.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/accessProfiles/:accessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles",
														":accessProfileId"
													],
													"variable": [
														{
															"key": "accessProfileId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\" AccessProfile with id: 732c4526-db9a-4ef9-9782-edda1a6aa9bc does not exist.\\\"\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges to access this API.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/accessProfiles/:accessProfileId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"accessProfiles",
														":accessProfileId"
													],
													"variable": [
														{
															"key": "accessProfileId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Usecases",
			"item": [
				{
					"name": "Associate policyactions and application with API",
					"item": [
						{
							"name": "Create API fromURL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let apiResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"apiID\", apiResponse.apiResponse.api.id);",
											"pm.environment.set(\"policyID\", apiResponse.apiResponse.api.policies[0]);",
											"",
											"let api = apiResponse.apiResponse.api;",
											"api.apiDefinition.tags = api.apiDefinition.tags || [];",
											"api.apiDefinition.apiTags = api.apiDefinition.apiTags || [];",
											"console.log(pm.variables.get(\"buildId\"));",
											"if (pm.variables.get(\"buildId\") !== undefined && pm.variables.get(\"buildId\") !== \"\") {",
											"    api.apiDefinition.tags.push({\"name\":\"BuildId:{{buildId}}\"});",
											"    api.apiDefinition.apiTags.push(\"BuildId:{{buildId}}\");",
											"}",
											"if (pm.variables.get(\"buildNumber\") !== undefined && pm.variables.get(\"buildNumber\") !== \"\") {",
											"    api.apiDefinition.tags.push({\"name\":\"BuildNumber:{{buildNumber}}\"});",
											"    api.apiDefinition.apiTags.push(\"BuildNumber:{{buildNumber}}\");",
											"}",
											"if (pm.variables.get(\"definitionName\") !== undefined && pm.variables.get(\"definitionName\") !== \"\") {",
											"    api.apiDefinition.tags.push({\"name\":\"PipelineName:{{definitionName}}\"});",
											"    api.apiDefinition.apiTags.push(\"PipelineName:{{definitionName}}\");",
											"}",
											"//    api.apiDefinition.tags.push({\"name\":\"PipelineVersion:{{definitionVersion}}\"});",
											"//    api.apiDefinition.apiTags.push(\"PipelineVersion:{{definitionVersion}}\");",
											"let apiString = JSON.stringify(api);",
											"pm.globals.set(\"api\", apiString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiVersion\": \"{{apiVersion}}\",\n    \"type\": \"swagger\",\n    \"url\": \"https://petstore.swagger.io/v2/swagger.json\",\n    \"apiName\": \"{{apiName}}_Application\",\n    \"apiDescription\": \"Create policy actions, applications and associate them with API\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/apis",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update the API with tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "{{hostname}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{api}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/apis/{{apiID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis",
										"{{apiID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create IAM Policy Action",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let policyActionResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"iamPolicyActionID\", policyActionResponse.policyAction.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Identify & Authorize Application\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"evaluatePolicy\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"logicalConnector\",\r\n                \"values\": [\r\n                    \"OR\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"allowAnonymous\",\r\n                \"values\": [\r\n                    \"false\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"IdentificationRule\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"identificationType\",\r\n                        \"values\": [\r\n                            \"apiKey\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": \"false\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Log Invocation Policy Action",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let policyActionResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"logInvocationPolicyActionID\", policyActionResponse.policyAction.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Log Invocation\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"logInvocation\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"storeRequestPayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponsePayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeAsZip\",\r\n                \"values\": [\r\n                    \"false\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"logGenerationFrequency\",\r\n                \"values\": [\r\n                    \"Always\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Policy by PolicyID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let policyResponse=JSON.parse(responseBody);",
											"pm.environment.set()",
											"pm.environment.set(\"policyName\",\"\"+policyResponse.policy.names[0].value);",
											"pm.environment.set(\"policyDescription\",policyResponse.policy.descriptions[0].value);",
											"    ",
											"let policyEnforcements=policyResponse.policy.policyEnforcements;",
											"for(var i=0;i<policyEnforcements.length;i++){",
											"    if(policyEnforcements[i].stageKey==\"routing\"){",
											"        pm.environment.set(\"routingPolicyActionID\",policyEnforcements[i].enforcements[0].enforcementObjectId);",
											"    }",
											"    if(policyEnforcements[i].stageKey==\"transport\"){",
											"        pm.environment.set(\"transportPolicyActionID\",policyEnforcements[i].enforcements[0].enforcementObjectId);",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/policies/{{policyID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										"{{policyID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate created Policy Actions with API Policy",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policy\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"{{policyName}}\",\r\n                \"locale\": \"English\"\r\n            }\r\n        ],\r\n        \"descriptions\": [\r\n            {\r\n                \"value\": \"{{policyDescription}}\",\r\n                \"locale\": \"English\"\r\n            }\r\n        ],\r\n        \"scope\": {\r\n            \"scopeConditions\": []\r\n        },\r\n        \"policyEnforcements\": [\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{routingPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"routing\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{transportPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"transport\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{iamPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"IAM\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{logInvocationPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"LMT\"\r\n            }\r\n        ],\r\n        \"policyScope\": \"SERVICE\",\r\n        \"global\": false,\r\n        \"active\": false,\r\n        \"systemPolicy\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policies/{{policyID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										"{{policyID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application with API key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let applicatonResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"applicationID\", applicatonResponse.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"API Key Application\",\r\n    \"description\": \"This application contains no specific identifier, API key is created automatically\",\r\n    \"version\": \"1.0\",\r\n    \"contactEmails\": [],\r\n    \"siteURLs\": [],\r\n    \"identifiers\": [],\r\n    \"consumingAPIs\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/applications",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate Application with API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiIDs\": [\r\n        \"{{apiID}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/applications/{{applicationID}}/apis",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"applications",
										"{{applicationID}}",
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/apis/{{apiID}}/activate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis",
										"{{apiID}}",
										"activate"
									]
								}
							},
							"response": []
						}
					],
					"description": "Explanation:\r\n\r\nThis postman collection contains API Gateway REST service to create an API with IAM and LMT policy and associate application with it.\r\n\r\nStep 1:\r\nCreate API using file\r\n\r\nStep 2:\r\nCreate IAM Policy Action\r\n\r\nStep 3:\r\nCreate Log Invocation LMT Policy Action\r\n\r\nStep 4:\r\nGet Policy details by policyID\r\n\r\nStep 5:\r\nAssociate the created policy action with it\r\n\r\nStep 6:\r\nCreate Application with API key\r\n\r\nStep 7:\r\nAssociate created application with API\r\n\r\nStep 8:\r\nActivate the API",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "API with Custom Extension Policy",
					"item": [
						{
							"name": "Create API from URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let apiResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"apiID\", apiResponse.apiResponse.api.id);",
											"pm.environment.set(\"policyID\", apiResponse.apiResponse.api.policies[0]);",
											"",
											"let api = apiResponse.apiResponse.api;",
											"api.apiDefinition.tags = api.apiDefinition.tags || [];",
											"api.apiDefinition.apiTags = api.apiDefinition.apiTags || [];",
											"console.log(pm.variables.get(\"buildId\"));",
											"if (pm.variables.get(\"buildId\") !== undefined && pm.variables.get(\"buildId\") !== \"\") {",
											"    api.apiDefinition.tags.push({\"name\":\"BuildId:{{buildId}}\"});",
											"    api.apiDefinition.apiTags.push(\"BuildId:{{buildId}}\");",
											"}",
											"if (pm.variables.get(\"buildNumber\") !== undefined && pm.variables.get(\"buildNumber\") !== \"\") {",
											"    api.apiDefinition.tags.push({\"name\":\"BuildNumber:{{buildNumber}}\"});",
											"    api.apiDefinition.apiTags.push(\"BuildNumber:{{buildNumber}}\");",
											"}",
											"if (pm.variables.get(\"definitionName\") !== undefined && pm.variables.get(\"definitionName\") !== \"\") {",
											"    api.apiDefinition.tags.push({\"name\":\"PipelineName:{{definitionName}}\"});",
											"    api.apiDefinition.apiTags.push(\"PipelineName:{{definitionName}}\");",
											"}",
											"//    api.apiDefinition.tags.push({\"name\":\"PipelineVersion:{{definitionVersion}}\"});",
											"//    api.apiDefinition.apiTags.push(\"PipelineVersion:{{definitionVersion}}\");",
											"let apiString = JSON.stringify(api);",
											"pm.globals.set(\"api\", apiString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiVersion\": \"{{apiVersion}}\",\n    \"type\": \"swagger\",\n    \"url\": \"https://petstore.swagger.io/v2/swagger.json\",\n    \"apiName\": \"{{apiName}}_Custom_Extension\",\n    \"apiDescription\": \"API Gateway to provide Custom Extension support to allow the customer to implement a custom logic and make a call out to it by configuring a Custom Extension policy in the API Gateway policy enforcement.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/apis",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update the API with tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "{{hostname}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{api}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/apis/{{apiID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis",
										"{{apiID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create External callout Custom Extension Policy Action",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let apiResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"policyActionID\",apiResponse.policyAction.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n       \r\n        \"names\": [\r\n            {\r\n                \"value\": \"Custom Extension\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"customPolicy\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"customExtensionType\",\r\n                \"values\": [\r\n                    \"externalCallout\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"externalEndpoint\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"endpointUri\",\r\n                        \"values\": [\r\n                            \"http://dummyhost:8090/services/jsonTransformation\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"externalEndpointMethod\",\r\n                        \"values\": [\r\n                            \"CUSTOM\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"endpointSSLConfig\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"templateKey\": \"keyStoreAlias\",\r\n                                \"values\": [\r\n                                    \"DEFAULT_IS_KEYSTORE\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"keyAlias\",\r\n                                \"values\": [\r\n                                    \"ssos\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"truststoreAlias\",\r\n                                \"values\": [\r\n                                    \"DEFAULT_IS_TRUSTSTORE\"\r\n                                ]\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"connectTimeout\",\r\n                        \"values\": [\r\n                            \"3\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"readTimeout\",\r\n                        \"values\": [\r\n                            \"4\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"mashupPathParamTransformation\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"templateKey\": \"mashupPathParams\",\r\n                                \"parameters\": [\r\n                                    {\r\n                                        \"templateKey\": \"mashupPathParamName\",\r\n                                        \"values\": [\r\n                                            \"accept\"\r\n                                        ]\r\n                                    },\r\n                                    {\r\n                                        \"templateKey\": \"mashupPathParamValue\",\r\n                                        \"values\": [\r\n                                            \"${request.headers.HEADER_NAME}\"\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"mashupHeaderTransformation\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"useIncomingHeaders\",\r\n                        \"values\": [\r\n                            \"true\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"customHeaders\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"templateKey\": \"headerName\",\r\n                                \"values\": [\r\n                                    \"Content-type\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"headerValue\",\r\n                                \"values\": [\r\n                                    \"${request.headers.HEADER_NAME}\"\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"mashupQueryParamsTransformation\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"mashupQueryParams\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"templateKey\": \"mashupQueryParamName\",\r\n                                \"values\": [\r\n                                    \"accept\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"mashupQueryParamValue\",\r\n                                \"values\": [\r\n                                    \"${request.headers.HEADER_NAME}\"\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"customExtensionResponseProcessing\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"copyEntireResponse\",\r\n                        \"values\": [\r\n                            \"true\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"abortInCaseOfFailure\",\r\n                        \"values\": [\r\n                            \"true\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"customExtensionRequestProcessing\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"requestPayload\",\r\n                        \"values\": [\r\n                            \"{\\n\\\"id\\\":2048057393,\\n\\\"category\\\":{\\n\\\"id\\\":780937122,\\n\\\"name\\\":\\\"bBcyJsVIPs\\\",\\n},\\n\\\"name\\\":\\\"i\\\",\\n\\\"photoUrls\\\":[],\\n\\\"tags\\\":[\\n{\\n\\\"id\\\":1543548e65,\\n\\\"name\\\":\\\"jjuyfguyliou\\\"\\n}\\n],\\n\\\"status\\\":\\\"njiyhbuv\\\"\\n\\n}\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": false\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Policy details by PolicyID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"routing\", jsonData.policy.policyEnforcements[1].enforcements[0].enforcementObjectId);",
											"pm.environment.set(\"transport\", jsonData.policy.policyEnforcements[0].enforcements[0].enforcementObjectId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/policies/{{policyID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										"{{policyID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update API Policy with Custom Extension",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policy\": {\r\n        \r\n        \"names\": [\r\n            {\r\n                \"value\": \"Default Policy for API custom extension\",\r\n                \"locale\": \"English\"\r\n            }\r\n        ],\r\n        \"descriptions\": [\r\n            {\r\n                \"value\": \"\",\r\n                \"locale\": \"English\"\r\n            }\r\n        ],\r\n        \"scope\": {\r\n            \"scopeConditions\": []\r\n        },\r\n        \"policyEnforcements\": [\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{policyActionID}}\",\r\n                        \"order\": \"0\"\r\n                    }\r\n                ],\r\n                \"stageKey\": \"requestPayloadProcessing\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{routing}}\",\r\n                        \"order\": \"0\"\r\n                    }\r\n                ],\r\n                \"stageKey\": \"routing\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{transport}}\",\r\n                        \"order\": \"0\"\r\n                    }\r\n                ],\r\n                \"stageKey\": \"transport\"\r\n            }\r\n        ],\r\n        \"policyScope\": \"SERVICE\",\r\n        \"active\": false,\r\n        \"global\": false,\r\n        \"systemPolicy\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policies/{{policyID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										"{{policyID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}"
								},
								"url": {
									"raw": "{{baseURL}}/apis/{{apiID}}/activate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis",
										"{{apiID}}",
										"activate"
									]
								}
							},
							"response": []
						}
					],
					"description": "Explanation:\nCreate API with External callout custom extension in Request processing stage.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "API with Scope Policy",
					"item": [
						{
							"name": "Create API from URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let apiResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"apiID\", apiResponse.apiResponse.api.id);",
											"pm.environment.set(\"policyID\", apiResponse.apiResponse.api.policies[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiVersion\": \"{{apiVersion}}\",\r\n    \"type\": \"swagger\",\r\n    \"url\": \"https://petstore.swagger.io/v2/swagger.json\",\r\n    \"apiName\": \"{{apiName}}_Scope_Policy\",\r\n    \"apiDescription\": \"Petstore API with Log Invocation Traffic Monitoring Policy at Scope level\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/apis",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get API Details by API ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/apis/{{apiID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis",
										"{{apiID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Log Invocation Policy Action",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let policyActionResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"logInvocationPolicyActionID\", policyActionResponse.policyAction.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Log Invocation\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"logInvocation\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"storeRequestHeaders\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeRequestPayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponseHeaders\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponsePayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeClientMessage\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeServerMessage\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeAsZip\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"logGenerationFrequency\",\r\n                \"values\": [\r\n                    \"OnSuccess\"                  \r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"SMTP\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"emailTo\",\r\n                        \"values\": [\r\n                            \"support@softwareag.com\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"localLog\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"logLevel\",\r\n                        \"values\": [\r\n                            \"Error\"                       \r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Scope Policy with LMT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let policyResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"scopePolicyID\", policyResponse.policy.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policy\": {\n        \"names\": [\n            {\n                \"value\": \"Petstore_scopePolicy\",\n                \"locale\": \"English\"\n            }\n        ],\n        \"descriptions\": [\n            {\n                \"value\": \"\",\n                \"locale\": \"English\"\n            }\n        ],\n        \"scope\": {\n            \"scopeConditions\": []\n        },\n        \"policyEnforcements\": [\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"{{logInvocationPolicyActionID}}\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"LMT\"\n            }\n        ],\n        \"policyScope\": \"SCOPE\",\n        \"global\": false,\n        \"active\": false,\n        \"systemPolicy\": false\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policies",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update API with Scope Policy",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"restrictViewAsset\": false,\n    \"id\": \"{{apiID}}\",\n    \"apiName\": \"{{apiName}}_Scope_Policy\",\n    \"apiVersion\": \"{{apiVersion}}\",\n    \"apiDescription\": \"Petstore API with Log Invocation Traffic Monitoring Policy at Scope level\",\n    \"isActive\": true,\n    \"nativeEndpoint\": [\n        {\n            \"passSecurityHeaders\": true,\n            \"uri\": \"http://petstore.swagger.io/v2\",\n            \"connectionTimeoutDuration\": 0,\n            \"alias\": false\n        },\n        {\n            \"passSecurityHeaders\": true,\n            \"uri\": \"https://petstore.swagger.io/v2\",\n            \"connectionTimeoutDuration\": 0,\n            \"alias\": false\n        }\n    ],\n    \"owner\": \"Administrator\",\n    \"policies\": [\n        \"{{policyID}}\"\n    ],\n    \"type\": \"REST\",\n    \"systemVersion\": 1,\n    \"maturityState\": \"Beta\",\n    \"apiGroups\": null,\n    \"scopes\": [\n        {\n            \"name\": \"Pet Scope\",\n            \"description\": \"\",\n            \"policies\": [\n                \"{{scopePolicyID}}\"\n            ]\n        }\n    ],\n    \"apiDocuments\": [],\n    \"apiDefinition\": {\n        \"info\": {\n            \"title\": \"Swagger Petstore\",\n            \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n            \"version\": \"1.0.5\",\n            \"termsOfService\": \"http://swagger.io/terms/\",\n            \"contact\": {\n                \"email\": \"apiteam@swagger.io\"\n            },\n            \"license\": {\n                \"name\": \"Apache 2.0\",\n                \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n            }\n        },\n        \"serviceRegistryDisplayName\": \"Petstore_1.0.5\",\n        \"servers\": [\n            {\n                \"url\": \"https://petstore.swagger.io/v2\",\n                \"variables\": {}\n            },\n            {\n                \"url\": \"http://petstore.swagger.io/v2\",\n                \"variables\": {}\n            }\n        ],\n        \"security\": [],\n        \"securityDefinitions\": {\n            \"api_key\": {\n                \"in\": \"header\",\n                \"name\": \"api_key\",\n                \"type\": \"apiKey\"\n            },\n            \"petstore_auth\": {\n                \"authorizationUrl\": \"https://petstore.swagger.io/oauth/authorize\",\n                \"flow\": \"implicit\",\n                \"scopes\": {\n                    \"read:pets\": \"read your pets\",\n                    \"write:pets\": \"modify pets in your account\"\n                },\n                \"type\": \"oauth2\"\n            }\n        },\n        \"definitions\": {},\n        \"externalDocs\": [\n            {\n                \"description\": \"Find out more about Swagger\",\n                \"url\": \"http://swagger.io\"\n            }\n        ],\n        \"parameters\": {},\n        \"paths\": {\n            \"/pet\": {\n                \"displayName\": \"/pet\",\n                \"enabled\": true,\n                \"scopes\": [\n                    \"Pet Scope\"\n                ],\n                \"get\": {\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"requestBody\",\n                        \"content\": {}\n                    },\n                    \"responses\": {},\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                },\n                \"put\": {\n                    \"description\": \"\",\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Update an existing pet\",\n                    \"operationId\": \"updatePet\",\n                    \"consumes\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"updatePet\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"examples\": {},\n                                \"schema\": {\n                                    \"type\": \"ref\",\n                                    \"$ref\": \"#/components/schemas/Pet\",\n                                    \"ref\": \"Pet\"\n                                },\n                                \"refSchema\": \"#/components/schemas/Pet\"\n                            },\n                            \"application/xml\": {\n                                \"examples\": {},\n                                \"schema\": {\n                                    \"type\": \"ref\",\n                                    \"$ref\": \"#/components/schemas/Pet\",\n                                    \"ref\": \"Pet\"\n                                },\n                                \"refSchema\": \"#/components/schemas/Pet\"\n                            }\n                        }\n                    },\n                    \"responses\": {\n                        \"400\": {\n                            \"schema\": {},\n                            \"content\": {},\n                            \"examples\": {},\n                            \"headers\": {},\n                            \"description\": \"Invalid ID supplied\",\n                            \"links\": {}\n                        },\n                        \"404\": {\n                            \"schema\": {},\n                            \"content\": {},\n                            \"examples\": {},\n                            \"headers\": {},\n                            \"description\": \"Pet not found\",\n                            \"links\": {}\n                        },\n                        \"405\": {\n                            \"schema\": {},\n                            \"content\": {},\n                            \"examples\": {},\n                            \"headers\": {},\n                            \"description\": \"Validation exception\",\n                            \"links\": {}\n                        }\n                    },\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                },\n                \"post\": {\n                    \"description\": \"\",\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Add a new pet to the store\",\n                    \"operationId\": \"addPet\",\n                    \"consumes\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"addPet\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"examples\": {},\n                                \"schema\": {\n                                    \"type\": \"ref\",\n                                    \"$ref\": \"#/components/schemas/Pet\",\n                                    \"ref\": \"Pet\"\n                                },\n                                \"refSchema\": \"#/components/schemas/Pet\"\n                            },\n                            \"application/xml\": {\n                                \"examples\": {},\n                                \"schema\": {\n                                    \"type\": \"ref\",\n                                    \"$ref\": \"#/components/schemas/Pet\",\n                                    \"ref\": \"Pet\"\n                                },\n                                \"refSchema\": \"#/components/schemas/Pet\"\n                            }\n                        }\n                    },\n                    \"responses\": {\n                        \"405\": {\n                            \"schema\": {},\n                            \"content\": {},\n                            \"examples\": {},\n                            \"headers\": {},\n                            \"description\": \"Invalid input\",\n                            \"links\": {}\n                        }\n                    },\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                }\n            },\n            \"/test\": {\n                \"displayName\": \"/test\",\n                \"enabled\": true,\n                \"scopes\": [],\n                \"get\": {\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"requestBody\",\n                        \"content\": {}\n                    },\n                    \"responses\": {},\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                },\n                \"put\": {\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"requestBody\",\n                        \"content\": {}\n                    },\n                    \"responses\": {},\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                },\n                \"post\": {\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"requestBody\",\n                        \"content\": {}\n                    },\n                    \"responses\": {},\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                }\n            }\n        },\n        \"tags\": [\n            {\n                \"name\": \"pet\",\n                \"description\": \"\"\n            },\n            {\n                \"name\": \"BuildId:{{buildId}}\",\n                \"description\": \"\"\n            },\n            {\n                \"name\": \"BuildNumber:{{buildNumber}}\",\n                \"description\": \"\"\n            },\n            {\n                \"name\": \"PipelineName:{{definitionName}}\",\n                \"description\": \"\"\n            }\n        ],\n        \"apiTags\": [\n            \"pet\",\n            \"BuildId:{{buildId}}\",\n            \"BuildNumber:{{buildNumber}}\",\n            \"PipelineName:{{definitionName}}\"\n        ],\n        \"components\": {\n            \"schemas\": {\n                \"ApiResponse\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"code\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\"},\\\"type\\\":{\\\"type\\\":\\\"string\\\"}}}\"\n                },\n                \"Category\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"Category\\\"}}\"\n                },\n                \"Order\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"complete\\\":{\\\"type\\\":\\\"boolean\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"petId\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"quantity\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"shipDate\\\":{\\\"type\\\":\\\"string\\\",\\\"format\\\":\\\"date-time\\\"},\\\"status\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"Order Status\\\",\\\"enum\\\":[\\\"placed\\\",\\\"approved\\\",\\\"delivered\\\"]}},\\\"xml\\\":{\\\"name\\\":\\\"Order\\\"}}\"\n                },\n                \"Pet\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"required\\\":[\\\"photoUrls\\\",\\\"name\\\"],\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"category\\\":{\\\"$ref\\\":\\\"#/components/schemas/Category\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\",\\\"example\\\":\\\"doggie\\\"},\\\"photoUrls\\\":{\\\"type\\\":\\\"array\\\",\\\"xml\\\":{\\\"wrapped\\\":true},\\\"items\\\":{\\\"type\\\":\\\"string\\\",\\\"xml\\\":{\\\"name\\\":\\\"photoUrl\\\"}}},\\\"status\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"pet status in the store\\\",\\\"enum\\\":[\\\"available\\\",\\\"pending\\\",\\\"sold\\\"]},\\\"tags\\\":{\\\"type\\\":\\\"array\\\",\\\"xml\\\":{\\\"wrapped\\\":true},\\\"items\\\":{\\\"$ref\\\":\\\"#/components/schemas/Tag\\\",\\\"xml\\\":{\\\"name\\\":\\\"tag\\\"}}}},\\\"xml\\\":{\\\"name\\\":\\\"Pet\\\"}}\"\n                },\n                \"Tag\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"Tag\\\"}}\"\n                },\n                \"User\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"email\\\":{\\\"type\\\":\\\"string\\\"},\\\"firstName\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"lastName\\\":{\\\"type\\\":\\\"string\\\"},\\\"password\\\":{\\\"type\\\":\\\"string\\\"},\\\"phone\\\":{\\\"type\\\":\\\"string\\\"},\\\"userStatus\\\":{\\\"type\\\":\\\"integer\\\",\\\"description\\\":\\\"User Status\\\",\\\"format\\\":\\\"int32\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"User\\\"}}\"\n                }\n            },\n            \"parameters\": {},\n            \"headers\": {},\n            \"examples\": {},\n            \"responses\": {},\n            \"requestBodies\": {},\n            \"links\": {},\n            \"callbacks\": {}\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/apis/{{apiID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis",
										"{{apiID}}"
									]
								},
								"description": "Scope Policy:\n--------------\nWe can add a scope policy to multiple resource and methods. Resource and Method can have multiple scope policies.\n\nGet the API details using our rest service and update the api with scope policy changes.\n\nAdding scope policy to the API:\n-----------------------------------\nLike policies we have 'scopes' object to add the Scope Policy to an API. We can add 'n' number of Scope Policy to an API with unique name.\n\n    \"scopes\": [\n        {\n            \"name\": \"Pet Scope\",\n            \"description\": \"\",\n            \"policies\": [\n                \"{{scopePolicyID}}\"\n            ]\n        }\n    ]\n\n\nAdding scope policy at the Resource Level:\n-------------------------------------------\nAdd Pet Scope to the Resource Level, if it is applied at the Resource level then it will be applicable to all the Methods under this Resource.\n\n    \"/pet\": {\n        \"displayName\": \"/pet\",\n        \"enabled\": true,\n        \"scopes\": [\n            \"Pet Scope\"\n        ],\n        \"get\": {\n            \"scopes\": [],\n            \"enabled\": true,\n            \"requestBody\": {\n                \"name\": \"requestBody\",\n                \"content\": {}\n            },\n            \"responses\": {},\n            \"mockedResponses\": {},\n            \"mockedConditionsBasedCustomResponsesList\": []\n        }\n    }\n\n\nAdding scope policy at the Method Level:\n------------------------------------------\nAdd scope to particular method.\n\n    \"/pet\": {\n        \"displayName\": \"/pet\",\n        \"enabled\": true,\n        \"scopes\": [],\n        \"get\": {\n            \"scopes\": [\n            \t\"Pet Scope\"\n            ],\n            \"enabled\": true,\n            \"requestBody\": {\n                \"name\": \"requestBody\",\n                \"content\": {}\n            },\n            \"responses\": {},\n            \"mockedResponses\": {},\n            \"mockedConditionsBasedCustomResponsesList\": []\n        }\n    }\n"
							},
							"response": []
						},
						{
							"name": "Activate API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseURL}}/apis/{{apiID}}/activate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis",
										"{{apiID}}",
										"activate"
									]
								},
								"description": "Scope Policy:\n--------------\nWe can add a scope policy to multiple resource and methods. Resource and Method can have multiple scope policies.\n\nGet the API details using our rest service and update the api with scope policy changes.\n\nAdding scope policy to the API:\n-----------------------------------\nLike policies we have 'scopes' object to add the Scope Policy to an API. We can add 'n' number of Scope Policy to an API with unique name.\n\n    \"scopes\": [\n        {\n            \"name\": \"Pet Scope\",\n            \"description\": \"\",\n            \"policies\": [\n                \"{{scopePolicyID}}\"\n            ]\n        }\n    ]\n\n\nAdding scope policy at the Resource Level:\n-------------------------------------------\nAdd Pet Scope to the Resource Level, if it is applied at the Resource level then it will be applicable to all the Methods under this Resource.\n\n    \"/pet\": {\n        \"displayName\": \"/pet\",\n        \"enabled\": true,\n        \"scopes\": [\n            \"Pet Scope\"\n        ],\n        \"get\": {\n            \"scopes\": [],\n            \"enabled\": true,\n            \"requestBody\": {\n                \"name\": \"requestBody\",\n                \"content\": {}\n            },\n            \"responses\": {},\n            \"mockedResponses\": {},\n            \"mockedConditionsBasedCustomResponsesList\": []\n        }\n    }\n\n\nAdding scope policy at the Method Level:\n------------------------------------------\nAdd scope to particular method.\n\n    \"/pet\": {\n        \"displayName\": \"/pet\",\n        \"enabled\": true,\n        \"scopes\": [],\n        \"get\": {\n            \"scopes\": [\n            \t\"Pet Scope\"\n            ],\n            \"enabled\": true,\n            \"requestBody\": {\n                \"name\": \"requestBody\",\n                \"content\": {}\n            },\n            \"responses\": {},\n            \"mockedResponses\": {},\n            \"mockedConditionsBasedCustomResponsesList\": []\n        }\n    }\n"
							},
							"response": []
						}
					]
				},
				{
					"name": "OAuth2 API with scope mapping and application",
					"item": [
						{
							"name": "Create API fromURL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let apiResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"apiID\", apiResponse.apiResponse.api.id);",
											"pm.environment.set(\"policyID\", apiResponse.apiResponse.api.policies[0]);",
											"",
											"let api = apiResponse.apiResponse.api;",
											"api.apiDefinition.tags = api.apiDefinition.tags || [];",
											"api.apiDefinition.apiTags = api.apiDefinition.apiTags || [];",
											"console.log(pm.variables.get(\"buildId\"));",
											"if (pm.variables.get(\"buildId\") !== undefined && pm.variables.get(\"buildId\") !== \"\") {",
											"    api.apiDefinition.tags.push({\"name\":\"BuildId:{{buildId}}\"});",
											"    api.apiDefinition.apiTags.push(\"BuildId:{{buildId}}\");",
											"}",
											"if (pm.variables.get(\"buildNumber\") !== undefined && pm.variables.get(\"buildNumber\") !== \"\") {",
											"    api.apiDefinition.tags.push({\"name\":\"BuildNumber:{{buildNumber}}\"});",
											"    api.apiDefinition.apiTags.push(\"BuildNumber:{{buildNumber}}\");",
											"}",
											"if (pm.variables.get(\"definitionName\") !== undefined && pm.variables.get(\"definitionName\") !== \"\") {",
											"    api.apiDefinition.tags.push({\"name\":\"PipelineName:{{definitionName}}\"});",
											"    api.apiDefinition.apiTags.push(\"PipelineName:{{definitionName}}\");",
											"}",
											"//    api.apiDefinition.tags.push({\"name\":\"PipelineVersion:{{definitionVersion}}\"});",
											"//    api.apiDefinition.apiTags.push(\"PipelineVersion:{{definitionVersion}}\");",
											"let apiString = JSON.stringify(api);",
											"pm.globals.set(\"api\", apiString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiVersion\": \"{{apiVersion}}\",\n    \"type\": \"swagger\",\n    \"url\": \"https://petstore.swagger.io/v2/swagger.json\",\n    \"apiName\": \"{{apiName}}_OAuth2\",\n    \"apiDescription\": \"Create policy actions, applications and associate it with API\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/apis",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update the API with tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "{{hostname}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{api}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/apis/{{apiID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis",
										"{{apiID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create IAM Policy Action",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let policyActionResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"iamPolicyActionID\", policyActionResponse.policyAction.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Identify & Authorize Application\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"evaluatePolicy\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"logicalConnector\",\r\n                \"values\": [\r\n                    \"OR\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"allowAnonymous\",\r\n                \"values\": [\r\n                    \"false\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"IdentificationRule\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"identificationType\",\r\n                        \"values\": [\r\n                            \"oAuth2Token\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": \"false\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Log Invocation Policy Action",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let policyActionResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"logInvocationPolicyActionID\", policyActionResponse.policyAction.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Log Invocation\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"logInvocation\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"storeRequestPayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponsePayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeRequestHeaders\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponseHeaders\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeAsZip\",\r\n                \"values\": [\r\n                    \"false\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"logGenerationFrequency\",\r\n                \"values\": [\r\n                    \"Always\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Policy by PolicyID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let policyResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"policyName\",\"\"+policyResponse.policy.names[0].value);",
											"pm.environment.set(\"policyDescription\",policyResponse.policy.descriptions[0].value);",
											"    ",
											"let policyEnforcements=policyResponse.policy.policyEnforcements;",
											"for(var i=0;i<policyEnforcements.length;i++){",
											"    if(policyEnforcements[i].stageKey==\"routing\"){",
											"        pm.environment.set(\"routingPolicyActionID\",policyEnforcements[i].enforcements[0].enforcementObjectId);",
											"    }",
											"    if(policyEnforcements[i].stageKey==\"transport\"){",
											"        pm.environment.set(\"transportPolicyActionID\",policyEnforcements[i].enforcements[0].enforcementObjectId);",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/policies/{{policyID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										"{{policyID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate created Policy Actions with API Policy",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policy\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"{{policyName}}\",\r\n                \"locale\": \"English\"\r\n            }\r\n        ],\r\n        \"descriptions\": [\r\n            {\r\n                \"value\": \"{{policyDescription}}\",\r\n                \"locale\": \"English\"\r\n            }\r\n        ],\r\n        \"scope\": {\r\n            \"scopeConditions\": []\r\n        },\r\n        \"policyEnforcements\": [\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{routingPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"routing\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{transportPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"transport\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{iamPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"IAM\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{logInvocationPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"LMT\"\r\n            }\r\n        ],\r\n        \"policyScope\": \"SERVICE\",\r\n        \"global\": false,\r\n        \"active\": false,\r\n        \"systemPolicy\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policies/{{policyID}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										"{{policyID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Scope mapping",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let applicatonResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"applicationID\", applicatonResponse.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"scopeName\": \"local:oauth_scope\",\r\n    \"scopeDescription\": \"Demo Scope Mapping\",\r\n    \"audience\": \"oauth_audience\",\r\n    \"apiScopes\": [\r\n        \"{{apiID}}\"\r\n    ],\r\n    \"requiredAuthScopes\": [\r\n        {\r\n            \"authServerAlias\": \"local\",\r\n            \"scopeName\": \"oauth_scope\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/scopes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"scopes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Local OAuth2 Strategy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let apiResponse=JSON.parse(responseBody);\r",
											"pm.environment.set(\"strategyID\", apiResponse.strategy.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"OAuthStrategy_{{apiName}}_OAuth2_{{apiVersion}}\",\n\t\"description\": \"OAuthStrategy Description\",\n\t\"authServerAlias\": \"local\",\n\t\"audience\": \"oauth_audience\",\n\t\"type\": \"OAUTH2\",\n\t\"dcrConfig\": {\n\t\t\"allowedGrantTypes\": [\n\t\t\t\"authorization_code\",\n\t\t\t\"password\",\n\t\t\t\"client_credentials\",\n\t\t\t\"refresh_token\",\n\t\t\t\"implicit\"\n\t\t],\n        \"scopes\": [\n            \"oauth_scope\"\n        ],\n\t\t\"redirectUris\": [\n\t\t\t\"https://redirectURI.com\"\n\t\t],\n\t\t\"authServer\": \"local\",\n\t\t\"applicationType\": \"web\",\n\t\t\"clientType\": \"CONFIDENTIAL\",\n\t\t\"expirationInterval\": 3600,\n\t\t\"refreshCount\": \"100\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/strategies",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"strategies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Application with Authentication Strategy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let applicatonResponse=JSON.parse(responseBody);",
											"pm.environment.set(\"applicationID\", applicatonResponse.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"OAuth2 Application\",\r\n    \"description\": \"This application contains OAuth2 Authentication Strategy\",\r\n    \"version\": \"1.0\",\r\n    \"contactEmails\": [],\r\n    \"siteURLs\": [],\r\n    \"identifiers\": [],\r\n\t\"authStrategyIds\": [\r\n\t\t\"{{strategyID}}\"\r\n\t],\r\n    \"consumingAPIs\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/applications",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate Application with API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apiIDs\": [\r\n        \"{{apiID}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/applications/{{applicationID}}/apis",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"applications",
										"{{applicationID}}",
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate API",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/apis/{{apiID}}/activate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"apis",
										"{{apiID}}",
										"activate"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://{{ip}}:{{port}}/rest/apigateway"
		},
		{
			"key": "user",
			"value": "Administrator",
			"disabled": true
		},
		{
			"key": "password",
			"value": "manage",
			"disabled": true
		},
		{
			"key": "ip",
			"value": "localhost",
			"disabled": true
		},
		{
			"key": "port",
			"value": "5556",
			"disabled": true
		},
		{
			"key": "apiName",
			"value": "Petstore"
		},
		{
			"key": "apiVersion",
			"value": "1.0"
		},
		{
			"key": "buildId",
			"value": "123"
		},
		{
			"key": "buildNumber",
			"value": "456"
		},
		{
			"key": "definitionName",
			"value": "manual"
		}
	]
}